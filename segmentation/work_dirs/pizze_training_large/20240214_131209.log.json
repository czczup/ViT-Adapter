{"env_info": "sys.platform: linux\nPython: 3.7.13 (default, Mar 29 2022, 02:18:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1,2,3: NVIDIA L40\nCUDA_HOME: /usr/local/cuda\nNVCC: Build cuda_11.3.r11.3/compiler.29920130_0\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.9.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.0+cu111\nOpenCV: 4.9.0\nMMCV: 1.4.2\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMSegmentation: 0.20.2+94ffa6b", "seed": 1309373029, "exp_name": "pizze_training_large.py", "mmseg_version": "0.20.2+94ffa6b", "config": "num_things_classes = 6\nnum_stuff_classes = 0\nnum_classes = 6\nnorm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoderMask2Former',\n    pretrained=\n    '/workspace/ViT-Adapter/segmentation/mask2former_beit_adapter_large_896_80k_ade20k.pth.tar',\n    backbone=dict(\n        type='BEiTAdapter',\n        patch_size=16,\n        embed_dim=1024,\n        depth=24,\n        num_heads=16,\n        mlp_ratio=4,\n        qkv_bias=True,\n        use_abs_pos_emb=False,\n        use_rel_pos_bias=True,\n        img_size=896,\n        init_values=1e-06,\n        drop_path_rate=0.3,\n        conv_inplane=64,\n        n_points=4,\n        deform_num_heads=16,\n        cffn_ratio=0.25,\n        deform_ratio=0.5,\n        with_cp=True,\n        interaction_indexes=[[0, 5], [6, 11], [12, 17], [18, 23]],\n        pretrained=\n        '/workspace/ViT-Adapter/segmentation/mask2former_beit_adapter_large_896_80k_ade20k.pth.tar'\n    ),\n    decode_head=dict(\n        type='Mask2FormerHead',\n        in_channels=[1024, 1024, 1024, 1024],\n        feat_channels=1024,\n        out_channels=1024,\n        in_index=[0, 1, 2, 3],\n        num_things_classes=6,\n        num_stuff_classes=0,\n        num_queries=200,\n        num_transformer_feat_level=3,\n        pixel_decoder=dict(\n            type='MSDeformAttnPixelDecoder',\n            num_outs=3,\n            norm_cfg=dict(type='GN', num_groups=32),\n            act_cfg=dict(type='ReLU'),\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=1024,\n                        num_heads=32,\n                        num_levels=3,\n                        num_points=4,\n                        im2col_step=64,\n                        dropout=0.0,\n                        batch_first=False,\n                        norm_cfg=None,\n                        init_cfg=None),\n                    ffn_cfgs=dict(\n                        type='FFN',\n                        embed_dims=1024,\n                        feedforward_channels=4096,\n                        num_fcs=2,\n                        ffn_drop=0.0,\n                        act_cfg=dict(type='ReLU', inplace=True),\n                        with_cp=True),\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm')),\n                init_cfg=None),\n            positional_encoding=dict(\n                type='SinePositionalEncoding', num_feats=512, normalize=True),\n            init_cfg=None),\n        enforce_decoder_input_project=False,\n        positional_encoding=dict(\n            type='SinePositionalEncoding', num_feats=512, normalize=True),\n        transformer_decoder=dict(\n            type='DetrTransformerDecoder',\n            return_intermediate=True,\n            num_layers=9,\n            transformerlayers=dict(\n                type='DetrTransformerDecoderLayer',\n                attn_cfgs=dict(\n                    type='MultiheadAttention',\n                    embed_dims=1024,\n                    num_heads=32,\n                    attn_drop=0.0,\n                    proj_drop=0.0,\n                    dropout_layer=None,\n                    batch_first=False),\n                ffn_cfgs=dict(\n                    embed_dims=1024,\n                    feedforward_channels=4096,\n                    num_fcs=2,\n                    act_cfg=dict(type='ReLU', inplace=True),\n                    ffn_drop=0.0,\n                    dropout_layer=None,\n                    add_identity=True,\n                    with_cp=True),\n                feedforward_channels=4096,\n                operation_order=('cross_attn', 'norm', 'self_attn', 'norm',\n                                 'ffn', 'norm')),\n            init_cfg=None),\n        loss_cls=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=False,\n            loss_weight=2.0,\n            reduction='mean',\n            class_weight=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1]),\n        loss_mask=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=True,\n            reduction='mean',\n            loss_weight=5.0),\n        loss_dice=dict(\n            type='DiceLoss',\n            use_sigmoid=True,\n            activate=True,\n            reduction='mean',\n            naive_dice=True,\n            eps=1.0,\n            loss_weight=5.0),\n        train_cfg=dict(\n            num_points=12544,\n            oversample_ratio=3.0,\n            importance_sample_ratio=0.75,\n            assigner=dict(\n                type='MaskHungarianAssigner',\n                cls_cost=dict(type='ClassificationCost', weight=2.0),\n                mask_cost=dict(\n                    type='CrossEntropyLossCost', weight=5.0, use_sigmoid=True),\n                dice_cost=dict(\n                    type='DiceCost', weight=5.0, pred_act=True, eps=1.0)),\n            sampler=dict(type='MaskPseudoSampler')),\n        test_cfg=dict(\n            panoptic_on=True,\n            semantic_on=False,\n            instance_on=True,\n            max_per_image=100,\n            iou_thr=0.8,\n            filter_low_score=True,\n            mode='slide',\n            crop_size=(896, 896),\n            stride=(512, 512))),\n    train_cfg=dict(\n        num_points=12544,\n        oversample_ratio=3.0,\n        importance_sample_ratio=0.75,\n        assigner=dict(\n            type='MaskHungarianAssigner',\n            cls_cost=dict(type='ClassificationCost', weight=2.0),\n            mask_cost=dict(\n                type='CrossEntropyLossCost', weight=5.0, use_sigmoid=True),\n            dice_cost=dict(\n                type='DiceCost', weight=5.0, pred_act=True, eps=1.0)),\n        sampler=dict(type='MaskPseudoSampler')),\n    test_cfg=dict(\n        panoptic_on=True,\n        semantic_on=False,\n        instance_on=True,\n        max_per_image=100,\n        iou_thr=0.8,\n        filter_low_score=True,\n        mode='slide',\n        crop_size=(896, 896),\n        stride=(512, 512)),\n    init_cfg=None)\ndataset_type = 'PizzeDataset'\ndata_root = 'data/dataset'\nimg_norm_cfg = dict(\n    mean=[71.20378926, 49.96402668, 36.47249101],\n    std=[40.74672974, 30.74751057, 20.52758501],\n    to_rgb=True)\ncrop_size = (896, 896)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', reduce_zero_label=True),\n    dict(type='RandomFlip', prob=0),\n    dict(\n        type='Normalize',\n        mean=[71.20378926, 49.96402668, 36.47249101],\n        std=[40.74672974, 30.74751057, 20.52758501],\n        to_rgb=True),\n    dict(type='Pad', size=(896, 896), pad_val=0, seg_pad_val=255),\n    dict(type='ToMask'),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=['img', 'gt_semantic_seg', 'gt_masks', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(3584, 896),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='ResizeToMultiple', size_divisor=32),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[71.20378926, 49.96402668, 36.47249101],\n                std=[40.74672974, 30.74751057, 20.52758501],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=4,\n    train=dict(\n        type='PizzeDataset',\n        data_root='data/dataset',\n        img_dir='images/training',\n        ann_dir='annotations/training',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', reduce_zero_label=True),\n            dict(type='RandomFlip', prob=0),\n            dict(\n                type='Normalize',\n                mean=[71.20378926, 49.96402668, 36.47249101],\n                std=[40.74672974, 30.74751057, 20.52758501],\n                to_rgb=True),\n            dict(type='Pad', size=(896, 896), pad_val=0, seg_pad_val=255),\n            dict(type='ToMask'),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_semantic_seg', 'gt_masks', 'gt_labels'])\n        ]),\n    val=dict(\n        type='PizzeDataset',\n        data_root='data/dataset',\n        img_dir='images/validation',\n        ann_dir='annotations/validation',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(3584, 896),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='ResizeToMultiple', size_divisor=32),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[71.20378926, 49.96402668, 36.47249101],\n                        std=[40.74672974, 30.74751057, 20.52758501],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='PizzeDataset',\n        data_root='data/dataset',\n        img_dir='images/validation',\n        ann_dir='annotations/validation',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(3584, 896),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='ResizeToMultiple', size_divisor=32),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[71.20378926, 49.96402668, 36.47249101],\n                        std=[40.74672974, 30.74751057, 20.52758501],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=10, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '/workspace/ViT-Adapter/segmentation/mask2former_beit_adapter_large_896_80k_ade20k.pth.tar'\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(\n    type='AdamW',\n    lr=2e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    constructor='LayerDecayOptimizerConstructor',\n    paramwise_cfg=dict(num_layers=24, layer_decay_rate=0.9))\noptimizer_config = dict()\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=80000)\ncheckpoint_config = dict(by_epoch=False, interval=10000, max_keep_ckpts=1)\nevaluation = dict(interval=200, metric='mIoU', pre_eval=True, save_best='mIoU')\npretrained = '/workspace/ViT-Adapter/segmentation/mask2former_beit_adapter_large_896_80k_ade20k.pth.tar'\nwork_dir = './work_dirs/pizze_training_large'\ngpu_ids = range(0, 4)\nauto_resume = False\ndevice = 'cuda'\nseed = 1309373029\n", "CLASSES": ["bg", "Anchovy", "Olives", "Salami", "Red_Pepper", "Yellow_Pepper"], "PALETTE": [[255, 255, 255], [0, 0, 255], [0, 255, 255], [0, 255, 0], [255, 255, 0], [255, 0, 0]], "hook_msgs": {}}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 0.0, "memory": 23497, "data_time": 0.01655, "decode.loss_cls": 4.81942, "decode.loss_mask": 1.16548, "decode.loss_dice": 2.83717, "decode.d0.loss_cls": 4.3112, "decode.d0.loss_mask": 1.21863, "decode.d0.loss_dice": 3.44684, "decode.d1.loss_cls": 5.09302, "decode.d1.loss_mask": 1.24271, "decode.d1.loss_dice": 2.97238, "decode.d2.loss_cls": 4.4961, "decode.d2.loss_mask": 1.18982, "decode.d2.loss_dice": 2.92131, "decode.d3.loss_cls": 3.91696, "decode.d3.loss_mask": 1.13961, "decode.d3.loss_dice": 2.93308, "decode.d4.loss_cls": 4.62654, "decode.d4.loss_mask": 1.18077, "decode.d4.loss_dice": 2.89024, "decode.d5.loss_cls": 3.90048, "decode.d5.loss_mask": 1.17751, "decode.d5.loss_dice": 2.88474, "decode.d6.loss_cls": 4.83691, "decode.d6.loss_mask": 1.14282, "decode.d6.loss_dice": 2.95582, "decode.d7.loss_cls": 4.65974, "decode.d7.loss_mask": 1.11707, "decode.d7.loss_dice": 2.89644, "decode.d8.loss_cls": 4.80092, "decode.d8.loss_mask": 1.14211, "decode.d8.loss_dice": 2.79621, "loss": 86.71206, "time": 2.15541}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 0.0, "memory": 23497, "data_time": 0.01175, "decode.loss_cls": 4.59548, "decode.loss_mask": 1.23849, "decode.loss_dice": 2.73476, "decode.d0.loss_cls": 4.30179, "decode.d0.loss_mask": 1.32646, "decode.d0.loss_dice": 3.39162, "decode.d1.loss_cls": 5.02799, "decode.d1.loss_mask": 1.23254, "decode.d1.loss_dice": 2.94165, "decode.d2.loss_cls": 4.39647, "decode.d2.loss_mask": 1.37082, "decode.d2.loss_dice": 2.91033, "decode.d3.loss_cls": 3.7788, "decode.d3.loss_mask": 1.28186, "decode.d3.loss_dice": 2.91983, "decode.d4.loss_cls": 4.4273, "decode.d4.loss_mask": 1.33865, "decode.d4.loss_dice": 2.87167, "decode.d5.loss_cls": 3.77305, "decode.d5.loss_mask": 1.18505, "decode.d5.loss_dice": 2.85125, "decode.d6.loss_cls": 4.72631, "decode.d6.loss_mask": 1.23374, "decode.d6.loss_dice": 2.88601, "decode.d7.loss_cls": 4.53324, "decode.d7.loss_mask": 1.26331, "decode.d7.loss_dice": 2.794, "decode.d8.loss_cls": 4.60961, "decode.d8.loss_mask": 1.21495, "decode.d8.loss_dice": 2.71781, "loss": 85.87482, "time": 2.11568}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 0.0, "memory": 23497, "data_time": 0.01115, "decode.loss_cls": 4.07975, "decode.loss_mask": 1.11857, "decode.loss_dice": 2.71555, "decode.d0.loss_cls": 4.31701, "decode.d0.loss_mask": 1.13913, "decode.d0.loss_dice": 3.43285, "decode.d1.loss_cls": 4.78548, "decode.d1.loss_mask": 1.15062, "decode.d1.loss_dice": 2.90657, "decode.d2.loss_cls": 4.08375, "decode.d2.loss_mask": 1.14703, "decode.d2.loss_dice": 2.96511, "decode.d3.loss_cls": 3.52795, "decode.d3.loss_mask": 1.18269, "decode.d3.loss_dice": 2.95725, "decode.d4.loss_cls": 4.14268, "decode.d4.loss_mask": 1.18901, "decode.d4.loss_dice": 2.89041, "decode.d5.loss_cls": 3.4027, "decode.d5.loss_mask": 1.06291, "decode.d5.loss_dice": 2.8659, "decode.d6.loss_cls": 4.21969, "decode.d6.loss_mask": 1.0698, "decode.d6.loss_dice": 2.87792, "decode.d7.loss_cls": 3.99768, "decode.d7.loss_mask": 1.0904, "decode.d7.loss_dice": 2.79483, "decode.d8.loss_cls": 4.05888, "decode.d8.loss_mask": 1.1008, "decode.d8.loss_dice": 2.74206, "loss": 81.015, "time": 2.11832}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 0.0, "memory": 23497, "data_time": 0.01225, "decode.loss_cls": 3.55669, "decode.loss_mask": 1.00503, "decode.loss_dice": 2.34325, "decode.d0.loss_cls": 4.33509, "decode.d0.loss_mask": 1.14503, "decode.d0.loss_dice": 3.22003, "decode.d1.loss_cls": 4.50805, "decode.d1.loss_mask": 0.99666, "decode.d1.loss_dice": 2.66435, "decode.d2.loss_cls": 3.60508, "decode.d2.loss_mask": 0.95873, "decode.d2.loss_dice": 2.58926, "decode.d3.loss_cls": 3.03286, "decode.d3.loss_mask": 0.98108, "decode.d3.loss_dice": 2.48723, "decode.d4.loss_cls": 3.56728, "decode.d4.loss_mask": 1.00537, "decode.d4.loss_dice": 2.45898, "decode.d5.loss_cls": 2.89784, "decode.d5.loss_mask": 0.93452, "decode.d5.loss_dice": 2.44304, "decode.d6.loss_cls": 3.64774, "decode.d6.loss_mask": 0.95909, "decode.d6.loss_dice": 2.45741, "decode.d7.loss_cls": 3.45901, "decode.d7.loss_mask": 0.99441, "decode.d7.loss_dice": 2.41958, "decode.d8.loss_cls": 3.55383, "decode.d8.loss_mask": 0.96659, "decode.d8.loss_dice": 2.34189, "loss": 71.53498, "time": 2.11906}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 23497, "data_time": 0.01148, "decode.loss_cls": 2.88994, "decode.loss_mask": 0.79629, "decode.loss_dice": 2.1541, "decode.d0.loss_cls": 4.3215, "decode.d0.loss_mask": 1.01342, "decode.d0.loss_dice": 3.00149, "decode.d1.loss_cls": 4.07448, "decode.d1.loss_mask": 0.87716, "decode.d1.loss_dice": 2.42819, "decode.d2.loss_cls": 3.1033, "decode.d2.loss_mask": 0.8615, "decode.d2.loss_dice": 2.32807, "decode.d3.loss_cls": 2.58582, "decode.d3.loss_mask": 0.83396, "decode.d3.loss_dice": 2.27558, "decode.d4.loss_cls": 2.97712, "decode.d4.loss_mask": 0.81128, "decode.d4.loss_dice": 2.24005, "decode.d5.loss_cls": 2.40034, "decode.d5.loss_mask": 0.78234, "decode.d5.loss_dice": 2.23174, "decode.d6.loss_cls": 2.99663, "decode.d6.loss_mask": 0.77691, "decode.d6.loss_dice": 2.265, "decode.d7.loss_cls": 2.81602, "decode.d7.loss_mask": 0.79336, "decode.d7.loss_dice": 2.18543, "decode.d8.loss_cls": 2.84578, "decode.d8.loss_mask": 0.77586, "decode.d8.loss_dice": 2.18387, "loss": 62.62655, "time": 2.1192}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 0.0, "memory": 23497, "data_time": 0.01195, "decode.loss_cls": 2.24195, "decode.loss_mask": 0.71192, "decode.loss_dice": 1.82864, "decode.d0.loss_cls": 4.30763, "decode.d0.loss_mask": 0.92331, "decode.d0.loss_dice": 2.66674, "decode.d1.loss_cls": 3.56009, "decode.d1.loss_mask": 0.79464, "decode.d1.loss_dice": 2.04325, "decode.d2.loss_cls": 2.51486, "decode.d2.loss_mask": 0.73788, "decode.d2.loss_dice": 2.0031, "decode.d3.loss_cls": 2.10134, "decode.d3.loss_mask": 0.75717, "decode.d3.loss_dice": 1.94218, "decode.d4.loss_cls": 2.4221, "decode.d4.loss_mask": 0.73848, "decode.d4.loss_dice": 1.9153, "decode.d5.loss_cls": 1.91938, "decode.d5.loss_mask": 0.69605, "decode.d5.loss_dice": 1.91835, "decode.d6.loss_cls": 2.35971, "decode.d6.loss_mask": 0.69533, "decode.d6.loss_dice": 1.92935, "decode.d7.loss_cls": 2.22153, "decode.d7.loss_mask": 0.73421, "decode.d7.loss_dice": 1.8814, "decode.d8.loss_cls": 2.22357, "decode.d8.loss_mask": 0.72596, "decode.d8.loss_dice": 1.8743, "loss": 53.38972, "time": 2.12068}
{"mode": "train", "epoch": 1, "iter": 70, "lr": 0.0, "memory": 23497, "data_time": 0.01175, "decode.loss_cls": 1.71664, "decode.loss_mask": 0.50742, "decode.loss_dice": 1.54634, "decode.d0.loss_cls": 4.34103, "decode.d0.loss_mask": 0.76906, "decode.d0.loss_dice": 2.34898, "decode.d1.loss_cls": 3.11927, "decode.d1.loss_mask": 0.64168, "decode.d1.loss_dice": 1.79247, "decode.d2.loss_cls": 2.03287, "decode.d2.loss_mask": 0.52792, "decode.d2.loss_dice": 1.70391, "decode.d3.loss_cls": 1.68794, "decode.d3.loss_mask": 0.51256, "decode.d3.loss_dice": 1.66639, "decode.d4.loss_cls": 1.8642, "decode.d4.loss_mask": 0.4999, "decode.d4.loss_dice": 1.61837, "decode.d5.loss_cls": 1.51841, "decode.d5.loss_mask": 0.49321, "decode.d5.loss_dice": 1.6394, "decode.d6.loss_cls": 1.84332, "decode.d6.loss_mask": 0.48849, "decode.d6.loss_dice": 1.63627, "decode.d7.loss_cls": 1.71575, "decode.d7.loss_mask": 0.4996, "decode.d7.loss_dice": 1.59269, "decode.d8.loss_cls": 1.69489, "decode.d8.loss_mask": 0.50789, "decode.d8.loss_dice": 1.59926, "loss": 44.12615, "time": 2.12136}
{"mode": "train", "epoch": 1, "iter": 80, "lr": 0.0, "memory": 23497, "data_time": 0.01181, "decode.loss_cls": 1.33817, "decode.loss_mask": 0.47729, "decode.loss_dice": 1.32646, "decode.d0.loss_cls": 4.33832, "decode.d0.loss_mask": 0.71847, "decode.d0.loss_dice": 2.05379, "decode.d1.loss_cls": 2.54643, "decode.d1.loss_mask": 0.59095, "decode.d1.loss_dice": 1.51472, "decode.d2.loss_cls": 1.56874, "decode.d2.loss_mask": 0.50544, "decode.d2.loss_dice": 1.44295, "decode.d3.loss_cls": 1.36271, "decode.d3.loss_mask": 0.50074, "decode.d3.loss_dice": 1.42603, "decode.d4.loss_cls": 1.44811, "decode.d4.loss_mask": 0.48632, "decode.d4.loss_dice": 1.42056, "decode.d5.loss_cls": 1.26451, "decode.d5.loss_mask": 0.46397, "decode.d5.loss_dice": 1.40902, "decode.d6.loss_cls": 1.42122, "decode.d6.loss_mask": 0.45054, "decode.d6.loss_dice": 1.39829, "decode.d7.loss_cls": 1.33353, "decode.d7.loss_mask": 0.47847, "decode.d7.loss_dice": 1.36086, "decode.d8.loss_cls": 1.33481, "decode.d8.loss_mask": 0.48824, "decode.d8.loss_dice": 1.35124, "loss": 37.82089, "time": 2.12205}
{"mode": "train", "epoch": 1, "iter": 90, "lr": 0.0, "memory": 23497, "data_time": 0.01196, "decode.loss_cls": 1.19012, "decode.loss_mask": 0.50096, "decode.loss_dice": 1.36485, "decode.d0.loss_cls": 4.26791, "decode.d0.loss_mask": 0.71662, "decode.d0.loss_dice": 2.05846, "decode.d1.loss_cls": 2.03887, "decode.d1.loss_mask": 0.63386, "decode.d1.loss_dice": 1.53731, "decode.d2.loss_cls": 1.27183, "decode.d2.loss_mask": 0.52945, "decode.d2.loss_dice": 1.46553, "decode.d3.loss_cls": 1.18814, "decode.d3.loss_mask": 0.47928, "decode.d3.loss_dice": 1.41802, "decode.d4.loss_cls": 1.25252, "decode.d4.loss_mask": 0.49346, "decode.d4.loss_dice": 1.40097, "decode.d5.loss_cls": 1.1352, "decode.d5.loss_mask": 0.50008, "decode.d5.loss_dice": 1.40672, "decode.d6.loss_cls": 1.22296, "decode.d6.loss_mask": 0.49513, "decode.d6.loss_dice": 1.38346, "decode.d7.loss_cls": 1.15823, "decode.d7.loss_mask": 0.524, "decode.d7.loss_dice": 1.37059, "decode.d8.loss_cls": 1.15551, "decode.d8.loss_mask": 0.51868, "decode.d8.loss_dice": 1.35623, "loss": 36.03495, "time": 2.12152}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 23497, "data_time": 0.0121, "decode.loss_cls": 1.07711, "decode.loss_mask": 0.40357, "decode.loss_dice": 1.14903, "decode.d0.loss_cls": 4.32056, "decode.d0.loss_mask": 0.60289, "decode.d0.loss_dice": 1.7386, "decode.d1.loss_cls": 1.72645, "decode.d1.loss_mask": 0.50402, "decode.d1.loss_dice": 1.24636, "decode.d2.loss_cls": 1.12389, "decode.d2.loss_mask": 0.42724, "decode.d2.loss_dice": 1.22988, "decode.d3.loss_cls": 1.05722, "decode.d3.loss_mask": 0.39602, "decode.d3.loss_dice": 1.19557, "decode.d4.loss_cls": 1.10214, "decode.d4.loss_mask": 0.39686, "decode.d4.loss_dice": 1.20782, "decode.d5.loss_cls": 1.02774, "decode.d5.loss_mask": 0.40242, "decode.d5.loss_dice": 1.19669, "decode.d6.loss_cls": 1.09907, "decode.d6.loss_mask": 0.39967, "decode.d6.loss_dice": 1.17916, "decode.d7.loss_cls": 1.04956, "decode.d7.loss_mask": 0.42185, "decode.d7.loss_dice": 1.15157, "decode.d8.loss_cls": 1.03535, "decode.d8.loss_mask": 0.40548, "decode.d8.loss_dice": 1.15127, "loss": 31.42505, "time": 2.12188}
{"mode": "train", "epoch": 1, "iter": 110, "lr": 0.0, "memory": 23497, "data_time": 0.01199, "decode.loss_cls": 1.04866, "decode.loss_mask": 0.45496, "decode.loss_dice": 1.15503, "decode.d0.loss_cls": 4.3009, "decode.d0.loss_mask": 0.59508, "decode.d0.loss_dice": 1.66286, "decode.d1.loss_cls": 1.47759, "decode.d1.loss_mask": 0.5527, "decode.d1.loss_dice": 1.22149, "decode.d2.loss_cls": 1.08691, "decode.d2.loss_mask": 0.42797, "decode.d2.loss_dice": 1.18149, "decode.d3.loss_cls": 1.02212, "decode.d3.loss_mask": 0.42628, "decode.d3.loss_dice": 1.17788, "decode.d4.loss_cls": 1.07485, "decode.d4.loss_mask": 0.42075, "decode.d4.loss_dice": 1.17177, "decode.d5.loss_cls": 1.03367, "decode.d5.loss_mask": 0.425, "decode.d5.loss_dice": 1.16503, "decode.d6.loss_cls": 1.06575, "decode.d6.loss_mask": 0.43169, "decode.d6.loss_dice": 1.16901, "decode.d7.loss_cls": 1.03082, "decode.d7.loss_mask": 0.45932, "decode.d7.loss_dice": 1.15267, "decode.d8.loss_cls": 1.03189, "decode.d8.loss_mask": 0.46054, "decode.d8.loss_dice": 1.159, "loss": 31.04371, "time": 2.12216}
{"mode": "train", "epoch": 1, "iter": 120, "lr": 0.0, "memory": 23497, "data_time": 0.01142, "decode.loss_cls": 0.97441, "decode.loss_mask": 0.39928, "decode.loss_dice": 1.04038, "decode.d0.loss_cls": 4.30856, "decode.d0.loss_mask": 0.50786, "decode.d0.loss_dice": 1.45519, "decode.d1.loss_cls": 1.27578, "decode.d1.loss_mask": 0.46371, "decode.d1.loss_dice": 1.11368, "decode.d2.loss_cls": 0.98775, "decode.d2.loss_mask": 0.40165, "decode.d2.loss_dice": 1.07863, "decode.d3.loss_cls": 0.93272, "decode.d3.loss_mask": 0.3695, "decode.d3.loss_dice": 1.04957, "decode.d4.loss_cls": 0.98058, "decode.d4.loss_mask": 0.38152, "decode.d4.loss_dice": 1.04124, "decode.d5.loss_cls": 0.95977, "decode.d5.loss_mask": 0.38602, "decode.d5.loss_dice": 1.05045, "decode.d6.loss_cls": 0.99564, "decode.d6.loss_mask": 0.37969, "decode.d6.loss_dice": 1.0442, "decode.d7.loss_cls": 0.96276, "decode.d7.loss_mask": 0.4077, "decode.d7.loss_dice": 1.02814, "decode.d8.loss_cls": 0.95252, "decode.d8.loss_mask": 0.40058, "decode.d8.loss_dice": 1.02503, "loss": 28.35452, "time": 2.12039}
{"mode": "train", "epoch": 1, "iter": 130, "lr": 0.0, "memory": 23497, "data_time": 0.01201, "decode.loss_cls": 0.88795, "decode.loss_mask": 0.3436, "decode.loss_dice": 0.97656, "decode.d0.loss_cls": 4.2949, "decode.d0.loss_mask": 0.51098, "decode.d0.loss_dice": 1.41774, "decode.d1.loss_cls": 1.15677, "decode.d1.loss_mask": 0.41894, "decode.d1.loss_dice": 0.98849, "decode.d2.loss_cls": 0.96034, "decode.d2.loss_mask": 0.36709, "decode.d2.loss_dice": 0.99492, "decode.d3.loss_cls": 0.89268, "decode.d3.loss_mask": 0.33896, "decode.d3.loss_dice": 0.97856, "decode.d4.loss_cls": 0.93808, "decode.d4.loss_mask": 0.34701, "decode.d4.loss_dice": 0.97349, "decode.d5.loss_cls": 0.92059, "decode.d5.loss_mask": 0.34203, "decode.d5.loss_dice": 0.96807, "decode.d6.loss_cls": 0.93971, "decode.d6.loss_mask": 0.33677, "decode.d6.loss_dice": 0.97449, "decode.d7.loss_cls": 0.88967, "decode.d7.loss_mask": 0.3624, "decode.d7.loss_dice": 0.96844, "decode.d8.loss_cls": 0.86302, "decode.d8.loss_mask": 0.35278, "decode.d8.loss_dice": 0.98887, "loss": 26.69389, "time": 2.12153}
{"mode": "train", "epoch": 1, "iter": 140, "lr": 0.0, "memory": 23497, "data_time": 0.01163, "decode.loss_cls": 0.81382, "decode.loss_mask": 0.2919, "decode.loss_dice": 0.93047, "decode.d0.loss_cls": 4.31644, "decode.d0.loss_mask": 0.42245, "decode.d0.loss_dice": 1.30952, "decode.d1.loss_cls": 1.05113, "decode.d1.loss_mask": 0.36316, "decode.d1.loss_dice": 0.99243, "decode.d2.loss_cls": 0.90184, "decode.d2.loss_mask": 0.30682, "decode.d2.loss_dice": 0.97336, "decode.d3.loss_cls": 0.85182, "decode.d3.loss_mask": 0.29369, "decode.d3.loss_dice": 0.95551, "decode.d4.loss_cls": 0.85412, "decode.d4.loss_mask": 0.29992, "decode.d4.loss_dice": 0.97947, "decode.d5.loss_cls": 0.86689, "decode.d5.loss_mask": 0.29607, "decode.d5.loss_dice": 0.9339, "decode.d6.loss_cls": 0.86892, "decode.d6.loss_mask": 0.29614, "decode.d6.loss_dice": 0.94712, "decode.d7.loss_cls": 0.81426, "decode.d7.loss_mask": 0.30267, "decode.d7.loss_dice": 0.94764, "decode.d8.loss_cls": 0.79079, "decode.d8.loss_mask": 0.30237, "decode.d8.loss_dice": 0.94171, "loss": 25.21638, "time": 2.12104}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0, "memory": 23497, "data_time": 0.0115, "decode.loss_cls": 0.76869, "decode.loss_mask": 0.30488, "decode.loss_dice": 0.96489, "decode.d0.loss_cls": 4.27774, "decode.d0.loss_mask": 0.43482, "decode.d0.loss_dice": 1.26825, "decode.d1.loss_cls": 1.00216, "decode.d1.loss_mask": 0.41157, "decode.d1.loss_dice": 0.98329, "decode.d2.loss_cls": 0.88064, "decode.d2.loss_mask": 0.33928, "decode.d2.loss_dice": 0.98772, "decode.d3.loss_cls": 0.7933, "decode.d3.loss_mask": 0.33297, "decode.d3.loss_dice": 1.00585, "decode.d4.loss_cls": 0.82416, "decode.d4.loss_mask": 0.32208, "decode.d4.loss_dice": 0.99191, "decode.d5.loss_cls": 0.81076, "decode.d5.loss_mask": 0.31916, "decode.d5.loss_dice": 0.98558, "decode.d6.loss_cls": 0.82348, "decode.d6.loss_mask": 0.32223, "decode.d6.loss_dice": 0.96889, "decode.d7.loss_cls": 0.78879, "decode.d7.loss_mask": 0.34242, "decode.d7.loss_dice": 0.95615, "decode.d8.loss_cls": 0.73921, "decode.d8.loss_mask": 0.32271, "decode.d8.loss_dice": 0.97585, "loss": 25.24944, "time": 2.12128}
{"mode": "train", "epoch": 1, "iter": 160, "lr": 0.0, "memory": 23497, "data_time": 0.01218, "decode.loss_cls": 0.74153, "decode.loss_mask": 0.34596, "decode.loss_dice": 0.96479, "decode.d0.loss_cls": 4.23933, "decode.d0.loss_mask": 0.48637, "decode.d0.loss_dice": 1.27945, "decode.d1.loss_cls": 0.96795, "decode.d1.loss_mask": 0.4393, "decode.d1.loss_dice": 1.00022, "decode.d2.loss_cls": 0.88978, "decode.d2.loss_mask": 0.37624, "decode.d2.loss_dice": 0.98313, "decode.d3.loss_cls": 0.79944, "decode.d3.loss_mask": 0.356, "decode.d3.loss_dice": 0.97966, "decode.d4.loss_cls": 0.81631, "decode.d4.loss_mask": 0.35164, "decode.d4.loss_dice": 0.98502, "decode.d5.loss_cls": 0.79348, "decode.d5.loss_mask": 0.34505, "decode.d5.loss_dice": 0.98178, "decode.d6.loss_cls": 0.82009, "decode.d6.loss_mask": 0.35638, "decode.d6.loss_dice": 0.9761, "decode.d7.loss_cls": 0.76204, "decode.d7.loss_mask": 0.36306, "decode.d7.loss_dice": 0.96374, "decode.d8.loss_cls": 0.72325, "decode.d8.loss_mask": 0.34912, "decode.d8.loss_dice": 0.97145, "loss": 25.40766, "time": 2.12232}
{"mode": "train", "epoch": 1, "iter": 170, "lr": 0.0, "memory": 23497, "data_time": 0.01154, "decode.loss_cls": 0.66669, "decode.loss_mask": 0.32172, "decode.loss_dice": 0.95463, "decode.d0.loss_cls": 4.26598, "decode.d0.loss_mask": 0.44856, "decode.d0.loss_dice": 1.20015, "decode.d1.loss_cls": 0.91325, "decode.d1.loss_mask": 0.4039, "decode.d1.loss_dice": 0.97459, "decode.d2.loss_cls": 0.80805, "decode.d2.loss_mask": 0.34842, "decode.d2.loss_dice": 0.94263, "decode.d3.loss_cls": 0.74886, "decode.d3.loss_mask": 0.32926, "decode.d3.loss_dice": 0.97075, "decode.d4.loss_cls": 0.76053, "decode.d4.loss_mask": 0.32228, "decode.d4.loss_dice": 0.97305, "decode.d5.loss_cls": 0.75191, "decode.d5.loss_mask": 0.32555, "decode.d5.loss_dice": 0.95748, "decode.d6.loss_cls": 0.73151, "decode.d6.loss_mask": 0.32272, "decode.d6.loss_dice": 0.96591, "decode.d7.loss_cls": 0.70319, "decode.d7.loss_mask": 0.32266, "decode.d7.loss_dice": 0.96837, "decode.d8.loss_cls": 0.66145, "decode.d8.loss_mask": 0.32322, "decode.d8.loss_dice": 0.97258, "loss": 24.35983, "time": 2.12029}
{"mode": "train", "epoch": 1, "iter": 180, "lr": 0.0, "memory": 23497, "data_time": 0.01179, "decode.loss_cls": 0.61952, "decode.loss_mask": 0.34201, "decode.loss_dice": 0.91198, "decode.d0.loss_cls": 4.23979, "decode.d0.loss_mask": 0.45483, "decode.d0.loss_dice": 1.13686, "decode.d1.loss_cls": 0.90023, "decode.d1.loss_mask": 0.41226, "decode.d1.loss_dice": 0.88597, "decode.d2.loss_cls": 0.79932, "decode.d2.loss_mask": 0.34767, "decode.d2.loss_dice": 0.86864, "decode.d3.loss_cls": 0.71883, "decode.d3.loss_mask": 0.33325, "decode.d3.loss_dice": 0.90047, "decode.d4.loss_cls": 0.73028, "decode.d4.loss_mask": 0.34721, "decode.d4.loss_dice": 0.906, "decode.d5.loss_cls": 0.71318, "decode.d5.loss_mask": 0.33791, "decode.d5.loss_dice": 0.8868, "decode.d6.loss_cls": 0.70197, "decode.d6.loss_mask": 0.32515, "decode.d6.loss_dice": 0.89542, "decode.d7.loss_cls": 0.65015, "decode.d7.loss_mask": 0.33232, "decode.d7.loss_dice": 0.8975, "decode.d8.loss_cls": 0.61321, "decode.d8.loss_mask": 0.33228, "decode.d8.loss_dice": 0.90265, "loss": 23.44366, "time": 2.11982}
{"mode": "train", "epoch": 1, "iter": 190, "lr": 0.0, "memory": 23497, "data_time": 0.01192, "decode.loss_cls": 0.50079, "decode.loss_mask": 0.34296, "decode.loss_dice": 0.94577, "decode.d0.loss_cls": 4.21058, "decode.d0.loss_mask": 0.43675, "decode.d0.loss_dice": 1.0736, "decode.d1.loss_cls": 0.85183, "decode.d1.loss_mask": 0.4134, "decode.d1.loss_dice": 0.90788, "decode.d2.loss_cls": 0.76466, "decode.d2.loss_mask": 0.36053, "decode.d2.loss_dice": 0.92591, "decode.d3.loss_cls": 0.6679, "decode.d3.loss_mask": 0.33761, "decode.d3.loss_dice": 0.91669, "decode.d4.loss_cls": 0.66628, "decode.d4.loss_mask": 0.33921, "decode.d4.loss_dice": 0.91399, "decode.d5.loss_cls": 0.634, "decode.d5.loss_mask": 0.3329, "decode.d5.loss_dice": 0.91902, "decode.d6.loss_cls": 0.61243, "decode.d6.loss_mask": 0.34141, "decode.d6.loss_dice": 0.94019, "decode.d7.loss_cls": 0.56226, "decode.d7.loss_mask": 0.3533, "decode.d7.loss_dice": 0.91325, "decode.d8.loss_cls": 0.51399, "decode.d8.loss_mask": 0.34765, "decode.d8.loss_dice": 0.92948, "loss": 22.97624, "time": 2.11993}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0, "memory": 23497, "data_time": 0.01188, "decode.loss_cls": 0.41293, "decode.loss_mask": 0.27037, "decode.loss_dice": 0.88376, "decode.d0.loss_cls": 4.25527, "decode.d0.loss_mask": 0.35566, "decode.d0.loss_dice": 1.04353, "decode.d1.loss_cls": 0.77695, "decode.d1.loss_mask": 0.32162, "decode.d1.loss_dice": 0.8577, "decode.d2.loss_cls": 0.67317, "decode.d2.loss_mask": 0.27951, "decode.d2.loss_dice": 0.87008, "decode.d3.loss_cls": 0.58261, "decode.d3.loss_mask": 0.2719, "decode.d3.loss_dice": 0.87094, "decode.d4.loss_cls": 0.55003, "decode.d4.loss_mask": 0.27121, "decode.d4.loss_dice": 0.88868, "decode.d5.loss_cls": 0.54313, "decode.d5.loss_mask": 0.2694, "decode.d5.loss_dice": 0.86969, "decode.d6.loss_cls": 0.50207, "decode.d6.loss_mask": 0.26921, "decode.d6.loss_dice": 0.87316, "decode.d7.loss_cls": 0.44625, "decode.d7.loss_mask": 0.2703, "decode.d7.loss_dice": 0.86245, "decode.d8.loss_cls": 0.40221, "decode.d8.loss_mask": 0.27251, "decode.d8.loss_dice": 0.88504, "loss": 20.90137, "time": 2.12091}
{"mode": "val", "epoch": 1, "iter": 10, "lr": 0.0, "aAcc": 0.4322, "mIoU": 0.0864, "mAcc": 0.1026, "IoU.bg": 0.5009, "IoU.Anchovy": 0.0104, "IoU.Olives": 0.0004, "IoU.Salami": 0.0041, "IoU.Red_Pepper": 0.0026, "IoU.Yellow_Pepper": 0.0, "Acc.bg": 0.5099, "Acc.Anchovy": 0.0245, "Acc.Olives": 0.0019, "Acc.Salami": 0.0749, "Acc.Red_Pepper": 0.0041, "Acc.Yellow_Pepper": 0.0}
{"mode": "train", "epoch": 1, "iter": 210, "lr": 0.0, "memory": 23497, "data_time": 2.4734, "decode.loss_cls": 0.34836, "decode.loss_mask": 0.28793, "decode.loss_dice": 0.89651, "decode.d0.loss_cls": 4.24125, "decode.d0.loss_mask": 0.38551, "decode.d0.loss_dice": 1.032, "decode.d1.loss_cls": 0.76073, "decode.d1.loss_mask": 0.35155, "decode.d1.loss_dice": 0.86732, "decode.d2.loss_cls": 0.66805, "decode.d2.loss_mask": 0.29654, "decode.d2.loss_dice": 0.88278, "decode.d3.loss_cls": 0.5539, "decode.d3.loss_mask": 0.2947, "decode.d3.loss_dice": 0.88559, "decode.d4.loss_cls": 0.52065, "decode.d4.loss_mask": 0.29114, "decode.d4.loss_dice": 0.91173, "decode.d5.loss_cls": 0.48282, "decode.d5.loss_mask": 0.29311, "decode.d5.loss_dice": 0.91016, "decode.d6.loss_cls": 0.45231, "decode.d6.loss_mask": 0.28481, "decode.d6.loss_dice": 0.90031, "decode.d7.loss_cls": 0.38624, "decode.d7.loss_mask": 0.29342, "decode.d7.loss_dice": 0.89176, "decode.d8.loss_cls": 0.35084, "decode.d8.loss_mask": 0.29119, "decode.d8.loss_dice": 0.91044, "loss": 20.92365, "time": 4.58795}
{"mode": "train", "epoch": 1, "iter": 220, "lr": 0.0, "memory": 23497, "data_time": 0.01287, "decode.loss_cls": 0.28374, "decode.loss_mask": 0.34683, "decode.loss_dice": 0.9551, "decode.d0.loss_cls": 4.21501, "decode.d0.loss_mask": 0.47329, "decode.d0.loss_dice": 1.08667, "decode.d1.loss_cls": 0.75808, "decode.d1.loss_mask": 0.42242, "decode.d1.loss_dice": 0.91028, "decode.d2.loss_cls": 0.64257, "decode.d2.loss_mask": 0.36184, "decode.d2.loss_dice": 0.92609, "decode.d3.loss_cls": 0.53718, "decode.d3.loss_mask": 0.34614, "decode.d3.loss_dice": 0.93323, "decode.d4.loss_cls": 0.46817, "decode.d4.loss_mask": 0.34482, "decode.d4.loss_dice": 0.95471, "decode.d5.loss_cls": 0.42565, "decode.d5.loss_mask": 0.34428, "decode.d5.loss_dice": 0.9504, "decode.d6.loss_cls": 0.38655, "decode.d6.loss_mask": 0.34348, "decode.d6.loss_dice": 0.93851, "decode.d7.loss_cls": 0.33124, "decode.d7.loss_mask": 0.36072, "decode.d7.loss_dice": 0.94693, "decode.d8.loss_cls": 0.28439, "decode.d8.loss_mask": 0.34687, "decode.d8.loss_dice": 0.96207, "loss": 21.58725, "time": 2.13037}
{"mode": "train", "epoch": 1, "iter": 230, "lr": 0.0, "memory": 23497, "data_time": 0.01201, "decode.loss_cls": 0.22942, "decode.loss_mask": 0.28275, "decode.loss_dice": 0.87664, "decode.d0.loss_cls": 4.22757, "decode.d0.loss_mask": 0.37096, "decode.d0.loss_dice": 0.96202, "decode.d1.loss_cls": 0.69322, "decode.d1.loss_mask": 0.32969, "decode.d1.loss_dice": 0.83708, "decode.d2.loss_cls": 0.58001, "decode.d2.loss_mask": 0.29397, "decode.d2.loss_dice": 0.84151, "decode.d3.loss_cls": 0.44919, "decode.d3.loss_mask": 0.27879, "decode.d3.loss_dice": 0.83508, "decode.d4.loss_cls": 0.37528, "decode.d4.loss_mask": 0.27854, "decode.d4.loss_dice": 0.8699, "decode.d5.loss_cls": 0.35544, "decode.d5.loss_mask": 0.28154, "decode.d5.loss_dice": 0.85555, "decode.d6.loss_cls": 0.32272, "decode.d6.loss_mask": 0.28649, "decode.d6.loss_dice": 0.84173, "decode.d7.loss_cls": 0.25694, "decode.d7.loss_mask": 0.29073, "decode.d7.loss_dice": 0.87825, "decode.d8.loss_cls": 0.24267, "decode.d8.loss_mask": 0.2864, "decode.d8.loss_dice": 0.86345, "loss": 19.37352, "time": 2.12092}
{"mode": "train", "epoch": 1, "iter": 240, "lr": 0.0, "memory": 23497, "data_time": 0.01664, "decode.loss_cls": 0.18706, "decode.loss_mask": 0.32765, "decode.loss_dice": 0.8509, "decode.d0.loss_cls": 4.18612, "decode.d0.loss_mask": 0.40482, "decode.d0.loss_dice": 0.95745, "decode.d1.loss_cls": 0.66528, "decode.d1.loss_mask": 0.38874, "decode.d1.loss_dice": 0.82054, "decode.d2.loss_cls": 0.54172, "decode.d2.loss_mask": 0.33315, "decode.d2.loss_dice": 0.84626, "decode.d3.loss_cls": 0.42503, "decode.d3.loss_mask": 0.31743, "decode.d3.loss_dice": 0.86476, "decode.d4.loss_cls": 0.34426, "decode.d4.loss_mask": 0.3242, "decode.d4.loss_dice": 0.86504, "decode.d5.loss_cls": 0.29819, "decode.d5.loss_mask": 0.32891, "decode.d5.loss_dice": 0.86346, "decode.d6.loss_cls": 0.26071, "decode.d6.loss_mask": 0.32554, "decode.d6.loss_dice": 0.84359, "decode.d7.loss_cls": 0.21113, "decode.d7.loss_mask": 0.33778, "decode.d7.loss_dice": 0.86217, "decode.d8.loss_cls": 0.18534, "decode.d8.loss_mask": 0.32835, "decode.d8.loss_dice": 0.85392, "loss": 19.3495, "time": 2.46037}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.0, "memory": 23497, "data_time": 0.04254, "decode.loss_cls": 0.14056, "decode.loss_mask": 0.27821, "decode.loss_dice": 0.88124, "decode.d0.loss_cls": 4.22805, "decode.d0.loss_mask": 0.34462, "decode.d0.loss_dice": 0.9826, "decode.d1.loss_cls": 0.61693, "decode.d1.loss_mask": 0.31659, "decode.d1.loss_dice": 0.85601, "decode.d2.loss_cls": 0.48377, "decode.d2.loss_mask": 0.29161, "decode.d2.loss_dice": 0.86697, "decode.d3.loss_cls": 0.34165, "decode.d3.loss_mask": 0.2819, "decode.d3.loss_dice": 0.87401, "decode.d4.loss_cls": 0.26973, "decode.d4.loss_mask": 0.27668, "decode.d4.loss_dice": 0.87742, "decode.d5.loss_cls": 0.23938, "decode.d5.loss_mask": 0.28333, "decode.d5.loss_dice": 0.87446, "decode.d6.loss_cls": 0.20268, "decode.d6.loss_mask": 0.28721, "decode.d6.loss_dice": 0.89486, "decode.d7.loss_cls": 0.17038, "decode.d7.loss_mask": 0.28477, "decode.d7.loss_dice": 0.87558, "decode.d8.loss_cls": 0.14125, "decode.d8.loss_mask": 0.28287, "decode.d8.loss_dice": 0.88928, "loss": 18.6346, "time": 2.7922}
{"mode": "train", "epoch": 1, "iter": 260, "lr": 0.0, "memory": 23497, "data_time": 0.00927, "decode.loss_cls": 0.11334, "decode.loss_mask": 0.28117, "decode.loss_dice": 0.88381, "decode.d0.loss_cls": 4.21264, "decode.d0.loss_mask": 0.34429, "decode.d0.loss_dice": 0.94608, "decode.d1.loss_cls": 0.5921, "decode.d1.loss_mask": 0.30107, "decode.d1.loss_dice": 0.8468, "decode.d2.loss_cls": 0.4624, "decode.d2.loss_mask": 0.29071, "decode.d2.loss_dice": 0.86283, "decode.d3.loss_cls": 0.31179, "decode.d3.loss_mask": 0.28626, "decode.d3.loss_dice": 0.87891, "decode.d4.loss_cls": 0.2298, "decode.d4.loss_mask": 0.28704, "decode.d4.loss_dice": 0.88161, "decode.d5.loss_cls": 0.19657, "decode.d5.loss_mask": 0.29232, "decode.d5.loss_dice": 0.88779, "decode.d6.loss_cls": 0.16526, "decode.d6.loss_mask": 0.28844, "decode.d6.loss_dice": 0.88095, "decode.d7.loss_cls": 0.12978, "decode.d7.loss_mask": 0.2857, "decode.d7.loss_dice": 0.89148, "decode.d8.loss_cls": 0.11256, "decode.d8.loss_mask": 0.2833, "decode.d8.loss_dice": 0.88116, "loss": 18.30798, "time": 5.25812}
{"mode": "train", "epoch": 1, "iter": 270, "lr": 0.0, "memory": 23497, "data_time": 0.01079, "decode.loss_cls": 0.11181, "decode.loss_mask": 0.23213, "decode.loss_dice": 0.84265, "decode.d0.loss_cls": 4.23854, "decode.d0.loss_mask": 0.30084, "decode.d0.loss_dice": 0.94398, "decode.d1.loss_cls": 0.53964, "decode.d1.loss_mask": 0.25507, "decode.d1.loss_dice": 0.85617, "decode.d2.loss_cls": 0.38534, "decode.d2.loss_mask": 0.23842, "decode.d2.loss_dice": 0.87025, "decode.d3.loss_cls": 0.2479, "decode.d3.loss_mask": 0.23779, "decode.d3.loss_dice": 0.86746, "decode.d4.loss_cls": 0.18109, "decode.d4.loss_mask": 0.23948, "decode.d4.loss_dice": 0.86701, "decode.d5.loss_cls": 0.16974, "decode.d5.loss_mask": 0.23831, "decode.d5.loss_dice": 0.86372, "decode.d6.loss_cls": 0.13469, "decode.d6.loss_mask": 0.23237, "decode.d6.loss_dice": 0.8693, "decode.d7.loss_cls": 0.11133, "decode.d7.loss_mask": 0.23421, "decode.d7.loss_dice": 0.86593, "decode.d8.loss_cls": 0.10139, "decode.d8.loss_mask": 0.23861, "decode.d8.loss_dice": 0.87214, "loss": 17.3873, "time": 4.22672}
{"mode": "train", "epoch": 1, "iter": 280, "lr": 0.0, "memory": 23497, "data_time": 0.01261, "decode.loss_cls": 0.07787, "decode.loss_mask": 0.26343, "decode.loss_dice": 0.84417, "decode.d0.loss_cls": 4.21868, "decode.d0.loss_mask": 0.33693, "decode.d0.loss_dice": 0.94164, "decode.d1.loss_cls": 0.49387, "decode.d1.loss_mask": 0.28624, "decode.d1.loss_dice": 0.83772, "decode.d2.loss_cls": 0.35083, "decode.d2.loss_mask": 0.26746, "decode.d2.loss_dice": 0.84471, "decode.d3.loss_cls": 0.24057, "decode.d3.loss_mask": 0.2579, "decode.d3.loss_dice": 0.84831, "decode.d4.loss_cls": 0.16102, "decode.d4.loss_mask": 0.26631, "decode.d4.loss_dice": 0.8501, "decode.d5.loss_cls": 0.1395, "decode.d5.loss_mask": 0.26342, "decode.d5.loss_dice": 0.8378, "decode.d6.loss_cls": 0.11382, "decode.d6.loss_mask": 0.2597, "decode.d6.loss_dice": 0.83654, "decode.d7.loss_cls": 0.09236, "decode.d7.loss_mask": 0.2621, "decode.d7.loss_dice": 0.84471, "decode.d8.loss_cls": 0.0787, "decode.d8.loss_mask": 0.26351, "decode.d8.loss_dice": 0.83285, "loss": 17.21278, "time": 2.12041}
{"mode": "train", "epoch": 1, "iter": 290, "lr": 0.0, "memory": 23497, "data_time": 0.01214, "decode.loss_cls": 0.07731, "decode.loss_mask": 0.31582, "decode.loss_dice": 0.89241, "decode.d0.loss_cls": 4.19772, "decode.d0.loss_mask": 0.38868, "decode.d0.loss_dice": 0.98035, "decode.d1.loss_cls": 0.47748, "decode.d1.loss_mask": 0.34669, "decode.d1.loss_dice": 0.88085, "decode.d2.loss_cls": 0.35118, "decode.d2.loss_mask": 0.33157, "decode.d2.loss_dice": 0.90366, "decode.d3.loss_cls": 0.23431, "decode.d3.loss_mask": 0.31193, "decode.d3.loss_dice": 0.90672, "decode.d4.loss_cls": 0.15731, "decode.d4.loss_mask": 0.317, "decode.d4.loss_dice": 0.90391, "decode.d5.loss_cls": 0.13096, "decode.d5.loss_mask": 0.31503, "decode.d5.loss_dice": 0.89814, "decode.d6.loss_cls": 0.10778, "decode.d6.loss_mask": 0.3105, "decode.d6.loss_dice": 0.89193, "decode.d7.loss_cls": 0.08784, "decode.d7.loss_mask": 0.31562, "decode.d7.loss_dice": 0.89756, "decode.d8.loss_cls": 0.07702, "decode.d8.loss_mask": 0.31204, "decode.d8.loss_dice": 0.88609, "loss": 18.20542, "time": 2.12131}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.0, "memory": 23497, "data_time": 0.01182, "decode.loss_cls": 0.05353, "decode.loss_mask": 0.27604, "decode.loss_dice": 0.82485, "decode.d0.loss_cls": 4.21738, "decode.d0.loss_mask": 0.34459, "decode.d0.loss_dice": 0.86468, "decode.d1.loss_cls": 0.40654, "decode.d1.loss_mask": 0.30116, "decode.d1.loss_dice": 0.83947, "decode.d2.loss_cls": 0.2758, "decode.d2.loss_mask": 0.27934, "decode.d2.loss_dice": 0.8477, "decode.d3.loss_cls": 0.16121, "decode.d3.loss_mask": 0.28166, "decode.d3.loss_dice": 0.8397, "decode.d4.loss_cls": 0.10114, "decode.d4.loss_mask": 0.28381, "decode.d4.loss_dice": 0.83243, "decode.d5.loss_cls": 0.08729, "decode.d5.loss_mask": 0.28455, "decode.d5.loss_dice": 0.83034, "decode.d6.loss_cls": 0.07273, "decode.d6.loss_mask": 0.28098, "decode.d6.loss_dice": 0.83947, "decode.d7.loss_cls": 0.05753, "decode.d7.loss_mask": 0.28443, "decode.d7.loss_dice": 0.83119, "decode.d8.loss_cls": 0.05104, "decode.d8.loss_mask": 0.2814, "decode.d8.loss_dice": 0.83859, "loss": 16.77058, "time": 2.12019}
{"mode": "train", "epoch": 1, "iter": 310, "lr": 0.0, "memory": 23497, "data_time": 0.01211, "decode.loss_cls": 0.05326, "decode.loss_mask": 0.30151, "decode.loss_dice": 0.89392, "decode.d0.loss_cls": 4.18955, "decode.d0.loss_mask": 0.37634, "decode.d0.loss_dice": 0.94711, "decode.d1.loss_cls": 0.4115, "decode.d1.loss_mask": 0.33016, "decode.d1.loss_dice": 0.8955, "decode.d2.loss_cls": 0.28973, "decode.d2.loss_mask": 0.30526, "decode.d2.loss_dice": 0.88438, "decode.d3.loss_cls": 0.17694, "decode.d3.loss_mask": 0.30524, "decode.d3.loss_dice": 0.90009, "decode.d4.loss_cls": 0.11172, "decode.d4.loss_mask": 0.31318, "decode.d4.loss_dice": 0.89929, "decode.d5.loss_cls": 0.09321, "decode.d5.loss_mask": 0.30827, "decode.d5.loss_dice": 0.8903, "decode.d6.loss_cls": 0.07613, "decode.d6.loss_mask": 0.30817, "decode.d6.loss_dice": 0.89335, "decode.d7.loss_cls": 0.06182, "decode.d7.loss_mask": 0.30565, "decode.d7.loss_dice": 0.88923, "decode.d8.loss_cls": 0.05273, "decode.d8.loss_mask": 0.30478, "decode.d8.loss_dice": 0.89154, "loss": 17.65987, "time": 2.1352}
{"mode": "train", "epoch": 1, "iter": 320, "lr": 0.0, "memory": 23497, "data_time": 0.01225, "decode.loss_cls": 0.05267, "decode.loss_mask": 0.27868, "decode.loss_dice": 0.86515, "decode.d0.loss_cls": 4.21371, "decode.d0.loss_mask": 0.35691, "decode.d0.loss_dice": 0.94345, "decode.d1.loss_cls": 0.36608, "decode.d1.loss_mask": 0.29587, "decode.d1.loss_dice": 0.87291, "decode.d2.loss_cls": 0.25779, "decode.d2.loss_mask": 0.28303, "decode.d2.loss_dice": 0.87315, "decode.d3.loss_cls": 0.1467, "decode.d3.loss_mask": 0.2826, "decode.d3.loss_dice": 0.87043, "decode.d4.loss_cls": 0.09645, "decode.d4.loss_mask": 0.28336, "decode.d4.loss_dice": 0.86733, "decode.d5.loss_cls": 0.08054, "decode.d5.loss_mask": 0.28239, "decode.d5.loss_dice": 0.873, "decode.d6.loss_cls": 0.06875, "decode.d6.loss_mask": 0.28087, "decode.d6.loss_dice": 0.86537, "decode.d7.loss_cls": 0.05363, "decode.d7.loss_mask": 0.27969, "decode.d7.loss_dice": 0.87071, "decode.d8.loss_cls": 0.04749, "decode.d8.loss_mask": 0.28232, "decode.d8.loss_dice": 0.87189, "loss": 17.06293, "time": 2.11866}
{"mode": "train", "epoch": 2, "iter": 330, "lr": 0.0, "memory": 23497, "data_time": 0.21959, "decode.loss_cls": 0.04142, "decode.loss_mask": 0.27892, "decode.loss_dice": 0.80352, "decode.d0.loss_cls": 4.18905, "decode.d0.loss_mask": 0.33103, "decode.d0.loss_dice": 0.86918, "decode.d1.loss_cls": 0.33648, "decode.d1.loss_mask": 0.27751, "decode.d1.loss_dice": 0.81706, "decode.d2.loss_cls": 0.23559, "decode.d2.loss_mask": 0.27133, "decode.d2.loss_dice": 0.82244, "decode.d3.loss_cls": 0.14568, "decode.d3.loss_mask": 0.27358, "decode.d3.loss_dice": 0.82296, "decode.d4.loss_cls": 0.08148, "decode.d4.loss_mask": 0.28063, "decode.d4.loss_dice": 0.8152, "decode.d5.loss_cls": 0.06825, "decode.d5.loss_mask": 0.28012, "decode.d5.loss_dice": 0.80758, "decode.d6.loss_cls": 0.05612, "decode.d6.loss_mask": 0.27729, "decode.d6.loss_dice": 0.8068, "decode.d7.loss_cls": 0.0466, "decode.d7.loss_mask": 0.27388, "decode.d7.loss_dice": 0.80182, "decode.d8.loss_cls": 0.03995, "decode.d8.loss_mask": 0.2808, "decode.d8.loss_dice": 0.80202, "loss": 16.2343, "time": 2.32722}
{"mode": "train", "epoch": 2, "iter": 340, "lr": 0.0, "memory": 23497, "data_time": 0.01178, "decode.loss_cls": 0.03732, "decode.loss_mask": 0.27204, "decode.loss_dice": 0.78606, "decode.d0.loss_cls": 4.19918, "decode.d0.loss_mask": 0.33788, "decode.d0.loss_dice": 0.88111, "decode.d1.loss_cls": 0.31096, "decode.d1.loss_mask": 0.27899, "decode.d1.loss_dice": 0.81862, "decode.d2.loss_cls": 0.2058, "decode.d2.loss_mask": 0.27289, "decode.d2.loss_dice": 0.81731, "decode.d3.loss_cls": 0.11418, "decode.d3.loss_mask": 0.27471, "decode.d3.loss_dice": 0.79913, "decode.d4.loss_cls": 0.07044, "decode.d4.loss_mask": 0.27574, "decode.d4.loss_dice": 0.78808, "decode.d5.loss_cls": 0.0593, "decode.d5.loss_mask": 0.27903, "decode.d5.loss_dice": 0.79789, "decode.d6.loss_cls": 0.04866, "decode.d6.loss_mask": 0.27309, "decode.d6.loss_dice": 0.80117, "decode.d7.loss_cls": 0.04051, "decode.d7.loss_mask": 0.27027, "decode.d7.loss_dice": 0.78833, "decode.d8.loss_cls": 0.0363, "decode.d8.loss_mask": 0.27291, "decode.d8.loss_dice": 0.77766, "loss": 15.98554, "time": 2.11736}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.0, "memory": 23497, "data_time": 0.01154, "decode.loss_cls": 0.02999, "decode.loss_mask": 0.23361, "decode.loss_dice": 0.78131, "decode.d0.loss_cls": 4.19903, "decode.d0.loss_mask": 0.29467, "decode.d0.loss_dice": 0.82271, "decode.d1.loss_cls": 0.2559, "decode.d1.loss_mask": 0.24656, "decode.d1.loss_dice": 0.78072, "decode.d2.loss_cls": 0.16634, "decode.d2.loss_mask": 0.24198, "decode.d2.loss_dice": 0.77929, "decode.d3.loss_cls": 0.0872, "decode.d3.loss_mask": 0.24558, "decode.d3.loss_dice": 0.78298, "decode.d4.loss_cls": 0.05296, "decode.d4.loss_mask": 0.24401, "decode.d4.loss_dice": 0.77816, "decode.d5.loss_cls": 0.04613, "decode.d5.loss_mask": 0.23634, "decode.d5.loss_dice": 0.7727, "decode.d6.loss_cls": 0.03908, "decode.d6.loss_mask": 0.23791, "decode.d6.loss_dice": 0.77685, "decode.d7.loss_cls": 0.03102, "decode.d7.loss_mask": 0.23025, "decode.d7.loss_dice": 0.77715, "decode.d8.loss_cls": 0.02825, "decode.d8.loss_mask": 0.23641, "decode.d8.loss_dice": 0.77741, "loss": 15.21249, "time": 2.11934}
{"mode": "train", "epoch": 2, "iter": 360, "lr": 0.0, "memory": 23497, "data_time": 0.01214, "decode.loss_cls": 0.02998, "decode.loss_mask": 0.28072, "decode.loss_dice": 0.78155, "decode.d0.loss_cls": 4.16837, "decode.d0.loss_mask": 0.35081, "decode.d0.loss_dice": 0.83053, "decode.d1.loss_cls": 0.26518, "decode.d1.loss_mask": 0.29014, "decode.d1.loss_dice": 0.80415, "decode.d2.loss_cls": 0.18532, "decode.d2.loss_mask": 0.28125, "decode.d2.loss_dice": 0.8018, "decode.d3.loss_cls": 0.09955, "decode.d3.loss_mask": 0.27803, "decode.d3.loss_dice": 0.78001, "decode.d4.loss_cls": 0.0581, "decode.d4.loss_mask": 0.28395, "decode.d4.loss_dice": 0.78383, "decode.d5.loss_cls": 0.04861, "decode.d5.loss_mask": 0.27997, "decode.d5.loss_dice": 0.77656, "decode.d6.loss_cls": 0.04096, "decode.d6.loss_mask": 0.28262, "decode.d6.loss_dice": 0.78239, "decode.d7.loss_cls": 0.0332, "decode.d7.loss_mask": 0.28563, "decode.d7.loss_dice": 0.78358, "decode.d8.loss_cls": 0.02863, "decode.d8.loss_mask": 0.28725, "decode.d8.loss_dice": 0.77987, "loss": 15.76256, "time": 2.11781}
{"mode": "train", "epoch": 2, "iter": 370, "lr": 0.0, "memory": 23497, "data_time": 0.0124, "decode.loss_cls": 0.0275, "decode.loss_mask": 0.26549, "decode.loss_dice": 0.77554, "decode.d0.loss_cls": 4.17231, "decode.d0.loss_mask": 0.31197, "decode.d0.loss_dice": 0.83669, "decode.d1.loss_cls": 0.2373, "decode.d1.loss_mask": 0.27091, "decode.d1.loss_dice": 0.79651, "decode.d2.loss_cls": 0.167, "decode.d2.loss_mask": 0.25768, "decode.d2.loss_dice": 0.78512, "decode.d3.loss_cls": 0.0875, "decode.d3.loss_mask": 0.26184, "decode.d3.loss_dice": 0.78871, "decode.d4.loss_cls": 0.05108, "decode.d4.loss_mask": 0.25938, "decode.d4.loss_dice": 0.78201, "decode.d5.loss_cls": 0.04371, "decode.d5.loss_mask": 0.26209, "decode.d5.loss_dice": 0.78676, "decode.d6.loss_cls": 0.03669, "decode.d6.loss_mask": 0.26016, "decode.d6.loss_dice": 0.77619, "decode.d7.loss_cls": 0.0297, "decode.d7.loss_mask": 0.26082, "decode.d7.loss_dice": 0.76846, "decode.d8.loss_cls": 0.02637, "decode.d8.loss_mask": 0.26561, "decode.d8.loss_dice": 0.76332, "loss": 15.41447, "time": 2.12071}
{"mode": "train", "epoch": 2, "iter": 380, "lr": 0.0, "memory": 23497, "data_time": 0.01164, "decode.loss_cls": 0.02376, "decode.loss_mask": 0.22181, "decode.loss_dice": 0.72884, "decode.d0.loss_cls": 4.2071, "decode.d0.loss_mask": 0.26469, "decode.d0.loss_dice": 0.78302, "decode.d1.loss_cls": 0.19421, "decode.d1.loss_mask": 0.22163, "decode.d1.loss_dice": 0.75639, "decode.d2.loss_cls": 0.12765, "decode.d2.loss_mask": 0.22022, "decode.d2.loss_dice": 0.72934, "decode.d3.loss_cls": 0.06901, "decode.d3.loss_mask": 0.22186, "decode.d3.loss_dice": 0.7414, "decode.d4.loss_cls": 0.0406, "decode.d4.loss_mask": 0.22287, "decode.d4.loss_dice": 0.73153, "decode.d5.loss_cls": 0.03671, "decode.d5.loss_mask": 0.22274, "decode.d5.loss_dice": 0.7353, "decode.d6.loss_cls": 0.03145, "decode.d6.loss_mask": 0.22131, "decode.d6.loss_dice": 0.73514, "decode.d7.loss_cls": 0.02481, "decode.d7.loss_mask": 0.21948, "decode.d7.loss_dice": 0.74004, "decode.d8.loss_cls": 0.02205, "decode.d8.loss_mask": 0.22063, "decode.d8.loss_dice": 0.72654, "loss": 14.44213, "time": 2.12032}
{"mode": "train", "epoch": 2, "iter": 390, "lr": 0.0, "memory": 23497, "data_time": 0.01233, "decode.loss_cls": 0.02144, "decode.loss_mask": 0.26096, "decode.loss_dice": 0.72842, "decode.d0.loss_cls": 4.15878, "decode.d0.loss_mask": 0.31054, "decode.d0.loss_dice": 0.79333, "decode.d1.loss_cls": 0.2056, "decode.d1.loss_mask": 0.2615, "decode.d1.loss_dice": 0.74191, "decode.d2.loss_cls": 0.1388, "decode.d2.loss_mask": 0.25762, "decode.d2.loss_dice": 0.74487, "decode.d3.loss_cls": 0.07394, "decode.d3.loss_mask": 0.26069, "decode.d3.loss_dice": 0.73579, "decode.d4.loss_cls": 0.03927, "decode.d4.loss_mask": 0.26165, "decode.d4.loss_dice": 0.73698, "decode.d5.loss_cls": 0.03238, "decode.d5.loss_mask": 0.26035, "decode.d5.loss_dice": 0.73868, "decode.d6.loss_cls": 0.02782, "decode.d6.loss_mask": 0.25786, "decode.d6.loss_dice": 0.73653, "decode.d7.loss_cls": 0.02263, "decode.d7.loss_mask": 0.26159, "decode.d7.loss_dice": 0.73708, "decode.d8.loss_cls": 0.01972, "decode.d8.loss_mask": 0.26601, "decode.d8.loss_dice": 0.73459, "loss": 14.82734, "time": 2.12088}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.0, "memory": 23497, "data_time": 0.01226, "decode.loss_cls": 0.02292, "decode.loss_mask": 0.28504, "decode.loss_dice": 0.79488, "decode.d0.loss_cls": 4.15715, "decode.d0.loss_mask": 0.32549, "decode.d0.loss_dice": 0.83109, "decode.d1.loss_cls": 0.19531, "decode.d1.loss_mask": 0.28379, "decode.d1.loss_dice": 0.79614, "decode.d2.loss_cls": 0.13938, "decode.d2.loss_mask": 0.28382, "decode.d2.loss_dice": 0.81428, "decode.d3.loss_cls": 0.06817, "decode.d3.loss_mask": 0.28358, "decode.d3.loss_dice": 0.804, "decode.d4.loss_cls": 0.03699, "decode.d4.loss_mask": 0.29127, "decode.d4.loss_dice": 0.79447, "decode.d5.loss_cls": 0.03255, "decode.d5.loss_mask": 0.29101, "decode.d5.loss_dice": 0.79421, "decode.d6.loss_cls": 0.02927, "decode.d6.loss_mask": 0.28582, "decode.d6.loss_dice": 0.7871, "decode.d7.loss_cls": 0.02396, "decode.d7.loss_mask": 0.28687, "decode.d7.loss_dice": 0.79558, "decode.d8.loss_cls": 0.02114, "decode.d8.loss_mask": 0.28405, "decode.d8.loss_dice": 0.78681, "loss": 15.62614, "time": 2.12148}
{"mode": "val", "epoch": 2, "iter": 10, "lr": 0.0, "aAcc": 0.3401, "mIoU": 0.0681, "mAcc": 0.0783, "IoU.bg": 0.3948, "IoU.Anchovy": 0.0091, "IoU.Olives": 0.0004, "IoU.Salami": 0.0017, "IoU.Red_Pepper": 0.0026, "IoU.Yellow_Pepper": 0.0, "Acc.bg": 0.4017, "Acc.Anchovy": 0.0238, "Acc.Olives": 0.0019, "Acc.Salami": 0.0382, "Acc.Red_Pepper": 0.0039, "Acc.Yellow_Pepper": 0.0}
{"mode": "train", "epoch": 2, "iter": 410, "lr": 0.0, "memory": 23497, "data_time": 0.65618, "decode.loss_cls": 0.01953, "decode.loss_mask": 0.26542, "decode.loss_dice": 0.82083, "decode.d0.loss_cls": 4.17708, "decode.d0.loss_mask": 0.30165, "decode.d0.loss_dice": 0.8521, "decode.d1.loss_cls": 0.17462, "decode.d1.loss_mask": 0.26733, "decode.d1.loss_dice": 0.83095, "decode.d2.loss_cls": 0.11385, "decode.d2.loss_mask": 0.26729, "decode.d2.loss_dice": 0.82633, "decode.d3.loss_cls": 0.05312, "decode.d3.loss_mask": 0.26718, "decode.d3.loss_dice": 0.82932, "decode.d4.loss_cls": 0.03013, "decode.d4.loss_mask": 0.26665, "decode.d4.loss_dice": 0.81578, "decode.d5.loss_cls": 0.02725, "decode.d5.loss_mask": 0.26219, "decode.d5.loss_dice": 0.8221, "decode.d6.loss_cls": 0.02451, "decode.d6.loss_mask": 0.26181, "decode.d6.loss_dice": 0.81401, "decode.d7.loss_cls": 0.02101, "decode.d7.loss_mask": 0.25993, "decode.d7.loss_dice": 0.81878, "decode.d8.loss_cls": 0.01847, "decode.d8.loss_mask": 0.26628, "decode.d8.loss_dice": 0.82122, "loss": 15.59672, "time": 2.76374}
{"mode": "train", "epoch": 2, "iter": 420, "lr": 0.0, "memory": 23497, "data_time": 0.01216, "decode.loss_cls": 0.01881, "decode.loss_mask": 0.23981, "decode.loss_dice": 0.76198, "decode.d0.loss_cls": 4.18318, "decode.d0.loss_mask": 0.2802, "decode.d0.loss_dice": 0.83038, "decode.d1.loss_cls": 0.1515, "decode.d1.loss_mask": 0.23918, "decode.d1.loss_dice": 0.77681, "decode.d2.loss_cls": 0.09034, "decode.d2.loss_mask": 0.23524, "decode.d2.loss_dice": 0.77683, "decode.d3.loss_cls": 0.04289, "decode.d3.loss_mask": 0.23568, "decode.d3.loss_dice": 0.75922, "decode.d4.loss_cls": 0.02653, "decode.d4.loss_mask": 0.24054, "decode.d4.loss_dice": 0.76256, "decode.d5.loss_cls": 0.02491, "decode.d5.loss_mask": 0.24234, "decode.d5.loss_dice": 0.761, "decode.d6.loss_cls": 0.02377, "decode.d6.loss_mask": 0.23725, "decode.d6.loss_dice": 0.76823, "decode.d7.loss_cls": 0.0199, "decode.d7.loss_mask": 0.23945, "decode.d7.loss_dice": 0.75703, "decode.d8.loss_cls": 0.01748, "decode.d8.loss_mask": 0.23687, "decode.d8.loss_dice": 0.74727, "loss": 14.72721, "time": 2.11917}
{"mode": "train", "epoch": 2, "iter": 430, "lr": 0.0, "memory": 23497, "data_time": 0.01217, "decode.loss_cls": 0.01657, "decode.loss_mask": 0.27127, "decode.loss_dice": 0.7706, "decode.d0.loss_cls": 4.15492, "decode.d0.loss_mask": 0.32533, "decode.d0.loss_dice": 0.83901, "decode.d1.loss_cls": 0.15277, "decode.d1.loss_mask": 0.27904, "decode.d1.loss_dice": 0.79624, "decode.d2.loss_cls": 0.09496, "decode.d2.loss_mask": 0.27105, "decode.d2.loss_dice": 0.78071, "decode.d3.loss_cls": 0.04357, "decode.d3.loss_mask": 0.27326, "decode.d3.loss_dice": 0.7721, "decode.d4.loss_cls": 0.02525, "decode.d4.loss_mask": 0.28034, "decode.d4.loss_dice": 0.78442, "decode.d5.loss_cls": 0.0228, "decode.d5.loss_mask": 0.27748, "decode.d5.loss_dice": 0.77676, "decode.d6.loss_cls": 0.0203, "decode.d6.loss_mask": 0.2762, "decode.d6.loss_dice": 0.77966, "decode.d7.loss_cls": 0.01666, "decode.d7.loss_mask": 0.27481, "decode.d7.loss_dice": 0.77014, "decode.d8.loss_cls": 0.01501, "decode.d8.loss_mask": 0.27998, "decode.d8.loss_dice": 0.78064, "loss": 15.22185, "time": 2.1225}
{"mode": "train", "epoch": 2, "iter": 440, "lr": 0.0, "memory": 23497, "data_time": 0.01203, "decode.loss_cls": 0.01478, "decode.loss_mask": 0.22675, "decode.loss_dice": 0.77707, "decode.d0.loss_cls": 4.1721, "decode.d0.loss_mask": 0.2685, "decode.d0.loss_dice": 0.83224, "decode.d1.loss_cls": 0.12522, "decode.d1.loss_mask": 0.23181, "decode.d1.loss_dice": 0.81227, "decode.d2.loss_cls": 0.07209, "decode.d2.loss_mask": 0.23029, "decode.d2.loss_dice": 0.80007, "decode.d3.loss_cls": 0.0328, "decode.d3.loss_mask": 0.23124, "decode.d3.loss_dice": 0.7907, "decode.d4.loss_cls": 0.01972, "decode.d4.loss_mask": 0.22967, "decode.d4.loss_dice": 0.78749, "decode.d5.loss_cls": 0.01831, "decode.d5.loss_mask": 0.23239, "decode.d5.loss_dice": 0.7892, "decode.d6.loss_cls": 0.01711, "decode.d6.loss_mask": 0.2288, "decode.d6.loss_dice": 0.79426, "decode.d7.loss_cls": 0.01447, "decode.d7.loss_mask": 0.2299, "decode.d7.loss_dice": 0.80503, "decode.d8.loss_cls": 0.01326, "decode.d8.loss_mask": 0.2271, "decode.d8.loss_dice": 0.77942, "loss": 14.80405, "time": 2.11943}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.0, "memory": 23497, "data_time": 0.01173, "decode.loss_cls": 0.01538, "decode.loss_mask": 0.26652, "decode.loss_dice": 0.78819, "decode.d0.loss_cls": 4.15963, "decode.d0.loss_mask": 0.31428, "decode.d0.loss_dice": 0.85111, "decode.d1.loss_cls": 0.15024, "decode.d1.loss_mask": 0.28133, "decode.d1.loss_dice": 0.79414, "decode.d2.loss_cls": 0.08403, "decode.d2.loss_mask": 0.26252, "decode.d2.loss_dice": 0.78902, "decode.d3.loss_cls": 0.04433, "decode.d3.loss_mask": 0.27082, "decode.d3.loss_dice": 0.78914, "decode.d4.loss_cls": 0.02501, "decode.d4.loss_mask": 0.26732, "decode.d4.loss_dice": 0.79055, "decode.d5.loss_cls": 0.02171, "decode.d5.loss_mask": 0.26963, "decode.d5.loss_dice": 0.77867, "decode.d6.loss_cls": 0.01903, "decode.d6.loss_mask": 0.26713, "decode.d6.loss_dice": 0.77923, "decode.d7.loss_cls": 0.01565, "decode.d7.loss_mask": 0.26839, "decode.d7.loss_dice": 0.78803, "decode.d8.loss_cls": 0.01415, "decode.d8.loss_mask": 0.27144, "decode.d8.loss_dice": 0.7787, "loss": 15.21533, "time": 2.12195}
{"mode": "train", "epoch": 2, "iter": 460, "lr": 0.0, "memory": 23497, "data_time": 0.01231, "decode.loss_cls": 0.01405, "decode.loss_mask": 0.25947, "decode.loss_dice": 0.75246, "decode.d0.loss_cls": 4.13852, "decode.d0.loss_mask": 0.31698, "decode.d0.loss_dice": 0.81137, "decode.d1.loss_cls": 0.13226, "decode.d1.loss_mask": 0.26587, "decode.d1.loss_dice": 0.76693, "decode.d2.loss_cls": 0.08066, "decode.d2.loss_mask": 0.26265, "decode.d2.loss_dice": 0.77102, "decode.d3.loss_cls": 0.03635, "decode.d3.loss_mask": 0.25624, "decode.d3.loss_dice": 0.74994, "decode.d4.loss_cls": 0.02003, "decode.d4.loss_mask": 0.26444, "decode.d4.loss_dice": 0.76041, "decode.d5.loss_cls": 0.01753, "decode.d5.loss_mask": 0.26583, "decode.d5.loss_dice": 0.76196, "decode.d6.loss_cls": 0.01648, "decode.d6.loss_mask": 0.26103, "decode.d6.loss_dice": 0.75242, "decode.d7.loss_cls": 0.01392, "decode.d7.loss_mask": 0.26113, "decode.d7.loss_dice": 0.76342, "decode.d8.loss_cls": 0.01269, "decode.d8.loss_mask": 0.26143, "decode.d8.loss_dice": 0.75339, "loss": 14.80088, "time": 2.12033}
{"mode": "train", "epoch": 2, "iter": 470, "lr": 0.0, "memory": 23497, "data_time": 0.01256, "decode.loss_cls": 0.01374, "decode.loss_mask": 0.29097, "decode.loss_dice": 0.83467, "decode.d0.loss_cls": 4.13438, "decode.d0.loss_mask": 0.33954, "decode.d0.loss_dice": 0.8492, "decode.d1.loss_cls": 0.14406, "decode.d1.loss_mask": 0.29364, "decode.d1.loss_dice": 0.82742, "decode.d2.loss_cls": 0.07855, "decode.d2.loss_mask": 0.29581, "decode.d2.loss_dice": 0.83026, "decode.d3.loss_cls": 0.03776, "decode.d3.loss_mask": 0.29015, "decode.d3.loss_dice": 0.84265, "decode.d4.loss_cls": 0.02033, "decode.d4.loss_mask": 0.28844, "decode.d4.loss_dice": 0.82422, "decode.d5.loss_cls": 0.0183, "decode.d5.loss_mask": 0.28919, "decode.d5.loss_dice": 0.82726, "decode.d6.loss_cls": 0.01709, "decode.d6.loss_mask": 0.28831, "decode.d6.loss_dice": 0.82398, "decode.d7.loss_cls": 0.01422, "decode.d7.loss_mask": 0.28858, "decode.d7.loss_dice": 0.82854, "decode.d8.loss_cls": 0.01269, "decode.d8.loss_mask": 0.28921, "decode.d8.loss_dice": 0.82999, "loss": 15.76315, "time": 2.12088}
{"mode": "train", "epoch": 2, "iter": 480, "lr": 0.0, "memory": 23497, "data_time": 0.01185, "decode.loss_cls": 0.01269, "decode.loss_mask": 0.24787, "decode.loss_dice": 0.73849, "decode.d0.loss_cls": 4.13983, "decode.d0.loss_mask": 0.29185, "decode.d0.loss_dice": 0.79653, "decode.d1.loss_cls": 0.12563, "decode.d1.loss_mask": 0.25262, "decode.d1.loss_dice": 0.75652, "decode.d2.loss_cls": 0.07388, "decode.d2.loss_mask": 0.2497, "decode.d2.loss_dice": 0.74064, "decode.d3.loss_cls": 0.03577, "decode.d3.loss_mask": 0.24909, "decode.d3.loss_dice": 0.75007, "decode.d4.loss_cls": 0.01903, "decode.d4.loss_mask": 0.25087, "decode.d4.loss_dice": 0.75198, "decode.d5.loss_cls": 0.01723, "decode.d5.loss_mask": 0.24907, "decode.d5.loss_dice": 0.76075, "decode.d6.loss_cls": 0.01579, "decode.d6.loss_mask": 0.25155, "decode.d6.loss_dice": 0.7521, "decode.d7.loss_cls": 0.013, "decode.d7.loss_mask": 0.24338, "decode.d7.loss_dice": 0.73989, "decode.d8.loss_cls": 0.0117, "decode.d8.loss_mask": 0.24969, "decode.d8.loss_dice": 0.74218, "loss": 14.5294, "time": 2.12204}
