{"env_info": "sys.platform: linux\nPython: 3.7.13 (default, Mar 29 2022, 02:18:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1: NVIDIA L40\nCUDA_HOME: /usr/local/cuda\nNVCC: Build cuda_11.3.r11.3/compiler.29920130_0\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.9.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.0+cu111\nOpenCV: 4.9.0\nMMCV: 1.4.2\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMSegmentation: 0.20.2+94ffa6b", "seed": 802405801, "exp_name": "pizze_training.py", "mmseg_version": "0.20.2+94ffa6b", "config": "num_things_classes = 6\nnum_stuff_classes = 0\nnum_classes = 6\nnorm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoderMask2Former',\n    pretrained=\n    '/workspace/ViT-Adapter/segmentation/mask2former_beit_adapter_base_512_40k_cocostuff10k.pth.tar',\n    backbone=dict(\n        type='BEiTAdapter',\n        patch_size=16,\n        embed_dim=768,\n        depth=12,\n        num_heads=12,\n        mlp_ratio=4,\n        qkv_bias=True,\n        use_abs_pos_emb=False,\n        use_rel_pos_bias=True,\n        img_size=512,\n        init_values=1e-06,\n        drop_path_rate=0.2,\n        conv_inplane=64,\n        n_points=4,\n        deform_num_heads=12,\n        cffn_ratio=0.25,\n        deform_ratio=0.5,\n        interaction_indexes=[[0, 2], [3, 5], [6, 8], [9, 11]],\n        pretrained=\n        '/workspace/ViT-Adapter/segmentation/mask2former_beit_adapter_base_512_40k_cocostuff10k.pth.tar'\n    ),\n    decode_head=dict(\n        type='Mask2FormerHead',\n        in_channels=[768, 768, 768, 768],\n        feat_channels=256,\n        out_channels=256,\n        in_index=[0, 1, 2, 3],\n        num_things_classes=6,\n        num_stuff_classes=0,\n        num_queries=100,\n        num_transformer_feat_level=3,\n        pixel_decoder=dict(\n            type='MSDeformAttnPixelDecoder',\n            num_outs=3,\n            norm_cfg=dict(type='GN', num_groups=32),\n            act_cfg=dict(type='ReLU'),\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=256,\n                        num_heads=8,\n                        num_levels=3,\n                        num_points=4,\n                        im2col_step=64,\n                        dropout=0.0,\n                        batch_first=False,\n                        norm_cfg=None,\n                        init_cfg=None),\n                    ffn_cfgs=dict(\n                        type='FFN',\n                        embed_dims=256,\n                        feedforward_channels=1024,\n                        num_fcs=2,\n                        ffn_drop=0.0,\n                        act_cfg=dict(type='ReLU', inplace=True)),\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm')),\n                init_cfg=None),\n            positional_encoding=dict(\n                type='SinePositionalEncoding', num_feats=128, normalize=True),\n            init_cfg=None),\n        enforce_decoder_input_project=False,\n        positional_encoding=dict(\n            type='SinePositionalEncoding', num_feats=128, normalize=True),\n        transformer_decoder=dict(\n            type='DetrTransformerDecoder',\n            return_intermediate=True,\n            num_layers=9,\n            transformerlayers=dict(\n                type='DetrTransformerDecoderLayer',\n                attn_cfgs=dict(\n                    type='MultiheadAttention',\n                    embed_dims=256,\n                    num_heads=8,\n                    attn_drop=0.0,\n                    proj_drop=0.0,\n                    dropout_layer=None,\n                    batch_first=False),\n                ffn_cfgs=dict(\n                    embed_dims=256,\n                    feedforward_channels=2048,\n                    num_fcs=2,\n                    act_cfg=dict(type='ReLU', inplace=True),\n                    ffn_drop=0.0,\n                    dropout_layer=None,\n                    add_identity=True),\n                feedforward_channels=2048,\n                operation_order=('cross_attn', 'norm', 'self_attn', 'norm',\n                                 'ffn', 'norm')),\n            init_cfg=None),\n        loss_cls=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=False,\n            loss_weight=2.0,\n            reduction='mean',\n            class_weight=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1]),\n        loss_mask=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=True,\n            reduction='mean',\n            loss_weight=5.0),\n        loss_dice=dict(\n            type='DiceLoss',\n            use_sigmoid=True,\n            activate=True,\n            reduction='mean',\n            naive_dice=True,\n            eps=1.0,\n            loss_weight=5.0),\n        train_cfg=dict(\n            num_points=12544,\n            oversample_ratio=3.0,\n            importance_sample_ratio=0.75,\n            assigner=dict(\n                type='MaskHungarianAssigner',\n                cls_cost=dict(type='ClassificationCost', weight=2.0),\n                mask_cost=dict(\n                    type='CrossEntropyLossCost', weight=5.0, use_sigmoid=True),\n                dice_cost=dict(\n                    type='DiceCost', weight=5.0, pred_act=True, eps=1.0)),\n            sampler=dict(type='MaskPseudoSampler')),\n        test_cfg=dict(\n            panoptic_on=True,\n            semantic_on=False,\n            instance_on=True,\n            max_per_image=100,\n            iou_thr=0.8,\n            filter_low_score=True,\n            mode='slide',\n            crop_size=(512, 512),\n            stride=(341, 341))),\n    train_cfg=dict(\n        num_points=12544,\n        oversample_ratio=3.0,\n        importance_sample_ratio=0.75,\n        assigner=dict(\n            type='MaskHungarianAssigner',\n            cls_cost=dict(type='ClassificationCost', weight=2.0),\n            mask_cost=dict(\n                type='CrossEntropyLossCost', weight=5.0, use_sigmoid=True),\n            dice_cost=dict(\n                type='DiceCost', weight=5.0, pred_act=True, eps=1.0)),\n        sampler=dict(type='MaskPseudoSampler')),\n    test_cfg=dict(\n        panoptic_on=True,\n        semantic_on=False,\n        instance_on=True,\n        max_per_image=100,\n        iou_thr=0.8,\n        filter_low_score=True,\n        mode='slide',\n        crop_size=(512, 512),\n        stride=(341, 341)),\n    init_cfg=None)\ndataset_type = 'PizzeDataset'\ndata_root = 'data/dataset'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 512)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', reduce_zero_label=True),\n    dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='ToMask'),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=['img', 'gt_semantic_seg', 'gt_masks', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='ResizeToMultiple', size_divisor=32),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=4,\n    train=dict(\n        type='PizzeDataset',\n        data_root='data/dataset',\n        img_dir='images/training',\n        ann_dir='annotations/training',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', reduce_zero_label=True),\n            dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n            dict(type='ToMask'),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_semantic_seg', 'gt_masks', 'gt_labels'])\n        ]),\n    val=dict(\n        type='PizzeDataset',\n        data_root='data/dataset',\n        img_dir='images/validation',\n        ann_dir='annotations/validation',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='ResizeToMultiple', size_divisor=32),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='PizzeDataset',\n        data_root='data/dataset',\n        img_dir='images/validation',\n        ann_dir='annotations/validation',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='ResizeToMultiple', size_divisor=32),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=10, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(\n    type='AdamW',\n    lr=3e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    constructor='LayerDecayOptimizerConstructor',\n    paramwise_cfg=dict(num_layers=12, layer_decay_rate=0.95))\noptimizer_config = dict()\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=40000)\ncheckpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)\nevaluation = dict(interval=200, metric='mIoU', pre_eval=True, save_best='mIoU')\npretrained = '/workspace/ViT-Adapter/segmentation/mask2former_beit_adapter_base_512_40k_cocostuff10k.pth.tar'\nwork_dir = './work_dirs/pizze_training'\ngpu_ids = range(0, 2)\nauto_resume = False\ndevice = 'cuda'\nseed = 802405801\n", "CLASSES": ["bg", "Anchovy", "Olives", "Salami", "Red_Pepper", "Yellow_Pepper"], "PALETTE": [[255, 255, 255], [0, 0, 255], [0, 255, 255], [0, 255, 0], [255, 255, 0], [255, 0, 0]], "hook_msgs": {}}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 0.0, "memory": 9602, "data_time": 0.59497, "decode.loss_cls": 3.50954, "decode.loss_mask": 3.78035, "decode.loss_dice": 4.32335, "decode.d0.loss_cls": 3.89942, "decode.d0.loss_mask": 3.2526, "decode.d0.loss_dice": 4.32787, "decode.d1.loss_cls": 3.7264, "decode.d1.loss_mask": 3.57051, "decode.d1.loss_dice": 4.35193, "decode.d2.loss_cls": 4.27519, "decode.d2.loss_mask": 3.82476, "decode.d2.loss_dice": 4.43484, "decode.d3.loss_cls": 3.44748, "decode.d3.loss_mask": 3.71224, "decode.d3.loss_dice": 4.39834, "decode.d4.loss_cls": 2.76254, "decode.d4.loss_mask": 3.6676, "decode.d4.loss_dice": 4.36067, "decode.d5.loss_cls": 4.06842, "decode.d5.loss_mask": 3.46276, "decode.d5.loss_dice": 4.36694, "decode.d6.loss_cls": 2.80474, "decode.d6.loss_mask": 3.69313, "decode.d6.loss_dice": 4.3224, "decode.d7.loss_cls": 2.69676, "decode.d7.loss_mask": 3.7015, "decode.d7.loss_dice": 4.349, "decode.d8.loss_cls": 3.08491, "decode.d8.loss_mask": 3.61278, "decode.d8.loss_dice": 4.35767, "loss": 114.14665, "time": 0.95473}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 0.0, "memory": 9602, "data_time": 0.00614, "decode.loss_cls": 3.46388, "decode.loss_mask": 3.62055, "decode.loss_dice": 4.23848, "decode.d0.loss_cls": 3.90977, "decode.d0.loss_mask": 3.17965, "decode.d0.loss_dice": 4.27519, "decode.d1.loss_cls": 3.70219, "decode.d1.loss_mask": 3.52484, "decode.d1.loss_dice": 4.26004, "decode.d2.loss_cls": 4.2401, "decode.d2.loss_mask": 3.73327, "decode.d2.loss_dice": 4.32791, "decode.d3.loss_cls": 3.43138, "decode.d3.loss_mask": 3.60201, "decode.d3.loss_dice": 4.30458, "decode.d4.loss_cls": 2.72531, "decode.d4.loss_mask": 3.57482, "decode.d4.loss_dice": 4.2863, "decode.d5.loss_cls": 3.97758, "decode.d5.loss_mask": 3.37592, "decode.d5.loss_dice": 4.31328, "decode.d6.loss_cls": 2.75433, "decode.d6.loss_mask": 3.5918, "decode.d6.loss_dice": 4.28458, "decode.d7.loss_cls": 2.64976, "decode.d7.loss_mask": 3.59691, "decode.d7.loss_dice": 4.25332, "decode.d8.loss_cls": 3.03568, "decode.d8.loss_mask": 3.48752, "decode.d8.loss_dice": 4.26071, "loss": 111.98166, "time": 0.3402}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 0.0, "memory": 9602, "data_time": 0.0056, "decode.loss_cls": 3.40079, "decode.loss_mask": 3.30929, "decode.loss_dice": 4.41106, "decode.d0.loss_cls": 3.87497, "decode.d0.loss_mask": 3.02598, "decode.d0.loss_dice": 4.46175, "decode.d1.loss_cls": 3.65395, "decode.d1.loss_mask": 3.39419, "decode.d1.loss_dice": 4.43352, "decode.d2.loss_cls": 4.13158, "decode.d2.loss_mask": 3.49686, "decode.d2.loss_dice": 4.3839, "decode.d3.loss_cls": 3.2866, "decode.d3.loss_mask": 3.42078, "decode.d3.loss_dice": 4.44486, "decode.d4.loss_cls": 2.63209, "decode.d4.loss_mask": 3.37985, "decode.d4.loss_dice": 4.46242, "decode.d5.loss_cls": 3.87141, "decode.d5.loss_mask": 3.21645, "decode.d5.loss_dice": 4.52675, "decode.d6.loss_cls": 2.68613, "decode.d6.loss_mask": 3.43954, "decode.d6.loss_dice": 4.46014, "decode.d7.loss_cls": 2.54926, "decode.d7.loss_mask": 3.47401, "decode.d7.loss_dice": 4.39356, "decode.d8.loss_cls": 2.94527, "decode.d8.loss_mask": 3.21362, "decode.d8.loss_dice": 4.45782, "loss": 110.8384, "time": 0.34033}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 0.0, "memory": 9602, "data_time": 0.00604, "decode.loss_cls": 3.35704, "decode.loss_mask": 2.95444, "decode.loss_dice": 4.51687, "decode.d0.loss_cls": 3.86689, "decode.d0.loss_mask": 2.83013, "decode.d0.loss_dice": 4.43846, "decode.d1.loss_cls": 3.61916, "decode.d1.loss_mask": 3.20313, "decode.d1.loss_dice": 4.41044, "decode.d2.loss_cls": 4.03624, "decode.d2.loss_mask": 3.30722, "decode.d2.loss_dice": 4.34026, "decode.d3.loss_cls": 3.22025, "decode.d3.loss_mask": 3.17169, "decode.d3.loss_dice": 4.38559, "decode.d4.loss_cls": 2.51527, "decode.d4.loss_mask": 3.0712, "decode.d4.loss_dice": 4.4513, "decode.d5.loss_cls": 3.68214, "decode.d5.loss_mask": 2.86785, "decode.d5.loss_dice": 4.53969, "decode.d6.loss_cls": 2.51649, "decode.d6.loss_mask": 3.24688, "decode.d6.loss_dice": 4.44971, "decode.d7.loss_cls": 2.45238, "decode.d7.loss_mask": 3.22636, "decode.d7.loss_dice": 4.4346, "decode.d8.loss_cls": 2.78822, "decode.d8.loss_mask": 2.76649, "decode.d8.loss_dice": 4.46954, "loss": 107.13593, "time": 0.34039}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 9602, "data_time": 0.00586, "decode.loss_cls": 3.32441, "decode.loss_mask": 2.3944, "decode.loss_dice": 4.54204, "decode.d0.loss_cls": 3.85952, "decode.d0.loss_mask": 2.48989, "decode.d0.loss_dice": 4.36928, "decode.d1.loss_cls": 3.56867, "decode.d1.loss_mask": 2.90379, "decode.d1.loss_dice": 4.40895, "decode.d2.loss_cls": 3.88914, "decode.d2.loss_mask": 2.87985, "decode.d2.loss_dice": 4.31926, "decode.d3.loss_cls": 3.08867, "decode.d3.loss_mask": 2.72379, "decode.d3.loss_dice": 4.35159, "decode.d4.loss_cls": 2.41887, "decode.d4.loss_mask": 2.51774, "decode.d4.loss_dice": 4.4168, "decode.d5.loss_cls": 3.49828, "decode.d5.loss_mask": 2.31119, "decode.d5.loss_dice": 4.53763, "decode.d6.loss_cls": 2.38939, "decode.d6.loss_mask": 2.77283, "decode.d6.loss_dice": 4.49039, "decode.d7.loss_cls": 2.38482, "decode.d7.loss_mask": 2.74641, "decode.d7.loss_dice": 4.46484, "decode.d8.loss_cls": 2.70328, "decode.d8.loss_mask": 2.15726, "decode.d8.loss_dice": 4.48246, "loss": 101.40543, "time": 0.33877}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 0.0, "memory": 9602, "data_time": 0.00646, "decode.loss_cls": 3.11183, "decode.loss_mask": 1.8426, "decode.loss_dice": 4.6112, "decode.d0.loss_cls": 3.83976, "decode.d0.loss_mask": 2.1368, "decode.d0.loss_dice": 4.40168, "decode.d1.loss_cls": 3.51059, "decode.d1.loss_mask": 2.54196, "decode.d1.loss_dice": 4.43638, "decode.d2.loss_cls": 3.69852, "decode.d2.loss_mask": 2.36095, "decode.d2.loss_dice": 4.35072, "decode.d3.loss_cls": 2.87954, "decode.d3.loss_mask": 2.20939, "decode.d3.loss_dice": 4.39331, "decode.d4.loss_cls": 2.30852, "decode.d4.loss_mask": 1.94844, "decode.d4.loss_dice": 4.5087, "decode.d5.loss_cls": 3.35108, "decode.d5.loss_mask": 1.79413, "decode.d5.loss_dice": 4.58417, "decode.d6.loss_cls": 2.30397, "decode.d6.loss_mask": 2.27183, "decode.d6.loss_dice": 4.51638, "decode.d7.loss_cls": 2.32331, "decode.d7.loss_mask": 2.2271, "decode.d7.loss_dice": 4.50423, "decode.d8.loss_cls": 2.59872, "decode.d8.loss_mask": 1.73047, "decode.d8.loss_dice": 4.56946, "loss": 95.86572, "time": 0.33989}
{"mode": "train", "epoch": 1, "iter": 70, "lr": 0.0, "memory": 9602, "data_time": 0.00589, "decode.loss_cls": 2.87113, "decode.loss_mask": 1.71071, "decode.loss_dice": 4.57476, "decode.d0.loss_cls": 3.80475, "decode.d0.loss_mask": 2.04498, "decode.d0.loss_dice": 4.30215, "decode.d1.loss_cls": 3.36603, "decode.d1.loss_mask": 2.24646, "decode.d1.loss_dice": 4.33226, "decode.d2.loss_cls": 3.35392, "decode.d2.loss_mask": 2.08258, "decode.d2.loss_dice": 4.29088, "decode.d3.loss_cls": 2.68099, "decode.d3.loss_mask": 1.93599, "decode.d3.loss_dice": 4.34074, "decode.d4.loss_cls": 2.12335, "decode.d4.loss_mask": 1.79816, "decode.d4.loss_dice": 4.44505, "decode.d5.loss_cls": 3.14173, "decode.d5.loss_mask": 1.70038, "decode.d5.loss_dice": 4.54707, "decode.d6.loss_cls": 2.17026, "decode.d6.loss_mask": 1.96097, "decode.d6.loss_dice": 4.47086, "decode.d7.loss_cls": 2.18399, "decode.d7.loss_mask": 1.89439, "decode.d7.loss_dice": 4.49606, "decode.d8.loss_cls": 2.59226, "decode.d8.loss_mask": 1.6363, "decode.d8.loss_dice": 4.56035, "loss": 91.65952, "time": 0.34046}
{"mode": "train", "epoch": 1, "iter": 80, "lr": 0.0, "memory": 9602, "data_time": 0.00608, "decode.loss_cls": 2.50174, "decode.loss_mask": 1.60856, "decode.loss_dice": 4.55629, "decode.d0.loss_cls": 3.78647, "decode.d0.loss_mask": 1.92313, "decode.d0.loss_dice": 4.29671, "decode.d1.loss_cls": 3.14746, "decode.d1.loss_mask": 2.02994, "decode.d1.loss_dice": 4.3181, "decode.d2.loss_cls": 3.07656, "decode.d2.loss_mask": 1.95319, "decode.d2.loss_dice": 4.25013, "decode.d3.loss_cls": 2.45235, "decode.d3.loss_mask": 1.84899, "decode.d3.loss_dice": 4.33899, "decode.d4.loss_cls": 1.96067, "decode.d4.loss_mask": 1.72109, "decode.d4.loss_dice": 4.42101, "decode.d5.loss_cls": 2.78127, "decode.d5.loss_mask": 1.59249, "decode.d5.loss_dice": 4.53535, "decode.d6.loss_cls": 1.99704, "decode.d6.loss_mask": 1.8741, "decode.d6.loss_dice": 4.41548, "decode.d7.loss_cls": 2.0268, "decode.d7.loss_mask": 1.80596, "decode.d7.loss_dice": 4.42723, "decode.d8.loss_cls": 2.3403, "decode.d8.loss_mask": 1.58731, "decode.d8.loss_dice": 4.54476, "loss": 88.11946, "time": 0.3397}
{"mode": "train", "epoch": 1, "iter": 90, "lr": 0.0, "memory": 9602, "data_time": 0.0064, "decode.loss_cls": 2.23739, "decode.loss_mask": 1.55626, "decode.loss_dice": 4.5228, "decode.d0.loss_cls": 3.78634, "decode.d0.loss_mask": 1.79159, "decode.d0.loss_dice": 4.30314, "decode.d1.loss_cls": 2.998, "decode.d1.loss_mask": 1.7973, "decode.d1.loss_dice": 4.36028, "decode.d2.loss_cls": 2.82766, "decode.d2.loss_mask": 1.81175, "decode.d2.loss_dice": 4.25015, "decode.d3.loss_cls": 2.25645, "decode.d3.loss_mask": 1.73155, "decode.d3.loss_dice": 4.31777, "decode.d4.loss_cls": 1.83836, "decode.d4.loss_mask": 1.65935, "decode.d4.loss_dice": 4.37209, "decode.d5.loss_cls": 2.43713, "decode.d5.loss_mask": 1.53072, "decode.d5.loss_dice": 4.5093, "decode.d6.loss_cls": 1.8656, "decode.d6.loss_mask": 1.78571, "decode.d6.loss_dice": 4.37536, "decode.d7.loss_cls": 1.88936, "decode.d7.loss_mask": 1.71225, "decode.d7.loss_dice": 4.41251, "decode.d8.loss_cls": 2.10069, "decode.d8.loss_mask": 1.57125, "decode.d8.loss_dice": 4.53501, "loss": 85.14311, "time": 0.33933}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 9602, "data_time": 0.00602, "decode.loss_cls": 1.99855, "decode.loss_mask": 1.70655, "decode.loss_dice": 4.38555, "decode.d0.loss_cls": 3.76832, "decode.d0.loss_mask": 1.81796, "decode.d0.loss_dice": 4.24826, "decode.d1.loss_cls": 2.78421, "decode.d1.loss_mask": 1.86698, "decode.d1.loss_dice": 4.24365, "decode.d2.loss_cls": 2.55087, "decode.d2.loss_mask": 1.9286, "decode.d2.loss_dice": 4.16637, "decode.d3.loss_cls": 2.04682, "decode.d3.loss_mask": 1.78942, "decode.d3.loss_dice": 4.25581, "decode.d4.loss_cls": 1.74504, "decode.d4.loss_mask": 1.78584, "decode.d4.loss_dice": 4.27721, "decode.d5.loss_cls": 2.15456, "decode.d5.loss_mask": 1.65827, "decode.d5.loss_dice": 4.41964, "decode.d6.loss_cls": 1.7731, "decode.d6.loss_mask": 1.91377, "decode.d6.loss_dice": 4.25513, "decode.d7.loss_cls": 1.79484, "decode.d7.loss_mask": 1.83772, "decode.d7.loss_dice": 4.27245, "decode.d8.loss_cls": 1.89772, "decode.d8.loss_mask": 1.65559, "decode.d8.loss_dice": 4.46297, "loss": 83.46178, "time": 0.33845}
{"mode": "train", "epoch": 1, "iter": 110, "lr": 0.0, "memory": 9602, "data_time": 0.00624, "decode.loss_cls": 1.92588, "decode.loss_mask": 1.89525, "decode.loss_dice": 4.24724, "decode.d0.loss_cls": 3.76996, "decode.d0.loss_mask": 1.8614, "decode.d0.loss_dice": 4.16577, "decode.d1.loss_cls": 2.61643, "decode.d1.loss_mask": 1.93402, "decode.d1.loss_dice": 4.16444, "decode.d2.loss_cls": 2.29987, "decode.d2.loss_mask": 1.96185, "decode.d2.loss_dice": 4.1209, "decode.d3.loss_cls": 1.90215, "decode.d3.loss_mask": 1.85003, "decode.d3.loss_dice": 4.19195, "decode.d4.loss_cls": 1.71039, "decode.d4.loss_mask": 1.87291, "decode.d4.loss_dice": 4.1962, "decode.d5.loss_cls": 2.00359, "decode.d5.loss_mask": 1.80057, "decode.d5.loss_dice": 4.30496, "decode.d6.loss_cls": 1.75718, "decode.d6.loss_mask": 2.01952, "decode.d6.loss_dice": 4.17019, "decode.d7.loss_cls": 1.762, "decode.d7.loss_mask": 1.9564, "decode.d7.loss_dice": 4.20461, "decode.d8.loss_cls": 1.81575, "decode.d8.loss_mask": 1.80676, "decode.d8.loss_dice": 4.33989, "loss": 82.62806, "time": 0.33889}
{"mode": "train", "epoch": 1, "iter": 120, "lr": 0.0, "memory": 9602, "data_time": 0.00621, "decode.loss_cls": 1.78684, "decode.loss_mask": 1.62481, "decode.loss_dice": 4.34832, "decode.d0.loss_cls": 3.7658, "decode.d0.loss_mask": 1.6608, "decode.d0.loss_dice": 4.3003, "decode.d1.loss_cls": 2.42875, "decode.d1.loss_mask": 1.59869, "decode.d1.loss_dice": 4.35647, "decode.d2.loss_cls": 2.08601, "decode.d2.loss_mask": 1.68575, "decode.d2.loss_dice": 4.25639, "decode.d3.loss_cls": 1.7812, "decode.d3.loss_mask": 1.59515, "decode.d3.loss_dice": 4.30748, "decode.d4.loss_cls": 1.66194, "decode.d4.loss_mask": 1.61658, "decode.d4.loss_dice": 4.30667, "decode.d5.loss_cls": 1.85392, "decode.d5.loss_mask": 1.54441, "decode.d5.loss_dice": 4.39937, "decode.d6.loss_cls": 1.71526, "decode.d6.loss_mask": 1.74459, "decode.d6.loss_dice": 4.29497, "decode.d7.loss_cls": 1.73455, "decode.d7.loss_mask": 1.74862, "decode.d7.loss_dice": 4.29183, "decode.d8.loss_cls": 1.73946, "decode.d8.loss_mask": 1.54486, "decode.d8.loss_dice": 4.4163, "loss": 80.19611, "time": 0.33672}
{"mode": "train", "epoch": 1, "iter": 130, "lr": 0.0, "memory": 9602, "data_time": 0.00632, "decode.loss_cls": 1.80518, "decode.loss_mask": 1.99854, "decode.loss_dice": 4.2026, "decode.d0.loss_cls": 3.73458, "decode.d0.loss_mask": 1.9859, "decode.d0.loss_dice": 4.08295, "decode.d1.loss_cls": 2.2619, "decode.d1.loss_mask": 1.92548, "decode.d1.loss_dice": 4.10789, "decode.d2.loss_cls": 1.90556, "decode.d2.loss_mask": 1.96722, "decode.d2.loss_dice": 4.05145, "decode.d3.loss_cls": 1.72316, "decode.d3.loss_mask": 1.92326, "decode.d3.loss_dice": 4.13206, "decode.d4.loss_cls": 1.6909, "decode.d4.loss_mask": 1.92757, "decode.d4.loss_dice": 4.12964, "decode.d5.loss_cls": 1.84389, "decode.d5.loss_mask": 1.93693, "decode.d5.loss_dice": 4.25006, "decode.d6.loss_cls": 1.73583, "decode.d6.loss_mask": 2.02251, "decode.d6.loss_dice": 4.14459, "decode.d7.loss_cls": 1.73504, "decode.d7.loss_mask": 2.00978, "decode.d7.loss_dice": 4.16873, "decode.d8.loss_cls": 1.74456, "decode.d8.loss_mask": 1.96082, "decode.d8.loss_dice": 4.28117, "loss": 81.38975, "time": 0.33711}
{"mode": "train", "epoch": 1, "iter": 140, "lr": 0.0, "memory": 9602, "data_time": 0.00621, "decode.loss_cls": 1.78635, "decode.loss_mask": 1.88149, "decode.loss_dice": 4.18812, "decode.d0.loss_cls": 3.72362, "decode.d0.loss_mask": 1.83883, "decode.d0.loss_dice": 4.1579, "decode.d1.loss_cls": 2.12525, "decode.d1.loss_mask": 1.77456, "decode.d1.loss_dice": 4.20083, "decode.d2.loss_cls": 1.78985, "decode.d2.loss_mask": 1.83589, "decode.d2.loss_dice": 4.11998, "decode.d3.loss_cls": 1.65315, "decode.d3.loss_mask": 1.80385, "decode.d3.loss_dice": 4.16327, "decode.d4.loss_cls": 1.68918, "decode.d4.loss_mask": 1.84189, "decode.d4.loss_dice": 4.15013, "decode.d5.loss_cls": 1.79793, "decode.d5.loss_mask": 1.77185, "decode.d5.loss_dice": 4.24182, "decode.d6.loss_cls": 1.72804, "decode.d6.loss_mask": 1.90302, "decode.d6.loss_dice": 4.18197, "decode.d7.loss_cls": 1.72746, "decode.d7.loss_mask": 1.91353, "decode.d7.loss_dice": 4.16472, "decode.d8.loss_cls": 1.73384, "decode.d8.loss_mask": 1.79902, "decode.d8.loss_dice": 4.25597, "loss": 79.94332, "time": 0.34116}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0, "memory": 9602, "data_time": 0.00605, "decode.loss_cls": 1.77036, "decode.loss_mask": 1.77274, "decode.loss_dice": 4.18626, "decode.d0.loss_cls": 3.72363, "decode.d0.loss_mask": 1.8155, "decode.d0.loss_dice": 4.11333, "decode.d1.loss_cls": 2.01512, "decode.d1.loss_mask": 1.72924, "decode.d1.loss_dice": 4.16796, "decode.d2.loss_cls": 1.71802, "decode.d2.loss_mask": 1.75894, "decode.d2.loss_dice": 4.09382, "decode.d3.loss_cls": 1.62589, "decode.d3.loss_mask": 1.72504, "decode.d3.loss_dice": 4.14961, "decode.d4.loss_cls": 1.69824, "decode.d4.loss_mask": 1.73088, "decode.d4.loss_dice": 4.14191, "decode.d5.loss_cls": 1.78976, "decode.d5.loss_mask": 1.73142, "decode.d5.loss_dice": 4.2145, "decode.d6.loss_cls": 1.73452, "decode.d6.loss_mask": 1.79021, "decode.d6.loss_dice": 4.1887, "decode.d7.loss_cls": 1.73691, "decode.d7.loss_mask": 1.81542, "decode.d7.loss_dice": 4.16876, "decode.d8.loss_cls": 1.73058, "decode.d8.loss_mask": 1.74651, "decode.d8.loss_dice": 4.23657, "loss": 78.82035, "time": 0.33834}
{"mode": "train", "epoch": 1, "iter": 160, "lr": 0.0, "memory": 9602, "data_time": 0.00632, "decode.loss_cls": 1.69102, "decode.loss_mask": 1.86264, "decode.loss_dice": 4.17301, "decode.d0.loss_cls": 3.74715, "decode.d0.loss_mask": 1.8636, "decode.d0.loss_dice": 4.09934, "decode.d1.loss_cls": 1.90825, "decode.d1.loss_mask": 1.82726, "decode.d1.loss_dice": 4.11586, "decode.d2.loss_cls": 1.65684, "decode.d2.loss_mask": 1.84831, "decode.d2.loss_dice": 4.05893, "decode.d3.loss_cls": 1.61592, "decode.d3.loss_mask": 1.83679, "decode.d3.loss_dice": 4.11992, "decode.d4.loss_cls": 1.64294, "decode.d4.loss_mask": 1.84589, "decode.d4.loss_dice": 4.11361, "decode.d5.loss_cls": 1.70112, "decode.d5.loss_mask": 1.83337, "decode.d5.loss_dice": 4.18489, "decode.d6.loss_cls": 1.68004, "decode.d6.loss_mask": 1.92629, "decode.d6.loss_dice": 4.13651, "decode.d7.loss_cls": 1.71195, "decode.d7.loss_mask": 1.90669, "decode.d7.loss_dice": 4.15195, "decode.d8.loss_cls": 1.6952, "decode.d8.loss_mask": 1.86392, "decode.d8.loss_dice": 4.21744, "loss": 79.03665, "time": 0.33506}
{"mode": "train", "epoch": 2, "iter": 170, "lr": 0.0, "memory": 9602, "data_time": 0.21418, "decode.loss_cls": 1.68695, "decode.loss_mask": 1.86215, "decode.loss_dice": 4.18838, "decode.d0.loss_cls": 3.73135, "decode.d0.loss_mask": 1.87228, "decode.d0.loss_dice": 4.09369, "decode.d1.loss_cls": 1.85266, "decode.d1.loss_mask": 1.78931, "decode.d1.loss_dice": 4.11861, "decode.d2.loss_cls": 1.61614, "decode.d2.loss_mask": 1.80668, "decode.d2.loss_dice": 4.0769, "decode.d3.loss_cls": 1.596, "decode.d3.loss_mask": 1.80419, "decode.d3.loss_dice": 4.11935, "decode.d4.loss_cls": 1.65847, "decode.d4.loss_mask": 1.81202, "decode.d4.loss_dice": 4.12135, "decode.d5.loss_cls": 1.70019, "decode.d5.loss_mask": 1.82612, "decode.d5.loss_dice": 4.19185, "decode.d6.loss_cls": 1.66956, "decode.d6.loss_mask": 1.8714, "decode.d6.loss_dice": 4.16404, "decode.d7.loss_cls": 1.69758, "decode.d7.loss_mask": 1.87113, "decode.d7.loss_dice": 4.16173, "decode.d8.loss_cls": 1.68421, "decode.d8.loss_mask": 1.83002, "decode.d8.loss_dice": 4.20452, "loss": 78.67883, "time": 0.54802}
{"mode": "train", "epoch": 2, "iter": 180, "lr": 0.0, "memory": 9602, "data_time": 0.00633, "decode.loss_cls": 1.71518, "decode.loss_mask": 1.96828, "decode.loss_dice": 4.14214, "decode.d0.loss_cls": 3.71548, "decode.d0.loss_mask": 1.92409, "decode.d0.loss_dice": 4.04434, "decode.d1.loss_cls": 1.76493, "decode.d1.loss_mask": 1.93448, "decode.d1.loss_dice": 4.02485, "decode.d2.loss_cls": 1.57733, "decode.d2.loss_mask": 1.916, "decode.d2.loss_dice": 4.01788, "decode.d3.loss_cls": 1.59461, "decode.d3.loss_mask": 1.89613, "decode.d3.loss_dice": 4.08342, "decode.d4.loss_cls": 1.66862, "decode.d4.loss_mask": 1.91179, "decode.d4.loss_dice": 4.09843, "decode.d5.loss_cls": 1.7159, "decode.d5.loss_mask": 1.93909, "decode.d5.loss_dice": 4.15965, "decode.d6.loss_cls": 1.68451, "decode.d6.loss_mask": 1.98337, "decode.d6.loss_dice": 4.12131, "decode.d7.loss_cls": 1.70527, "decode.d7.loss_mask": 2.02937, "decode.d7.loss_dice": 4.11733, "decode.d8.loss_cls": 1.69525, "decode.d8.loss_mask": 1.97095, "decode.d8.loss_dice": 4.14925, "loss": 79.26923, "time": 0.33702}
{"mode": "train", "epoch": 2, "iter": 190, "lr": 0.0, "memory": 9602, "data_time": 0.00636, "decode.loss_cls": 1.7776, "decode.loss_mask": 2.01503, "decode.loss_dice": 4.09279, "decode.d0.loss_cls": 3.68444, "decode.d0.loss_mask": 1.99362, "decode.d0.loss_dice": 4.02171, "decode.d1.loss_cls": 1.79395, "decode.d1.loss_mask": 1.94328, "decode.d1.loss_dice": 4.00753, "decode.d2.loss_cls": 1.62259, "decode.d2.loss_mask": 1.95383, "decode.d2.loss_dice": 4.00605, "decode.d3.loss_cls": 1.63684, "decode.d3.loss_mask": 1.93212, "decode.d3.loss_dice": 4.06319, "decode.d4.loss_cls": 1.71225, "decode.d4.loss_mask": 1.95394, "decode.d4.loss_dice": 4.054, "decode.d5.loss_cls": 1.79743, "decode.d5.loss_mask": 1.97692, "decode.d5.loss_dice": 4.10796, "decode.d6.loss_cls": 1.74017, "decode.d6.loss_mask": 2.03497, "decode.d6.loss_dice": 4.08263, "decode.d7.loss_cls": 1.74478, "decode.d7.loss_mask": 2.02533, "decode.d7.loss_dice": 4.09557, "decode.d8.loss_cls": 1.73512, "decode.d8.loss_mask": 2.01066, "decode.d8.loss_dice": 4.09753, "loss": 79.71384, "time": 0.33751}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0, "memory": 9602, "data_time": 0.00632, "decode.loss_cls": 1.66264, "decode.loss_mask": 1.88452, "decode.loss_dice": 4.07022, "decode.d0.loss_cls": 3.72988, "decode.d0.loss_mask": 1.81937, "decode.d0.loss_dice": 4.06776, "decode.d1.loss_cls": 1.685, "decode.d1.loss_mask": 1.79961, "decode.d1.loss_dice": 4.05085, "decode.d2.loss_cls": 1.54347, "decode.d2.loss_mask": 1.79753, "decode.d2.loss_dice": 4.00045, "decode.d3.loss_cls": 1.56806, "decode.d3.loss_mask": 1.80776, "decode.d3.loss_dice": 4.0509, "decode.d4.loss_cls": 1.62279, "decode.d4.loss_mask": 1.816, "decode.d4.loss_dice": 4.03465, "decode.d5.loss_cls": 1.66092, "decode.d5.loss_mask": 1.84651, "decode.d5.loss_dice": 4.0882, "decode.d6.loss_cls": 1.65675, "decode.d6.loss_mask": 1.91679, "decode.d6.loss_dice": 4.04879, "decode.d7.loss_cls": 1.69703, "decode.d7.loss_mask": 1.9, "decode.d7.loss_dice": 4.0855, "decode.d8.loss_cls": 1.67149, "decode.d8.loss_mask": 1.91113, "decode.d8.loss_dice": 4.0786, "loss": 77.57317, "time": 0.33666}
{"mode": "val", "epoch": 2, "iter": 20, "lr": 0.0, "aAcc": 0.5637, "mIoU": 0.1036, "mAcc": 0.1664, "IoU.bg": 0.5785, "IoU.Anchovy": 0.0237, "IoU.Olives": 0.0, "IoU.Salami": 0.0194, "IoU.Red_Pepper": 0.0, "IoU.Yellow_Pepper": 0.0, "Acc.bg": 0.6604, "Acc.Anchovy": 0.1007, "Acc.Olives": 0.0, "Acc.Salami": 0.2372, "Acc.Red_Pepper": 0.0, "Acc.Yellow_Pepper": 0.0}
{"mode": "train", "epoch": 2, "iter": 210, "lr": 0.0, "memory": 9602, "data_time": 1.03478, "decode.loss_cls": 1.69483, "decode.loss_mask": 1.92051, "decode.loss_dice": 4.0668, "decode.d0.loss_cls": 3.7243, "decode.d0.loss_mask": 1.9281, "decode.d0.loss_dice": 4.00858, "decode.d1.loss_cls": 1.67883, "decode.d1.loss_mask": 1.86846, "decode.d1.loss_dice": 4.02169, "decode.d2.loss_cls": 1.57472, "decode.d2.loss_mask": 1.87803, "decode.d2.loss_dice": 3.98608, "decode.d3.loss_cls": 1.57495, "decode.d3.loss_mask": 1.88568, "decode.d3.loss_dice": 4.03677, "decode.d4.loss_cls": 1.63755, "decode.d4.loss_mask": 1.8852, "decode.d4.loss_dice": 4.03228, "decode.d5.loss_cls": 1.68012, "decode.d5.loss_mask": 1.91283, "decode.d5.loss_dice": 4.06565, "decode.d6.loss_cls": 1.67749, "decode.d6.loss_mask": 1.94809, "decode.d6.loss_dice": 4.05831, "decode.d7.loss_cls": 1.71661, "decode.d7.loss_mask": 1.97157, "decode.d7.loss_dice": 4.06447, "decode.d8.loss_cls": 1.68624, "decode.d8.loss_mask": 1.95736, "decode.d8.loss_dice": 4.09007, "loss": 78.23215, "time": 1.36676}
{"mode": "train", "epoch": 2, "iter": 220, "lr": 0.0, "memory": 9602, "data_time": 0.00611, "decode.loss_cls": 1.67731, "decode.loss_mask": 1.90398, "decode.loss_dice": 4.02861, "decode.d0.loss_cls": 3.7235, "decode.d0.loss_mask": 1.88035, "decode.d0.loss_dice": 3.99628, "decode.d1.loss_cls": 1.63736, "decode.d1.loss_mask": 1.85269, "decode.d1.loss_dice": 3.95426, "decode.d2.loss_cls": 1.529, "decode.d2.loss_mask": 1.82707, "decode.d2.loss_dice": 3.91939, "decode.d3.loss_cls": 1.57232, "decode.d3.loss_mask": 1.85136, "decode.d3.loss_dice": 3.95991, "decode.d4.loss_cls": 1.61357, "decode.d4.loss_mask": 1.86092, "decode.d4.loss_dice": 3.94667, "decode.d5.loss_cls": 1.66357, "decode.d5.loss_mask": 1.88486, "decode.d5.loss_dice": 3.9955, "decode.d6.loss_cls": 1.64693, "decode.d6.loss_mask": 1.92847, "decode.d6.loss_dice": 3.99219, "decode.d7.loss_cls": 1.69483, "decode.d7.loss_mask": 1.93631, "decode.d7.loss_dice": 4.01224, "decode.d8.loss_cls": 1.67498, "decode.d8.loss_mask": 1.89858, "decode.d8.loss_dice": 4.02584, "loss": 77.08886, "time": 0.33771}
{"mode": "train", "epoch": 2, "iter": 230, "lr": 0.0, "memory": 9602, "data_time": 0.00636, "decode.loss_cls": 1.72581, "decode.loss_mask": 2.0633, "decode.loss_dice": 4.00858, "decode.d0.loss_cls": 3.68853, "decode.d0.loss_mask": 2.01979, "decode.d0.loss_dice": 3.94176, "decode.d1.loss_cls": 1.64501, "decode.d1.loss_mask": 1.9687, "decode.d1.loss_dice": 3.91405, "decode.d2.loss_cls": 1.5749, "decode.d2.loss_mask": 1.96068, "decode.d2.loss_dice": 3.8943, "decode.d3.loss_cls": 1.58882, "decode.d3.loss_mask": 1.94598, "decode.d3.loss_dice": 3.97038, "decode.d4.loss_cls": 1.64754, "decode.d4.loss_mask": 1.96122, "decode.d4.loss_dice": 3.96322, "decode.d5.loss_cls": 1.70929, "decode.d5.loss_mask": 1.99893, "decode.d5.loss_dice": 4.01665, "decode.d6.loss_cls": 1.68189, "decode.d6.loss_mask": 2.01727, "decode.d6.loss_dice": 4.03766, "decode.d7.loss_cls": 1.71539, "decode.d7.loss_mask": 2.05675, "decode.d7.loss_dice": 4.01869, "decode.d8.loss_cls": 1.70932, "decode.d8.loss_mask": 2.02961, "decode.d8.loss_dice": 4.04117, "loss": 78.51518, "time": 0.33775}
{"mode": "train", "epoch": 2, "iter": 240, "lr": 0.0, "memory": 9602, "data_time": 0.00626, "decode.loss_cls": 1.69209, "decode.loss_mask": 1.93686, "decode.loss_dice": 3.95523, "decode.d0.loss_cls": 3.72255, "decode.d0.loss_mask": 1.86926, "decode.d0.loss_dice": 3.96506, "decode.d1.loss_cls": 1.58037, "decode.d1.loss_mask": 1.83202, "decode.d1.loss_dice": 3.91912, "decode.d2.loss_cls": 1.53907, "decode.d2.loss_mask": 1.84299, "decode.d2.loss_dice": 3.8671, "decode.d3.loss_cls": 1.56433, "decode.d3.loss_mask": 1.85064, "decode.d3.loss_dice": 3.91995, "decode.d4.loss_cls": 1.62884, "decode.d4.loss_mask": 1.85873, "decode.d4.loss_dice": 3.91092, "decode.d5.loss_cls": 1.68669, "decode.d5.loss_mask": 1.90574, "decode.d5.loss_dice": 3.91876, "decode.d6.loss_cls": 1.67751, "decode.d6.loss_mask": 1.93404, "decode.d6.loss_dice": 3.94944, "decode.d7.loss_cls": 1.72149, "decode.d7.loss_mask": 1.97047, "decode.d7.loss_dice": 3.93552, "decode.d8.loss_cls": 1.69711, "decode.d8.loss_mask": 1.96545, "decode.d8.loss_dice": 3.95384, "loss": 76.77119, "time": 0.33692}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.0, "memory": 9602, "data_time": 0.00646, "decode.loss_cls": 1.69204, "decode.loss_mask": 1.93536, "decode.loss_dice": 4.00371, "decode.d0.loss_cls": 3.70315, "decode.d0.loss_mask": 1.90056, "decode.d0.loss_dice": 3.97188, "decode.d1.loss_cls": 1.59502, "decode.d1.loss_mask": 1.89381, "decode.d1.loss_dice": 3.88293, "decode.d2.loss_cls": 1.54996, "decode.d2.loss_mask": 1.89395, "decode.d2.loss_dice": 3.85881, "decode.d3.loss_cls": 1.57304, "decode.d3.loss_mask": 1.88502, "decode.d3.loss_dice": 3.94004, "decode.d4.loss_cls": 1.60871, "decode.d4.loss_mask": 1.86913, "decode.d4.loss_dice": 3.94387, "decode.d5.loss_cls": 1.67706, "decode.d5.loss_mask": 1.92112, "decode.d5.loss_dice": 3.95946, "decode.d6.loss_cls": 1.66703, "decode.d6.loss_mask": 1.93633, "decode.d6.loss_dice": 3.99378, "decode.d7.loss_cls": 1.70798, "decode.d7.loss_mask": 1.92667, "decode.d7.loss_dice": 4.00403, "decode.d8.loss_cls": 1.68797, "decode.d8.loss_mask": 1.93249, "decode.d8.loss_dice": 4.00198, "loss": 77.11691, "time": 0.33644}
{"mode": "train", "epoch": 2, "iter": 260, "lr": 0.0, "memory": 9602, "data_time": 0.00695, "decode.loss_cls": 1.66229, "decode.loss_mask": 1.95658, "decode.loss_dice": 3.92052, "decode.d0.loss_cls": 3.72734, "decode.d0.loss_mask": 1.86245, "decode.d0.loss_dice": 3.91328, "decode.d1.loss_cls": 1.56657, "decode.d1.loss_mask": 1.83114, "decode.d1.loss_dice": 3.84765, "decode.d2.loss_cls": 1.47904, "decode.d2.loss_mask": 1.82887, "decode.d2.loss_dice": 3.8229, "decode.d3.loss_cls": 1.53976, "decode.d3.loss_mask": 1.82818, "decode.d3.loss_dice": 3.87686, "decode.d4.loss_cls": 1.57979, "decode.d4.loss_mask": 1.85352, "decode.d4.loss_dice": 3.86413, "decode.d5.loss_cls": 1.62471, "decode.d5.loss_mask": 1.88655, "decode.d5.loss_dice": 3.90123, "decode.d6.loss_cls": 1.62608, "decode.d6.loss_mask": 1.92431, "decode.d6.loss_dice": 3.91695, "decode.d7.loss_cls": 1.68815, "decode.d7.loss_mask": 1.92631, "decode.d7.loss_dice": 3.91745, "decode.d8.loss_cls": 1.66909, "decode.d8.loss_mask": 1.95999, "decode.d8.loss_dice": 3.92724, "loss": 75.92895, "time": 0.33681}
{"mode": "train", "epoch": 2, "iter": 270, "lr": 0.0, "memory": 9602, "data_time": 0.00662, "decode.loss_cls": 1.72817, "decode.loss_mask": 1.94506, "decode.loss_dice": 3.98356, "decode.d0.loss_cls": 3.70675, "decode.d0.loss_mask": 1.85096, "decode.d0.loss_dice": 3.94111, "decode.d1.loss_cls": 1.60095, "decode.d1.loss_mask": 1.84573, "decode.d1.loss_dice": 3.86297, "decode.d2.loss_cls": 1.53397, "decode.d2.loss_mask": 1.84496, "decode.d2.loss_dice": 3.8422, "decode.d3.loss_cls": 1.5725, "decode.d3.loss_mask": 1.84842, "decode.d3.loss_dice": 3.91896, "decode.d4.loss_cls": 1.6297, "decode.d4.loss_mask": 1.85345, "decode.d4.loss_dice": 3.89661, "decode.d5.loss_cls": 1.68201, "decode.d5.loss_mask": 1.89859, "decode.d5.loss_dice": 3.94897, "decode.d6.loss_cls": 1.67221, "decode.d6.loss_mask": 1.9203, "decode.d6.loss_dice": 3.97377, "decode.d7.loss_cls": 1.71134, "decode.d7.loss_mask": 1.93899, "decode.d7.loss_dice": 3.98313, "decode.d8.loss_cls": 1.70358, "decode.d8.loss_mask": 1.94335, "decode.d8.loss_dice": 3.97956, "loss": 76.76182, "time": 0.33687}
{"mode": "train", "epoch": 2, "iter": 280, "lr": 0.0, "memory": 9602, "data_time": 0.00648, "decode.loss_cls": 1.70695, "decode.loss_mask": 1.95824, "decode.loss_dice": 3.90724, "decode.d0.loss_cls": 3.71087, "decode.d0.loss_mask": 1.90617, "decode.d0.loss_dice": 3.87259, "decode.d1.loss_cls": 1.54467, "decode.d1.loss_mask": 1.86836, "decode.d1.loss_dice": 3.81345, "decode.d2.loss_cls": 1.52249, "decode.d2.loss_mask": 1.83932, "decode.d2.loss_dice": 3.78767, "decode.d3.loss_cls": 1.55213, "decode.d3.loss_mask": 1.86026, "decode.d3.loss_dice": 3.86086, "decode.d4.loss_cls": 1.60337, "decode.d4.loss_mask": 1.87359, "decode.d4.loss_dice": 3.83822, "decode.d5.loss_cls": 1.6506, "decode.d5.loss_mask": 1.91019, "decode.d5.loss_dice": 3.88265, "decode.d6.loss_cls": 1.65581, "decode.d6.loss_mask": 1.92447, "decode.d6.loss_dice": 3.89671, "decode.d7.loss_cls": 1.70434, "decode.d7.loss_mask": 1.95313, "decode.d7.loss_dice": 3.89583, "decode.d8.loss_cls": 1.69129, "decode.d8.loss_mask": 1.96251, "decode.d8.loss_dice": 3.92512, "loss": 76.07909, "time": 0.33837}
{"mode": "train", "epoch": 2, "iter": 290, "lr": 0.0, "memory": 9602, "data_time": 0.00639, "decode.loss_cls": 1.57773, "decode.loss_mask": 1.71808, "decode.loss_dice": 3.86318, "decode.d0.loss_cls": 3.76261, "decode.d0.loss_mask": 1.67788, "decode.d0.loss_dice": 3.93752, "decode.d1.loss_cls": 1.42774, "decode.d1.loss_mask": 1.62565, "decode.d1.loss_dice": 3.82702, "decode.d2.loss_cls": 1.44565, "decode.d2.loss_mask": 1.60357, "decode.d2.loss_dice": 3.78444, "decode.d3.loss_cls": 1.48152, "decode.d3.loss_mask": 1.62363, "decode.d3.loss_dice": 3.8401, "decode.d4.loss_cls": 1.49475, "decode.d4.loss_mask": 1.6347, "decode.d4.loss_dice": 3.79909, "decode.d5.loss_cls": 1.51586, "decode.d5.loss_mask": 1.67474, "decode.d5.loss_dice": 3.84055, "decode.d6.loss_cls": 1.55493, "decode.d6.loss_mask": 1.67637, "decode.d6.loss_dice": 3.86207, "decode.d7.loss_cls": 1.63004, "decode.d7.loss_mask": 1.73108, "decode.d7.loss_dice": 3.83496, "decode.d8.loss_cls": 1.59066, "decode.d8.loss_mask": 1.72027, "decode.d8.loss_dice": 3.87414, "loss": 72.63052, "time": 0.33874}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.0, "memory": 9602, "data_time": 0.00643, "decode.loss_cls": 1.68186, "decode.loss_mask": 1.98107, "decode.loss_dice": 3.90579, "decode.d0.loss_cls": 3.74656, "decode.d0.loss_mask": 1.87901, "decode.d0.loss_dice": 3.8668, "decode.d1.loss_cls": 1.48983, "decode.d1.loss_mask": 1.87214, "decode.d1.loss_dice": 3.76945, "decode.d2.loss_cls": 1.47734, "decode.d2.loss_mask": 1.86016, "decode.d2.loss_dice": 3.75171, "decode.d3.loss_cls": 1.50934, "decode.d3.loss_mask": 1.85547, "decode.d3.loss_dice": 3.82297, "decode.d4.loss_cls": 1.58114, "decode.d4.loss_mask": 1.8882, "decode.d4.loss_dice": 3.78451, "decode.d5.loss_cls": 1.61682, "decode.d5.loss_mask": 1.91916, "decode.d5.loss_dice": 3.84298, "decode.d6.loss_cls": 1.61907, "decode.d6.loss_mask": 1.92271, "decode.d6.loss_dice": 3.91165, "decode.d7.loss_cls": 1.66252, "decode.d7.loss_mask": 1.97544, "decode.d7.loss_dice": 3.90749, "decode.d8.loss_cls": 1.66677, "decode.d8.loss_mask": 1.95828, "decode.d8.loss_dice": 3.93258, "loss": 75.65884, "time": 0.33676}
{"mode": "train", "epoch": 2, "iter": 310, "lr": 0.0, "memory": 9602, "data_time": 0.00662, "decode.loss_cls": 1.67407, "decode.loss_mask": 2.06666, "decode.loss_dice": 3.81069, "decode.d0.loss_cls": 3.75228, "decode.d0.loss_mask": 1.9274, "decode.d0.loss_dice": 3.77442, "decode.d1.loss_cls": 1.49263, "decode.d1.loss_mask": 1.90501, "decode.d1.loss_dice": 3.68094, "decode.d2.loss_cls": 1.4765, "decode.d2.loss_mask": 1.91025, "decode.d2.loss_dice": 3.67355, "decode.d3.loss_cls": 1.50722, "decode.d3.loss_mask": 1.92533, "decode.d3.loss_dice": 3.72893, "decode.d4.loss_cls": 1.56123, "decode.d4.loss_mask": 1.9178, "decode.d4.loss_dice": 3.71694, "decode.d5.loss_cls": 1.58868, "decode.d5.loss_mask": 1.96262, "decode.d5.loss_dice": 3.77196, "decode.d6.loss_cls": 1.59714, "decode.d6.loss_mask": 2.01118, "decode.d6.loss_dice": 3.78512, "decode.d7.loss_cls": 1.65355, "decode.d7.loss_mask": 2.06414, "decode.d7.loss_dice": 3.81004, "decode.d8.loss_cls": 1.65229, "decode.d8.loss_mask": 2.05627, "decode.d8.loss_dice": 3.83995, "loss": 75.29479, "time": 0.33814}
{"mode": "train", "epoch": 2, "iter": 320, "lr": 0.0, "memory": 9602, "data_time": 0.00649, "decode.loss_cls": 1.6966, "decode.loss_mask": 2.01246, "decode.loss_dice": 3.8485, "decode.d0.loss_cls": 3.71658, "decode.d0.loss_mask": 1.92708, "decode.d0.loss_dice": 3.81528, "decode.d1.loss_cls": 1.50655, "decode.d1.loss_mask": 1.93078, "decode.d1.loss_dice": 3.7195, "decode.d2.loss_cls": 1.45463, "decode.d2.loss_mask": 1.92248, "decode.d2.loss_dice": 3.70853, "decode.d3.loss_cls": 1.51403, "decode.d3.loss_mask": 1.89685, "decode.d3.loss_dice": 3.76037, "decode.d4.loss_cls": 1.56306, "decode.d4.loss_mask": 1.91242, "decode.d4.loss_dice": 3.75106, "decode.d5.loss_cls": 1.57179, "decode.d5.loss_mask": 1.92385, "decode.d5.loss_dice": 3.77434, "decode.d6.loss_cls": 1.60116, "decode.d6.loss_mask": 1.96612, "decode.d6.loss_dice": 3.79246, "decode.d7.loss_cls": 1.65875, "decode.d7.loss_mask": 2.00549, "decode.d7.loss_dice": 3.83292, "decode.d8.loss_cls": 1.6728, "decode.d8.loss_mask": 2.0108, "decode.d8.loss_dice": 3.82303, "loss": 75.29027, "time": 0.3346}
{"mode": "train", "epoch": 3, "iter": 330, "lr": 0.0, "memory": 9602, "data_time": 0.2142, "decode.loss_cls": 1.67048, "decode.loss_mask": 1.89794, "decode.loss_dice": 3.80592, "decode.d0.loss_cls": 3.70909, "decode.d0.loss_mask": 1.7814, "decode.d0.loss_dice": 3.82441, "decode.d1.loss_cls": 1.43059, "decode.d1.loss_mask": 1.81044, "decode.d1.loss_dice": 3.72343, "decode.d2.loss_cls": 1.41476, "decode.d2.loss_mask": 1.76081, "decode.d2.loss_dice": 3.72201, "decode.d3.loss_cls": 1.44374, "decode.d3.loss_mask": 1.76694, "decode.d3.loss_dice": 3.72385, "decode.d4.loss_cls": 1.5191, "decode.d4.loss_mask": 1.79318, "decode.d4.loss_dice": 3.71979, "decode.d5.loss_cls": 1.5304, "decode.d5.loss_mask": 1.80128, "decode.d5.loss_dice": 3.72648, "decode.d6.loss_cls": 1.57668, "decode.d6.loss_mask": 1.80477, "decode.d6.loss_dice": 3.74966, "decode.d7.loss_cls": 1.64488, "decode.d7.loss_mask": 1.89829, "decode.d7.loss_dice": 3.76939, "decode.d8.loss_cls": 1.6452, "decode.d8.loss_mask": 1.88874, "decode.d8.loss_dice": 3.79992, "loss": 73.35356, "time": 0.54702}
{"mode": "train", "epoch": 3, "iter": 340, "lr": 0.0, "memory": 9602, "data_time": 0.00654, "decode.loss_cls": 1.67273, "decode.loss_mask": 1.94762, "decode.loss_dice": 3.80316, "decode.d0.loss_cls": 3.7072, "decode.d0.loss_mask": 1.88215, "decode.d0.loss_dice": 3.78271, "decode.d1.loss_cls": 1.42652, "decode.d1.loss_mask": 1.86291, "decode.d1.loss_dice": 3.69266, "decode.d2.loss_cls": 1.42094, "decode.d2.loss_mask": 1.84719, "decode.d2.loss_dice": 3.68203, "decode.d3.loss_cls": 1.43838, "decode.d3.loss_mask": 1.84353, "decode.d3.loss_dice": 3.70508, "decode.d4.loss_cls": 1.4922, "decode.d4.loss_mask": 1.86329, "decode.d4.loss_dice": 3.68705, "decode.d5.loss_cls": 1.50988, "decode.d5.loss_mask": 1.86341, "decode.d5.loss_dice": 3.70901, "decode.d6.loss_cls": 1.55723, "decode.d6.loss_mask": 1.88088, "decode.d6.loss_dice": 3.72115, "decode.d7.loss_cls": 1.61837, "decode.d7.loss_mask": 1.92401, "decode.d7.loss_dice": 3.76888, "decode.d8.loss_cls": 1.63953, "decode.d8.loss_mask": 1.93155, "decode.d8.loss_dice": 3.81567, "loss": 73.69691, "time": 0.33741}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.0, "memory": 9602, "data_time": 0.00686, "decode.loss_cls": 1.65696, "decode.loss_mask": 2.11379, "decode.loss_dice": 3.80255, "decode.d0.loss_cls": 3.72243, "decode.d0.loss_mask": 2.05607, "decode.d0.loss_dice": 3.72507, "decode.d1.loss_cls": 1.42908, "decode.d1.loss_mask": 2.0207, "decode.d1.loss_dice": 3.66601, "decode.d2.loss_cls": 1.37744, "decode.d2.loss_mask": 2.00631, "decode.d2.loss_dice": 3.6519, "decode.d3.loss_cls": 1.39813, "decode.d3.loss_mask": 2.02187, "decode.d3.loss_dice": 3.70054, "decode.d4.loss_cls": 1.4874, "decode.d4.loss_mask": 2.01408, "decode.d4.loss_dice": 3.72408, "decode.d5.loss_cls": 1.49501, "decode.d5.loss_mask": 2.01418, "decode.d5.loss_dice": 3.71517, "decode.d6.loss_cls": 1.52384, "decode.d6.loss_mask": 2.02542, "decode.d6.loss_dice": 3.74718, "decode.d7.loss_cls": 1.60024, "decode.d7.loss_mask": 2.07321, "decode.d7.loss_dice": 3.77242, "decode.d8.loss_cls": 1.61984, "decode.d8.loss_mask": 2.1059, "decode.d8.loss_dice": 3.76346, "loss": 75.03027, "time": 0.33946}
{"mode": "train", "epoch": 3, "iter": 360, "lr": 0.0, "memory": 9602, "data_time": 0.00653, "decode.loss_cls": 1.61678, "decode.loss_mask": 1.99064, "decode.loss_dice": 3.7197, "decode.d0.loss_cls": 3.71561, "decode.d0.loss_mask": 1.88452, "decode.d0.loss_dice": 3.73799, "decode.d1.loss_cls": 1.37863, "decode.d1.loss_mask": 1.86965, "decode.d1.loss_dice": 3.64997, "decode.d2.loss_cls": 1.31752, "decode.d2.loss_mask": 1.86991, "decode.d2.loss_dice": 3.62523, "decode.d3.loss_cls": 1.34386, "decode.d3.loss_mask": 1.86249, "decode.d3.loss_dice": 3.64133, "decode.d4.loss_cls": 1.40362, "decode.d4.loss_mask": 1.8714, "decode.d4.loss_dice": 3.62967, "decode.d5.loss_cls": 1.4032, "decode.d5.loss_mask": 1.87738, "decode.d5.loss_dice": 3.64097, "decode.d6.loss_cls": 1.45995, "decode.d6.loss_mask": 1.9104, "decode.d6.loss_dice": 3.63887, "decode.d7.loss_cls": 1.53369, "decode.d7.loss_mask": 1.95148, "decode.d7.loss_dice": 3.65828, "decode.d8.loss_cls": 1.57218, "decode.d8.loss_mask": 1.9458, "decode.d8.loss_dice": 3.6911, "loss": 72.41181, "time": 0.33749}
{"mode": "train", "epoch": 3, "iter": 370, "lr": 0.0, "memory": 9602, "data_time": 0.00645, "decode.loss_cls": 1.63212, "decode.loss_mask": 1.80299, "decode.loss_dice": 3.73668, "decode.d0.loss_cls": 3.71793, "decode.d0.loss_mask": 1.72223, "decode.d0.loss_dice": 3.78071, "decode.d1.loss_cls": 1.33145, "decode.d1.loss_mask": 1.75889, "decode.d1.loss_dice": 3.66133, "decode.d2.loss_cls": 1.24773, "decode.d2.loss_mask": 1.74037, "decode.d2.loss_dice": 3.65294, "decode.d3.loss_cls": 1.29319, "decode.d3.loss_mask": 1.75476, "decode.d3.loss_dice": 3.64952, "decode.d4.loss_cls": 1.36199, "decode.d4.loss_mask": 1.74212, "decode.d4.loss_dice": 3.6639, "decode.d5.loss_cls": 1.36788, "decode.d5.loss_mask": 1.74245, "decode.d5.loss_dice": 3.67112, "decode.d6.loss_cls": 1.46478, "decode.d6.loss_mask": 1.72803, "decode.d6.loss_dice": 3.69149, "decode.d7.loss_cls": 1.55526, "decode.d7.loss_mask": 1.78324, "decode.d7.loss_dice": 3.66383, "decode.d8.loss_cls": 1.58451, "decode.d8.loss_mask": 1.76331, "decode.d8.loss_dice": 3.70732, "loss": 70.97408, "time": 0.33708}
{"mode": "train", "epoch": 3, "iter": 380, "lr": 0.0, "memory": 9602, "data_time": 0.00656, "decode.loss_cls": 1.55951, "decode.loss_mask": 1.84881, "decode.loss_dice": 3.51588, "decode.d0.loss_cls": 3.78173, "decode.d0.loss_mask": 1.80221, "decode.d0.loss_dice": 3.5648, "decode.d1.loss_cls": 1.25616, "decode.d1.loss_mask": 1.83066, "decode.d1.loss_dice": 3.45434, "decode.d2.loss_cls": 1.25254, "decode.d2.loss_mask": 1.80553, "decode.d2.loss_dice": 3.45374, "decode.d3.loss_cls": 1.21849, "decode.d3.loss_mask": 1.82306, "decode.d3.loss_dice": 3.45393, "decode.d4.loss_cls": 1.28936, "decode.d4.loss_mask": 1.82032, "decode.d4.loss_dice": 3.42542, "decode.d5.loss_cls": 1.29479, "decode.d5.loss_mask": 1.80603, "decode.d5.loss_dice": 3.44656, "decode.d6.loss_cls": 1.36664, "decode.d6.loss_mask": 1.81174, "decode.d6.loss_dice": 3.4673, "decode.d7.loss_cls": 1.48042, "decode.d7.loss_mask": 1.8404, "decode.d7.loss_dice": 3.46312, "decode.d8.loss_cls": 1.49616, "decode.d8.loss_mask": 1.83166, "decode.d8.loss_dice": 3.49993, "loss": 68.96122, "time": 0.33612}
{"mode": "train", "epoch": 3, "iter": 390, "lr": 0.0, "memory": 9602, "data_time": 0.00637, "decode.loss_cls": 1.51697, "decode.loss_mask": 1.80104, "decode.loss_dice": 3.51625, "decode.d0.loss_cls": 3.76678, "decode.d0.loss_mask": 1.74543, "decode.d0.loss_dice": 3.60308, "decode.d1.loss_cls": 1.25493, "decode.d1.loss_mask": 1.75853, "decode.d1.loss_dice": 3.46871, "decode.d2.loss_cls": 1.1808, "decode.d2.loss_mask": 1.74756, "decode.d2.loss_dice": 3.46285, "decode.d3.loss_cls": 1.14862, "decode.d3.loss_mask": 1.76277, "decode.d3.loss_dice": 3.48344, "decode.d4.loss_cls": 1.18742, "decode.d4.loss_mask": 1.80209, "decode.d4.loss_dice": 3.4431, "decode.d5.loss_cls": 1.19708, "decode.d5.loss_mask": 1.79948, "decode.d5.loss_dice": 3.46446, "decode.d6.loss_cls": 1.27371, "decode.d6.loss_mask": 1.77715, "decode.d6.loss_dice": 3.48352, "decode.d7.loss_cls": 1.39361, "decode.d7.loss_mask": 1.80976, "decode.d7.loss_dice": 3.43477, "decode.d8.loss_cls": 1.44573, "decode.d8.loss_mask": 1.78957, "decode.d8.loss_dice": 3.49859, "loss": 68.01783, "time": 0.33697}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.0, "memory": 9602, "data_time": 0.00652, "decode.loss_cls": 1.58356, "decode.loss_mask": 1.9549, "decode.loss_dice": 3.63033, "decode.d0.loss_cls": 3.693, "decode.d0.loss_mask": 1.8819, "decode.d0.loss_dice": 3.65708, "decode.d1.loss_cls": 1.24402, "decode.d1.loss_mask": 1.91782, "decode.d1.loss_dice": 3.56645, "decode.d2.loss_cls": 1.14258, "decode.d2.loss_mask": 1.90368, "decode.d2.loss_dice": 3.53523, "decode.d3.loss_cls": 1.12652, "decode.d3.loss_mask": 1.91016, "decode.d3.loss_dice": 3.56561, "decode.d4.loss_cls": 1.17402, "decode.d4.loss_mask": 1.95958, "decode.d4.loss_dice": 3.53988, "decode.d5.loss_cls": 1.2105, "decode.d5.loss_mask": 1.92948, "decode.d5.loss_dice": 3.5441, "decode.d6.loss_cls": 1.25957, "decode.d6.loss_mask": 1.91951, "decode.d6.loss_dice": 3.58775, "decode.d7.loss_cls": 1.39128, "decode.d7.loss_mask": 1.93765, "decode.d7.loss_dice": 3.59445, "decode.d8.loss_cls": 1.49063, "decode.d8.loss_mask": 1.92813, "decode.d8.loss_dice": 3.60682, "loss": 70.38621, "time": 0.33798}
{"mode": "val", "epoch": 3, "iter": 20, "lr": 0.0, "aAcc": 0.019, "mIoU": 0.0077, "mAcc": 0.1694, "IoU.bg": 0.0001, "IoU.Anchovy": 0.0279, "IoU.Olives": 0.018, "IoU.Salami": 0.0, "IoU.Red_Pepper": 0.0, "IoU.Yellow_Pepper": 0.0, "Acc.bg": 0.0001, "Acc.Anchovy": 0.1195, "Acc.Olives": 0.8967, "Acc.Salami": 0.0, "Acc.Red_Pepper": 0.0, "Acc.Yellow_Pepper": 0.0}
{"mode": "train", "epoch": 3, "iter": 410, "lr": 0.0, "memory": 9602, "data_time": 0.15587, "decode.loss_cls": 1.48615, "decode.loss_mask": 1.8849, "decode.loss_dice": 3.5255, "decode.d0.loss_cls": 3.73241, "decode.d0.loss_mask": 1.87536, "decode.d0.loss_dice": 3.59461, "decode.d1.loss_cls": 1.21036, "decode.d1.loss_mask": 1.91142, "decode.d1.loss_dice": 3.48363, "decode.d2.loss_cls": 1.05527, "decode.d2.loss_mask": 1.90368, "decode.d2.loss_dice": 3.46829, "decode.d3.loss_cls": 1.02791, "decode.d3.loss_mask": 1.87555, "decode.d3.loss_dice": 3.4869, "decode.d4.loss_cls": 1.04174, "decode.d4.loss_mask": 1.91039, "decode.d4.loss_dice": 3.5047, "decode.d5.loss_cls": 1.04301, "decode.d5.loss_mask": 1.90092, "decode.d5.loss_dice": 3.52529, "decode.d6.loss_cls": 1.10946, "decode.d6.loss_mask": 1.91434, "decode.d6.loss_dice": 3.50136, "decode.d7.loss_cls": 1.24516, "decode.d7.loss_mask": 1.89799, "decode.d7.loss_dice": 3.49081, "decode.d8.loss_cls": 1.35487, "decode.d8.loss_mask": 1.88514, "decode.d8.loss_dice": 3.50466, "loss": 68.35177, "time": 0.48735}
{"mode": "train", "epoch": 3, "iter": 420, "lr": 0.0, "memory": 9602, "data_time": 0.0064, "decode.loss_cls": 1.47294, "decode.loss_mask": 2.02523, "decode.loss_dice": 3.59094, "decode.d0.loss_cls": 3.68654, "decode.d0.loss_mask": 1.96519, "decode.d0.loss_dice": 3.62212, "decode.d1.loss_cls": 1.19283, "decode.d1.loss_mask": 1.99884, "decode.d1.loss_dice": 3.49237, "decode.d2.loss_cls": 0.97597, "decode.d2.loss_mask": 2.00668, "decode.d2.loss_dice": 3.50123, "decode.d3.loss_cls": 0.95589, "decode.d3.loss_mask": 2.01359, "decode.d3.loss_dice": 3.52683, "decode.d4.loss_cls": 0.92382, "decode.d4.loss_mask": 2.01912, "decode.d4.loss_dice": 3.51152, "decode.d5.loss_cls": 0.92691, "decode.d5.loss_mask": 2.01478, "decode.d5.loss_dice": 3.54554, "decode.d6.loss_cls": 0.98662, "decode.d6.loss_mask": 2.00638, "decode.d6.loss_dice": 3.5665, "decode.d7.loss_cls": 1.12862, "decode.d7.loss_mask": 2.0262, "decode.d7.loss_dice": 3.53791, "decode.d8.loss_cls": 1.26321, "decode.d8.loss_mask": 2.02207, "decode.d8.loss_dice": 3.5824, "loss": 69.0888, "time": 0.33757}
