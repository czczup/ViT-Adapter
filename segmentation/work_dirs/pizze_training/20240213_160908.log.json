{"env_info": "sys.platform: linux\nPython: 3.7.13 (default, Mar 29 2022, 02:18:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1: NVIDIA L40\nCUDA_HOME: /usr/local/cuda\nNVCC: Build cuda_11.3.r11.3/compiler.29920130_0\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.9.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.0+cu111\nOpenCV: 4.9.0\nMMCV: 1.4.2\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMSegmentation: 0.20.2+94ffa6b", "seed": 284906733, "exp_name": "pizze_training.py", "mmseg_version": "0.20.2+94ffa6b", "config": "num_things_classes = 6\nnum_stuff_classes = 0\nnum_classes = 6\nnorm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoderMask2Former',\n    pretrained=\n    '/workspace/ViT-Adapter/segmentation/mask2former_beit_adapter_base_512_40k_cocostuff10k.pth.tar',\n    backbone=dict(\n        type='BEiTAdapter',\n        patch_size=16,\n        embed_dim=768,\n        depth=12,\n        num_heads=12,\n        mlp_ratio=4,\n        qkv_bias=True,\n        use_abs_pos_emb=False,\n        use_rel_pos_bias=True,\n        img_size=512,\n        init_values=1e-06,\n        drop_path_rate=0.2,\n        conv_inplane=64,\n        n_points=4,\n        deform_num_heads=12,\n        cffn_ratio=0.25,\n        deform_ratio=0.5,\n        interaction_indexes=[[0, 2], [3, 5], [6, 8], [9, 11]],\n        pretrained=\n        '/workspace/ViT-Adapter/segmentation/mask2former_beit_adapter_base_512_40k_cocostuff10k.pth.tar'\n    ),\n    decode_head=dict(\n        type='Mask2FormerHead',\n        in_channels=[768, 768, 768, 768],\n        feat_channels=256,\n        out_channels=256,\n        in_index=[0, 1, 2, 3],\n        num_things_classes=6,\n        num_stuff_classes=0,\n        num_queries=100,\n        num_transformer_feat_level=3,\n        pixel_decoder=dict(\n            type='MSDeformAttnPixelDecoder',\n            num_outs=3,\n            norm_cfg=dict(type='GN', num_groups=32),\n            act_cfg=dict(type='ReLU'),\n            encoder=dict(\n                type='DetrTransformerEncoder',\n                num_layers=6,\n                transformerlayers=dict(\n                    type='BaseTransformerLayer',\n                    attn_cfgs=dict(\n                        type='MultiScaleDeformableAttention',\n                        embed_dims=256,\n                        num_heads=8,\n                        num_levels=3,\n                        num_points=4,\n                        im2col_step=64,\n                        dropout=0.0,\n                        batch_first=False,\n                        norm_cfg=None,\n                        init_cfg=None),\n                    ffn_cfgs=dict(\n                        type='FFN',\n                        embed_dims=256,\n                        feedforward_channels=1024,\n                        num_fcs=2,\n                        ffn_drop=0.0,\n                        act_cfg=dict(type='ReLU', inplace=True)),\n                    operation_order=('self_attn', 'norm', 'ffn', 'norm')),\n                init_cfg=None),\n            positional_encoding=dict(\n                type='SinePositionalEncoding', num_feats=128, normalize=True),\n            init_cfg=None),\n        enforce_decoder_input_project=False,\n        positional_encoding=dict(\n            type='SinePositionalEncoding', num_feats=128, normalize=True),\n        transformer_decoder=dict(\n            type='DetrTransformerDecoder',\n            return_intermediate=True,\n            num_layers=9,\n            transformerlayers=dict(\n                type='DetrTransformerDecoderLayer',\n                attn_cfgs=dict(\n                    type='MultiheadAttention',\n                    embed_dims=256,\n                    num_heads=8,\n                    attn_drop=0.0,\n                    proj_drop=0.0,\n                    dropout_layer=None,\n                    batch_first=False),\n                ffn_cfgs=dict(\n                    embed_dims=256,\n                    feedforward_channels=2048,\n                    num_fcs=2,\n                    act_cfg=dict(type='ReLU', inplace=True),\n                    ffn_drop=0.0,\n                    dropout_layer=None,\n                    add_identity=True),\n                feedforward_channels=2048,\n                operation_order=('cross_attn', 'norm', 'self_attn', 'norm',\n                                 'ffn', 'norm')),\n            init_cfg=None),\n        loss_cls=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=False,\n            loss_weight=2.0,\n            reduction='mean',\n            class_weight=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.1]),\n        loss_mask=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=True,\n            reduction='mean',\n            loss_weight=5.0),\n        loss_dice=dict(\n            type='DiceLoss',\n            use_sigmoid=True,\n            activate=True,\n            reduction='mean',\n            naive_dice=True,\n            eps=1.0,\n            loss_weight=5.0),\n        train_cfg=dict(\n            num_points=12544,\n            oversample_ratio=3.0,\n            importance_sample_ratio=0.75,\n            assigner=dict(\n                type='MaskHungarianAssigner',\n                cls_cost=dict(type='ClassificationCost', weight=2.0),\n                mask_cost=dict(\n                    type='CrossEntropyLossCost', weight=5.0, use_sigmoid=True),\n                dice_cost=dict(\n                    type='DiceCost', weight=5.0, pred_act=True, eps=1.0)),\n            sampler=dict(type='MaskPseudoSampler')),\n        test_cfg=dict(\n            panoptic_on=True,\n            semantic_on=False,\n            instance_on=True,\n            max_per_image=100,\n            iou_thr=0.8,\n            filter_low_score=True,\n            mode='slide',\n            crop_size=(512, 512),\n            stride=(341, 341))),\n    train_cfg=dict(\n        num_points=12544,\n        oversample_ratio=3.0,\n        importance_sample_ratio=0.75,\n        assigner=dict(\n            type='MaskHungarianAssigner',\n            cls_cost=dict(type='ClassificationCost', weight=2.0),\n            mask_cost=dict(\n                type='CrossEntropyLossCost', weight=5.0, use_sigmoid=True),\n            dice_cost=dict(\n                type='DiceCost', weight=5.0, pred_act=True, eps=1.0)),\n        sampler=dict(type='MaskPseudoSampler')),\n    test_cfg=dict(\n        panoptic_on=True,\n        semantic_on=False,\n        instance_on=True,\n        max_per_image=100,\n        iou_thr=0.8,\n        filter_low_score=True,\n        mode='slide',\n        crop_size=(512, 512),\n        stride=(341, 341)),\n    init_cfg=None)\ndataset_type = 'PizzeDataset'\ndata_root = 'data/dataset'\nimg_norm_cfg = dict(\n    mean=[71.186, 49.933, 36.509], std=[40.869, 31.001, 20.795], to_rgb=True)\ncrop_size = (512, 512)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', reduce_zero_label=False),\n    dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[71.186, 49.933, 36.509],\n        std=[40.869, 31.001, 20.795],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='ToMask'),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=['img', 'gt_semantic_seg', 'gt_masks', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='ResizeToMultiple', size_divisor=32),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[71.186, 49.933, 36.509],\n                std=[40.869, 31.001, 20.795],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=4,\n    train=dict(\n        type='PizzeDataset',\n        data_root='data/dataset',\n        img_dir='images/training',\n        ann_dir='annotations/training',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', reduce_zero_label=False),\n            dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[71.186, 49.933, 36.509],\n                std=[40.869, 31.001, 20.795],\n                to_rgb=True),\n            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n            dict(type='ToMask'),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_semantic_seg', 'gt_masks', 'gt_labels'])\n        ]),\n    val=dict(\n        type='PizzeDataset',\n        data_root='data/dataset',\n        img_dir='images/validation',\n        ann_dir='annotations/validation',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='ResizeToMultiple', size_divisor=32),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[71.186, 49.933, 36.509],\n                        std=[40.869, 31.001, 20.795],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='PizzeDataset',\n        data_root='data/dataset',\n        img_dir='images/validation',\n        ann_dir='annotations/validation',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='ResizeToMultiple', size_divisor=32),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[71.186, 49.933, 36.509],\n                        std=[40.869, 31.001, 20.795],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=10, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(\n    type='AdamW',\n    lr=0.003,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    constructor='LayerDecayOptimizerConstructor',\n    paramwise_cfg=dict(num_layers=12, layer_decay_rate=0.95))\noptimizer_config = dict()\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=40000)\ncheckpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)\nevaluation = dict(interval=200, metric='mIoU', pre_eval=True, save_best='mIoU')\npretrained = '/workspace/ViT-Adapter/segmentation/mask2former_beit_adapter_base_512_40k_cocostuff10k.pth.tar'\nwork_dir = './work_dirs/pizze_training'\ngpu_ids = range(0, 2)\nauto_resume = False\ndevice = 'cuda'\nseed = 284906733\n", "CLASSES": ["bg", "Anchovy", "Olives", "Salami", "Red_Pepper", "Yellow_Pepper"], "PALETTE": [[255, 255, 255], [0, 0, 255], [0, 255, 255], [0, 255, 0], [255, 255, 0], [255, 0, 0]], "hook_msgs": {}}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 3e-05, "memory": 9615, "data_time": 0.57231, "decode.loss_cls": 2.82331, "decode.loss_mask": 3.2067, "decode.loss_dice": 3.90416, "decode.d0.loss_cls": 3.75088, "decode.d0.loss_mask": 2.4939, "decode.d0.loss_dice": 3.69142, "decode.d1.loss_cls": 3.26175, "decode.d1.loss_mask": 2.64816, "decode.d1.loss_dice": 3.74169, "decode.d2.loss_cls": 3.3596, "decode.d2.loss_mask": 2.70783, "decode.d2.loss_dice": 3.71105, "decode.d3.loss_cls": 2.75638, "decode.d3.loss_mask": 3.03564, "decode.d3.loss_dice": 3.74617, "decode.d4.loss_cls": 2.88929, "decode.d4.loss_mask": 3.33739, "decode.d4.loss_dice": 3.76238, "decode.d5.loss_cls": 2.94981, "decode.d5.loss_mask": 3.12491, "decode.d5.loss_dice": 3.97042, "decode.d6.loss_cls": 3.5669, "decode.d6.loss_mask": 3.21516, "decode.d6.loss_dice": 3.8668, "decode.d7.loss_cls": 2.48279, "decode.d7.loss_mask": 3.19038, "decode.d7.loss_dice": 3.92008, "decode.d8.loss_cls": 2.78471, "decode.d8.loss_mask": 3.18111, "decode.d8.loss_dice": 3.93211, "loss": 99.01286, "time": 0.94008}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 6e-05, "memory": 9615, "data_time": 0.00749, "decode.loss_cls": 2.27732, "decode.loss_mask": 3.12309, "decode.loss_dice": 3.82244, "decode.d0.loss_cls": 3.57003, "decode.d0.loss_mask": 2.13439, "decode.d0.loss_dice": 3.52053, "decode.d1.loss_cls": 1.94813, "decode.d1.loss_mask": 2.067, "decode.d1.loss_dice": 3.47342, "decode.d2.loss_cls": 2.24184, "decode.d2.loss_mask": 2.10321, "decode.d2.loss_dice": 3.53225, "decode.d3.loss_cls": 2.28804, "decode.d3.loss_mask": 2.30621, "decode.d3.loss_dice": 3.62747, "decode.d4.loss_cls": 2.23595, "decode.d4.loss_mask": 2.66539, "decode.d4.loss_dice": 3.67681, "decode.d5.loss_cls": 2.28541, "decode.d5.loss_mask": 2.90928, "decode.d5.loss_dice": 3.7151, "decode.d6.loss_cls": 2.21018, "decode.d6.loss_mask": 3.01082, "decode.d6.loss_dice": 3.84501, "decode.d7.loss_cls": 2.33384, "decode.d7.loss_mask": 3.00816, "decode.d7.loss_dice": 3.75105, "decode.d8.loss_cls": 2.25287, "decode.d8.loss_mask": 3.03117, "decode.d8.loss_dice": 3.77931, "loss": 86.74571, "time": 0.33984}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 9e-05, "memory": 9615, "data_time": 0.00686, "decode.loss_cls": 2.15815, "decode.loss_mask": 2.74748, "decode.loss_dice": 3.70581, "decode.d0.loss_cls": 3.53426, "decode.d0.loss_mask": 1.97672, "decode.d0.loss_dice": 3.46603, "decode.d1.loss_cls": 1.79998, "decode.d1.loss_mask": 1.95901, "decode.d1.loss_dice": 3.41734, "decode.d2.loss_cls": 1.86373, "decode.d2.loss_mask": 1.94617, "decode.d2.loss_dice": 3.43452, "decode.d3.loss_cls": 1.92498, "decode.d3.loss_mask": 1.9888, "decode.d3.loss_dice": 3.47449, "decode.d4.loss_cls": 2.06897, "decode.d4.loss_mask": 2.04194, "decode.d4.loss_dice": 3.49966, "decode.d5.loss_cls": 2.07022, "decode.d5.loss_mask": 2.18437, "decode.d5.loss_dice": 3.52364, "decode.d6.loss_cls": 2.09189, "decode.d6.loss_mask": 2.3155, "decode.d6.loss_dice": 3.63958, "decode.d7.loss_cls": 2.13753, "decode.d7.loss_mask": 2.50176, "decode.d7.loss_dice": 3.63101, "decode.d8.loss_cls": 2.14797, "decode.d8.loss_mask": 2.76765, "decode.d8.loss_dice": 3.67718, "loss": 79.69635, "time": 0.33805}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 0.00012, "memory": 9615, "data_time": 0.00694, "decode.loss_cls": 2.09485, "decode.loss_mask": 2.48425, "decode.loss_dice": 3.5686, "decode.d0.loss_cls": 3.5044, "decode.d0.loss_mask": 1.98024, "decode.d0.loss_dice": 3.42086, "decode.d1.loss_cls": 1.71657, "decode.d1.loss_mask": 1.98391, "decode.d1.loss_dice": 3.41996, "decode.d2.loss_cls": 1.91445, "decode.d2.loss_mask": 1.99982, "decode.d2.loss_dice": 3.41259, "decode.d3.loss_cls": 2.00943, "decode.d3.loss_mask": 2.08905, "decode.d3.loss_dice": 3.42157, "decode.d4.loss_cls": 2.13615, "decode.d4.loss_mask": 1.97831, "decode.d4.loss_dice": 3.4169, "decode.d5.loss_cls": 2.14466, "decode.d5.loss_mask": 2.06311, "decode.d5.loss_dice": 3.42293, "decode.d6.loss_cls": 2.14731, "decode.d6.loss_mask": 2.15398, "decode.d6.loss_dice": 3.44964, "decode.d7.loss_cls": 2.10077, "decode.d7.loss_mask": 2.12215, "decode.d7.loss_dice": 3.49648, "decode.d8.loss_cls": 2.08175, "decode.d8.loss_mask": 2.28379, "decode.d8.loss_dice": 3.54827, "loss": 77.56677, "time": 0.34508}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00015, "memory": 9615, "data_time": 0.0069, "decode.loss_cls": 2.00977, "decode.loss_mask": 2.57297, "decode.loss_dice": 3.36398, "decode.d0.loss_cls": 3.47631, "decode.d0.loss_mask": 2.14821, "decode.d0.loss_dice": 3.22887, "decode.d1.loss_cls": 1.4596, "decode.d1.loss_mask": 2.04312, "decode.d1.loss_dice": 3.24748, "decode.d2.loss_cls": 1.66009, "decode.d2.loss_mask": 2.10455, "decode.d2.loss_dice": 3.2583, "decode.d3.loss_cls": 1.83687, "decode.d3.loss_mask": 2.2879, "decode.d3.loss_dice": 3.28723, "decode.d4.loss_cls": 1.98094, "decode.d4.loss_mask": 2.28411, "decode.d4.loss_dice": 3.263, "decode.d5.loss_cls": 1.95682, "decode.d5.loss_mask": 2.24903, "decode.d5.loss_dice": 3.27687, "decode.d6.loss_cls": 2.02204, "decode.d6.loss_mask": 2.22317, "decode.d6.loss_dice": 3.36247, "decode.d7.loss_cls": 2.01019, "decode.d7.loss_mask": 2.23992, "decode.d7.loss_dice": 3.2783, "decode.d8.loss_cls": 2.00021, "decode.d8.loss_mask": 2.20308, "decode.d8.loss_dice": 3.31947, "loss": 75.65487, "time": 0.34072}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 0.00018, "memory": 9615, "data_time": 0.00696, "decode.loss_cls": 2.04193, "decode.loss_mask": 2.11529, "decode.loss_dice": 3.30466, "decode.d0.loss_cls": 3.47739, "decode.d0.loss_mask": 2.09281, "decode.d0.loss_dice": 3.26508, "decode.d1.loss_cls": 1.39257, "decode.d1.loss_mask": 2.08538, "decode.d1.loss_dice": 3.25878, "decode.d2.loss_cls": 1.51945, "decode.d2.loss_mask": 2.10226, "decode.d2.loss_dice": 3.23773, "decode.d3.loss_cls": 1.64372, "decode.d3.loss_mask": 2.07876, "decode.d3.loss_dice": 3.29056, "decode.d4.loss_cls": 1.84884, "decode.d4.loss_mask": 2.06819, "decode.d4.loss_dice": 3.25955, "decode.d5.loss_cls": 1.85186, "decode.d5.loss_mask": 2.06856, "decode.d5.loss_dice": 3.29621, "decode.d6.loss_cls": 1.99359, "decode.d6.loss_mask": 2.04125, "decode.d6.loss_dice": 3.3882, "decode.d7.loss_cls": 2.04843, "decode.d7.loss_mask": 2.02003, "decode.d7.loss_dice": 3.36617, "decode.d8.loss_cls": 2.02327, "decode.d8.loss_mask": 2.05076, "decode.d8.loss_dice": 3.31431, "loss": 73.54561, "time": 0.33895}
{"mode": "train", "epoch": 1, "iter": 70, "lr": 0.00021, "memory": 9615, "data_time": 0.00717, "decode.loss_cls": 1.92137, "decode.loss_mask": 2.20036, "decode.loss_dice": 3.35317, "decode.d0.loss_cls": 3.39888, "decode.d0.loss_mask": 2.12365, "decode.d0.loss_dice": 3.27355, "decode.d1.loss_cls": 1.48585, "decode.d1.loss_mask": 2.18277, "decode.d1.loss_dice": 3.20695, "decode.d2.loss_cls": 1.82704, "decode.d2.loss_mask": 2.24421, "decode.d2.loss_dice": 3.31517, "decode.d3.loss_cls": 1.79423, "decode.d3.loss_mask": 2.19989, "decode.d3.loss_dice": 3.32352, "decode.d4.loss_cls": 1.89117, "decode.d4.loss_mask": 2.29918, "decode.d4.loss_dice": 3.37532, "decode.d5.loss_cls": 1.91177, "decode.d5.loss_mask": 2.27961, "decode.d5.loss_dice": 3.332, "decode.d6.loss_cls": 1.88023, "decode.d6.loss_mask": 2.40371, "decode.d6.loss_dice": 3.38304, "decode.d7.loss_cls": 1.85055, "decode.d7.loss_mask": 2.35806, "decode.d7.loss_dice": 3.30093, "decode.d8.loss_cls": 1.85413, "decode.d8.loss_mask": 2.24649, "decode.d8.loss_dice": 3.29663, "loss": 75.51342, "time": 0.34593}
{"mode": "train", "epoch": 1, "iter": 80, "lr": 0.00024, "memory": 9615, "data_time": 0.00696, "decode.loss_cls": 1.89217, "decode.loss_mask": 2.1421, "decode.loss_dice": 3.17091, "decode.d0.loss_cls": 3.40268, "decode.d0.loss_mask": 2.05817, "decode.d0.loss_dice": 3.29156, "decode.d1.loss_cls": 1.07863, "decode.d1.loss_mask": 2.21816, "decode.d1.loss_dice": 3.29218, "decode.d2.loss_cls": 1.29513, "decode.d2.loss_mask": 2.16568, "decode.d2.loss_dice": 3.23449, "decode.d3.loss_cls": 1.59326, "decode.d3.loss_mask": 2.13854, "decode.d3.loss_dice": 3.24369, "decode.d4.loss_cls": 1.90914, "decode.d4.loss_mask": 2.12306, "decode.d4.loss_dice": 3.22775, "decode.d5.loss_cls": 2.03924, "decode.d5.loss_mask": 2.11125, "decode.d5.loss_dice": 3.24594, "decode.d6.loss_cls": 2.0122, "decode.d6.loss_mask": 2.05522, "decode.d6.loss_dice": 3.232, "decode.d7.loss_cls": 1.94335, "decode.d7.loss_mask": 2.07944, "decode.d7.loss_dice": 3.19366, "decode.d8.loss_cls": 1.88517, "decode.d8.loss_mask": 2.11854, "decode.d8.loss_dice": 3.16027, "loss": 72.55359, "time": 0.34165}
{"mode": "train", "epoch": 1, "iter": 90, "lr": 0.00027, "memory": 9615, "data_time": 0.00683, "decode.loss_cls": 1.60844, "decode.loss_mask": 2.28504, "decode.loss_dice": 3.21327, "decode.d0.loss_cls": 3.2836, "decode.d0.loss_mask": 2.17061, "decode.d0.loss_dice": 3.21403, "decode.d1.loss_cls": 0.85121, "decode.d1.loss_mask": 2.2056, "decode.d1.loss_dice": 3.2108, "decode.d2.loss_cls": 0.97617, "decode.d2.loss_mask": 2.21141, "decode.d2.loss_dice": 3.21525, "decode.d3.loss_cls": 1.28246, "decode.d3.loss_mask": 2.1786, "decode.d3.loss_dice": 3.19342, "decode.d4.loss_cls": 1.6552, "decode.d4.loss_mask": 2.18459, "decode.d4.loss_dice": 3.18578, "decode.d5.loss_cls": 1.78434, "decode.d5.loss_mask": 2.17899, "decode.d5.loss_dice": 3.22669, "decode.d6.loss_cls": 1.67752, "decode.d6.loss_mask": 2.18947, "decode.d6.loss_dice": 3.22352, "decode.d7.loss_cls": 1.53429, "decode.d7.loss_mask": 2.20315, "decode.d7.loss_dice": 3.19948, "decode.d8.loss_cls": 1.50851, "decode.d8.loss_mask": 2.33826, "decode.d8.loss_dice": 3.17158, "loss": 70.36129, "time": 0.34241}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0003, "memory": 9615, "data_time": 0.00709, "decode.loss_cls": 1.75982, "decode.loss_mask": 2.12871, "decode.loss_dice": 2.9917, "decode.d0.loss_cls": 3.18074, "decode.d0.loss_mask": 2.12513, "decode.d0.loss_dice": 3.0401, "decode.d1.loss_cls": 0.7415, "decode.d1.loss_mask": 2.13153, "decode.d1.loss_dice": 3.02657, "decode.d2.loss_cls": 0.76136, "decode.d2.loss_mask": 2.13392, "decode.d2.loss_dice": 3.06412, "decode.d3.loss_cls": 1.08088, "decode.d3.loss_mask": 2.13372, "decode.d3.loss_dice": 3.02991, "decode.d4.loss_cls": 1.53249, "decode.d4.loss_mask": 2.10074, "decode.d4.loss_dice": 3.02147, "decode.d5.loss_cls": 1.42811, "decode.d5.loss_mask": 2.14366, "decode.d5.loss_dice": 3.05127, "decode.d6.loss_cls": 1.46209, "decode.d6.loss_mask": 2.10125, "decode.d6.loss_dice": 3.03099, "decode.d7.loss_cls": 1.4257, "decode.d7.loss_mask": 2.15054, "decode.d7.loss_dice": 3.01394, "decode.d8.loss_cls": 1.60877, "decode.d8.loss_mask": 2.13613, "decode.d8.loss_dice": 3.01309, "loss": 66.54994, "time": 0.3422}
{"mode": "train", "epoch": 1, "iter": 110, "lr": 0.00033, "memory": 9615, "data_time": 0.00707, "decode.loss_cls": 1.55784, "decode.loss_mask": 2.24737, "decode.loss_dice": 3.15604, "decode.d0.loss_cls": 3.16318, "decode.d0.loss_mask": 2.1553, "decode.d0.loss_dice": 3.12076, "decode.d1.loss_cls": 0.81198, "decode.d1.loss_mask": 2.22177, "decode.d1.loss_dice": 3.13581, "decode.d2.loss_cls": 0.73722, "decode.d2.loss_mask": 2.21991, "decode.d2.loss_dice": 3.16541, "decode.d3.loss_cls": 0.89732, "decode.d3.loss_mask": 2.2458, "decode.d3.loss_dice": 3.12801, "decode.d4.loss_cls": 1.4207, "decode.d4.loss_mask": 2.21413, "decode.d4.loss_dice": 3.12097, "decode.d5.loss_cls": 1.30619, "decode.d5.loss_mask": 2.29745, "decode.d5.loss_dice": 3.15896, "decode.d6.loss_cls": 1.42439, "decode.d6.loss_mask": 2.24484, "decode.d6.loss_dice": 3.13898, "decode.d7.loss_cls": 1.25586, "decode.d7.loss_mask": 2.29024, "decode.d7.loss_dice": 3.18351, "decode.d8.loss_cls": 1.44492, "decode.d8.loss_mask": 2.2629, "decode.d8.loss_dice": 3.13768, "loss": 67.86543, "time": 0.3419}
{"mode": "train", "epoch": 1, "iter": 120, "lr": 0.00037, "memory": 9615, "data_time": 0.00672, "decode.loss_cls": 0.90011, "decode.loss_mask": 2.00832, "decode.loss_dice": 3.06016, "decode.d0.loss_cls": 3.05077, "decode.d0.loss_mask": 1.94991, "decode.d0.loss_dice": 3.03265, "decode.d1.loss_cls": 0.49277, "decode.d1.loss_mask": 1.961, "decode.d1.loss_dice": 3.06831, "decode.d2.loss_cls": 0.5024, "decode.d2.loss_mask": 2.01342, "decode.d2.loss_dice": 3.09404, "decode.d3.loss_cls": 0.65638, "decode.d3.loss_mask": 2.04618, "decode.d3.loss_dice": 3.12764, "decode.d4.loss_cls": 0.83228, "decode.d4.loss_mask": 2.03573, "decode.d4.loss_dice": 3.10432, "decode.d5.loss_cls": 0.86857, "decode.d5.loss_mask": 1.97079, "decode.d5.loss_dice": 3.0783, "decode.d6.loss_cls": 0.98864, "decode.d6.loss_mask": 2.00303, "decode.d6.loss_dice": 3.04787, "decode.d7.loss_cls": 0.93482, "decode.d7.loss_mask": 2.05723, "decode.d7.loss_dice": 2.9979, "decode.d8.loss_cls": 0.80466, "decode.d8.loss_mask": 1.99431, "decode.d8.loss_dice": 3.07811, "loss": 60.76061, "time": 0.34238}
{"mode": "train", "epoch": 1, "iter": 130, "lr": 0.0004, "memory": 9615, "data_time": 0.00696, "decode.loss_cls": 1.33812, "decode.loss_mask": 2.17183, "decode.loss_dice": 3.06248, "decode.d0.loss_cls": 2.96971, "decode.d0.loss_mask": 2.11479, "decode.d0.loss_dice": 3.03339, "decode.d1.loss_cls": 0.47901, "decode.d1.loss_mask": 2.13352, "decode.d1.loss_dice": 3.03885, "decode.d2.loss_cls": 0.53956, "decode.d2.loss_mask": 2.1621, "decode.d2.loss_dice": 3.07562, "decode.d3.loss_cls": 0.88396, "decode.d3.loss_mask": 2.16862, "decode.d3.loss_dice": 3.05818, "decode.d4.loss_cls": 1.08254, "decode.d4.loss_mask": 2.19451, "decode.d4.loss_dice": 3.05108, "decode.d5.loss_cls": 0.984, "decode.d5.loss_mask": 2.19086, "decode.d5.loss_dice": 3.00497, "decode.d6.loss_cls": 0.76378, "decode.d6.loss_mask": 2.24978, "decode.d6.loss_dice": 3.0487, "decode.d7.loss_cls": 0.71596, "decode.d7.loss_mask": 2.24252, "decode.d7.loss_dice": 3.05043, "decode.d8.loss_cls": 0.5755, "decode.d8.loss_mask": 2.20535, "decode.d8.loss_dice": 3.06449, "loss": 62.65423, "time": 0.34133}
{"mode": "train", "epoch": 1, "iter": 140, "lr": 0.00043, "memory": 9615, "data_time": 0.00695, "decode.loss_cls": 0.73406, "decode.loss_mask": 2.2234, "decode.loss_dice": 3.01649, "decode.d0.loss_cls": 2.89553, "decode.d0.loss_mask": 2.12799, "decode.d0.loss_dice": 3.00072, "decode.d1.loss_cls": 0.34289, "decode.d1.loss_mask": 2.22471, "decode.d1.loss_dice": 2.99055, "decode.d2.loss_cls": 0.33723, "decode.d2.loss_mask": 2.20119, "decode.d2.loss_dice": 3.00778, "decode.d3.loss_cls": 0.56194, "decode.d3.loss_mask": 2.20279, "decode.d3.loss_dice": 3.0007, "decode.d4.loss_cls": 0.81771, "decode.d4.loss_mask": 2.19668, "decode.d4.loss_dice": 3.04128, "decode.d5.loss_cls": 0.89178, "decode.d5.loss_mask": 2.2314, "decode.d5.loss_dice": 3.02, "decode.d6.loss_cls": 0.72858, "decode.d6.loss_mask": 2.24846, "decode.d6.loss_dice": 3.03443, "decode.d7.loss_cls": 0.7197, "decode.d7.loss_mask": 2.24231, "decode.d7.loss_dice": 3.02049, "decode.d8.loss_cls": 0.44374, "decode.d8.loss_mask": 2.26701, "decode.d8.loss_dice": 3.01772, "loss": 60.78926, "time": 0.34114}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00046, "memory": 9615, "data_time": 0.00668, "decode.loss_cls": 0.46871, "decode.loss_mask": 2.20652, "decode.loss_dice": 3.07547, "decode.d0.loss_cls": 2.78893, "decode.d0.loss_mask": 2.13015, "decode.d0.loss_dice": 3.06272, "decode.d1.loss_cls": 0.24747, "decode.d1.loss_mask": 2.22237, "decode.d1.loss_dice": 3.00699, "decode.d2.loss_cls": 0.26177, "decode.d2.loss_mask": 2.23493, "decode.d2.loss_dice": 2.99935, "decode.d3.loss_cls": 0.3352, "decode.d3.loss_mask": 2.20697, "decode.d3.loss_dice": 3.03196, "decode.d4.loss_cls": 0.5007, "decode.d4.loss_mask": 2.2201, "decode.d4.loss_dice": 3.03459, "decode.d5.loss_cls": 0.50416, "decode.d5.loss_mask": 2.21744, "decode.d5.loss_dice": 3.04472, "decode.d6.loss_cls": 0.56305, "decode.d6.loss_mask": 2.20184, "decode.d6.loss_dice": 3.10862, "decode.d7.loss_cls": 0.61508, "decode.d7.loss_mask": 2.21273, "decode.d7.loss_dice": 3.07226, "decode.d8.loss_cls": 0.35473, "decode.d8.loss_mask": 2.16359, "decode.d8.loss_dice": 3.10217, "loss": 59.1953, "time": 0.34001}
{"mode": "train", "epoch": 1, "iter": 160, "lr": 0.00049, "memory": 9615, "data_time": 0.0068, "decode.loss_cls": 0.32732, "decode.loss_mask": 2.08939, "decode.loss_dice": 2.97594, "decode.d0.loss_cls": 2.68779, "decode.d0.loss_mask": 2.03196, "decode.d0.loss_dice": 2.93438, "decode.d1.loss_cls": 0.23599, "decode.d1.loss_mask": 2.07011, "decode.d1.loss_dice": 2.91755, "decode.d2.loss_cls": 0.25079, "decode.d2.loss_mask": 2.09691, "decode.d2.loss_dice": 2.9338, "decode.d3.loss_cls": 0.26638, "decode.d3.loss_mask": 2.08937, "decode.d3.loss_dice": 2.93824, "decode.d4.loss_cls": 0.35917, "decode.d4.loss_mask": 2.07906, "decode.d4.loss_dice": 2.95796, "decode.d5.loss_cls": 0.46365, "decode.d5.loss_mask": 2.09047, "decode.d5.loss_dice": 2.93539, "decode.d6.loss_cls": 0.4028, "decode.d6.loss_mask": 2.13999, "decode.d6.loss_dice": 2.97046, "decode.d7.loss_cls": 0.42559, "decode.d7.loss_mask": 2.13307, "decode.d7.loss_dice": 2.98416, "decode.d8.loss_cls": 0.30498, "decode.d8.loss_mask": 2.09388, "decode.d8.loss_dice": 2.96313, "loss": 56.14969, "time": 0.33713}
{"mode": "train", "epoch": 2, "iter": 170, "lr": 0.00052, "memory": 9615, "data_time": 0.2182, "decode.loss_cls": 0.31293, "decode.loss_mask": 2.10491, "decode.loss_dice": 2.85794, "decode.d0.loss_cls": 2.57761, "decode.d0.loss_mask": 2.06635, "decode.d0.loss_dice": 2.83095, "decode.d1.loss_cls": 0.22172, "decode.d1.loss_mask": 2.13029, "decode.d1.loss_dice": 2.83685, "decode.d2.loss_cls": 0.21559, "decode.d2.loss_mask": 2.14796, "decode.d2.loss_dice": 2.81468, "decode.d3.loss_cls": 0.22636, "decode.d3.loss_mask": 2.16351, "decode.d3.loss_dice": 2.8469, "decode.d4.loss_cls": 0.36338, "decode.d4.loss_mask": 2.12714, "decode.d4.loss_dice": 2.82598, "decode.d5.loss_cls": 0.41319, "decode.d5.loss_mask": 2.13319, "decode.d5.loss_dice": 2.82444, "decode.d6.loss_cls": 0.39721, "decode.d6.loss_mask": 2.04483, "decode.d6.loss_dice": 2.87157, "decode.d7.loss_cls": 0.39095, "decode.d7.loss_mask": 2.14939, "decode.d7.loss_dice": 2.87417, "decode.d8.loss_cls": 0.25191, "decode.d8.loss_mask": 2.12074, "decode.d8.loss_dice": 2.85098, "loss": 54.99361, "time": 0.55437}
{"mode": "train", "epoch": 2, "iter": 180, "lr": 0.00055, "memory": 9615, "data_time": 0.007, "decode.loss_cls": 0.37168, "decode.loss_mask": 2.42014, "decode.loss_dice": 3.02134, "decode.d0.loss_cls": 2.49481, "decode.d0.loss_mask": 2.27575, "decode.d0.loss_dice": 2.94934, "decode.d1.loss_cls": 0.44253, "decode.d1.loss_mask": 2.37422, "decode.d1.loss_dice": 2.94512, "decode.d2.loss_cls": 0.39845, "decode.d2.loss_mask": 2.31695, "decode.d2.loss_dice": 2.97978, "decode.d3.loss_cls": 0.37597, "decode.d3.loss_mask": 2.37061, "decode.d3.loss_dice": 2.98744, "decode.d4.loss_cls": 0.42008, "decode.d4.loss_mask": 2.36394, "decode.d4.loss_dice": 3.00244, "decode.d5.loss_cls": 0.43959, "decode.d5.loss_mask": 2.34848, "decode.d5.loss_dice": 3.00783, "decode.d6.loss_cls": 0.31485, "decode.d6.loss_mask": 2.44276, "decode.d6.loss_dice": 3.00714, "decode.d7.loss_cls": 0.33934, "decode.d7.loss_mask": 2.40768, "decode.d7.loss_dice": 2.98947, "decode.d8.loss_cls": 0.27451, "decode.d8.loss_mask": 2.40895, "decode.d8.loss_dice": 2.99334, "loss": 59.48453, "time": 0.34127}
{"mode": "train", "epoch": 2, "iter": 190, "lr": 0.00058, "memory": 9615, "data_time": 0.00717, "decode.loss_cls": 0.49784, "decode.loss_mask": 2.30691, "decode.loss_dice": 3.16213, "decode.d0.loss_cls": 2.44597, "decode.d0.loss_mask": 2.1972, "decode.d0.loss_dice": 3.09455, "decode.d1.loss_cls": 0.42136, "decode.d1.loss_mask": 2.24164, "decode.d1.loss_dice": 3.07014, "decode.d2.loss_cls": 0.47202, "decode.d2.loss_mask": 2.23833, "decode.d2.loss_dice": 3.07023, "decode.d3.loss_cls": 0.34024, "decode.d3.loss_mask": 2.23093, "decode.d3.loss_dice": 3.10445, "decode.d4.loss_cls": 0.48213, "decode.d4.loss_mask": 2.29237, "decode.d4.loss_dice": 3.10589, "decode.d5.loss_cls": 0.38685, "decode.d5.loss_mask": 2.26198, "decode.d5.loss_dice": 3.13128, "decode.d6.loss_cls": 0.28005, "decode.d6.loss_mask": 2.29646, "decode.d6.loss_dice": 3.18112, "decode.d7.loss_cls": 0.3611, "decode.d7.loss_mask": 2.24373, "decode.d7.loss_dice": 3.18259, "decode.d8.loss_cls": 0.35969, "decode.d8.loss_mask": 2.33253, "decode.d8.loss_dice": 3.13211, "loss": 59.92384, "time": 0.3408}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00061, "memory": 9615, "data_time": 0.00677, "decode.loss_cls": 0.50363, "decode.loss_mask": 1.96821, "decode.loss_dice": 2.91361, "decode.d0.loss_cls": 2.28245, "decode.d0.loss_mask": 1.90196, "decode.d0.loss_dice": 2.86024, "decode.d1.loss_cls": 0.34371, "decode.d1.loss_mask": 1.9866, "decode.d1.loss_dice": 2.88992, "decode.d2.loss_cls": 0.42159, "decode.d2.loss_mask": 2.00401, "decode.d2.loss_dice": 2.9034, "decode.d3.loss_cls": 0.34099, "decode.d3.loss_mask": 1.96585, "decode.d3.loss_dice": 2.84256, "decode.d4.loss_cls": 0.41466, "decode.d4.loss_mask": 1.92306, "decode.d4.loss_dice": 2.94427, "decode.d5.loss_cls": 0.34296, "decode.d5.loss_mask": 1.95647, "decode.d5.loss_dice": 2.89724, "decode.d6.loss_cls": 0.27605, "decode.d6.loss_mask": 1.98318, "decode.d6.loss_dice": 2.91289, "decode.d7.loss_cls": 0.31499, "decode.d7.loss_mask": 1.96032, "decode.d7.loss_dice": 2.8924, "decode.d8.loss_cls": 0.44991, "decode.d8.loss_mask": 2.01293, "decode.d8.loss_dice": 2.8806, "loss": 54.29068, "time": 0.3406}
{"mode": "val", "epoch": 2, "iter": 20, "lr": 0.00061, "aAcc": 0.8565, "mIoU": 0.2612, "mAcc": 0.3486, "IoU.bg": 0.8682, "IoU.Anchovy": 0.0289, "IoU.Olives": 0.5158, "IoU.Salami": 0.0, "IoU.Red_Pepper": 0.1545, "IoU.Yellow_Pepper": 0.0, "Acc.bg": 0.9786, "Acc.Anchovy": 0.0312, "Acc.Olives": 0.8809, "Acc.Salami": 0.0, "Acc.Red_Pepper": 0.2006, "Acc.Yellow_Pepper": 0.0}
{"mode": "train", "epoch": 2, "iter": 210, "lr": 0.00064, "memory": 9615, "data_time": 1.12167, "decode.loss_cls": 0.47814, "decode.loss_mask": 2.24253, "decode.loss_dice": 2.93469, "decode.d0.loss_cls": 2.2012, "decode.d0.loss_mask": 2.20736, "decode.d0.loss_dice": 2.87477, "decode.d1.loss_cls": 0.37361, "decode.d1.loss_mask": 2.29873, "decode.d1.loss_dice": 2.8932, "decode.d2.loss_cls": 0.39087, "decode.d2.loss_mask": 2.35229, "decode.d2.loss_dice": 2.89288, "decode.d3.loss_cls": 0.36659, "decode.d3.loss_mask": 2.29328, "decode.d3.loss_dice": 2.92303, "decode.d4.loss_cls": 0.45185, "decode.d4.loss_mask": 2.298, "decode.d4.loss_dice": 2.93845, "decode.d5.loss_cls": 0.38536, "decode.d5.loss_mask": 2.24901, "decode.d5.loss_dice": 2.89586, "decode.d6.loss_cls": 0.23559, "decode.d6.loss_mask": 2.34111, "decode.d6.loss_dice": 2.92884, "decode.d7.loss_cls": 0.29113, "decode.d7.loss_mask": 2.3416, "decode.d7.loss_dice": 2.92715, "decode.d8.loss_cls": 0.37814, "decode.d8.loss_mask": 2.32283, "decode.d8.loss_dice": 2.98188, "loss": 57.68999, "time": 1.47414}
{"mode": "train", "epoch": 2, "iter": 220, "lr": 0.00067, "memory": 9615, "data_time": 0.00685, "decode.loss_cls": 0.38957, "decode.loss_mask": 2.0784, "decode.loss_dice": 2.84986, "decode.d0.loss_cls": 2.05953, "decode.d0.loss_mask": 2.06042, "decode.d0.loss_dice": 2.77851, "decode.d1.loss_cls": 0.31846, "decode.d1.loss_mask": 2.10217, "decode.d1.loss_dice": 2.82067, "decode.d2.loss_cls": 0.36229, "decode.d2.loss_mask": 2.11742, "decode.d2.loss_dice": 2.87726, "decode.d3.loss_cls": 0.34887, "decode.d3.loss_mask": 2.06841, "decode.d3.loss_dice": 2.8569, "decode.d4.loss_cls": 0.43071, "decode.d4.loss_mask": 2.07952, "decode.d4.loss_dice": 2.8203, "decode.d5.loss_cls": 0.31354, "decode.d5.loss_mask": 2.08805, "decode.d5.loss_dice": 2.8012, "decode.d6.loss_cls": 0.26651, "decode.d6.loss_mask": 2.04619, "decode.d6.loss_dice": 2.80171, "decode.d7.loss_cls": 0.25643, "decode.d7.loss_mask": 2.09352, "decode.d7.loss_dice": 2.80864, "decode.d8.loss_cls": 0.31754, "decode.d8.loss_mask": 2.075, "decode.d8.loss_dice": 2.81934, "loss": 54.10693, "time": 0.35163}
{"mode": "train", "epoch": 2, "iter": 230, "lr": 0.0007, "memory": 9615, "data_time": 0.00738, "decode.loss_cls": 0.3452, "decode.loss_mask": 2.26973, "decode.loss_dice": 2.83543, "decode.d0.loss_cls": 1.91954, "decode.d0.loss_mask": 2.27033, "decode.d0.loss_dice": 2.79672, "decode.d1.loss_cls": 0.2475, "decode.d1.loss_mask": 2.35721, "decode.d1.loss_dice": 2.82624, "decode.d2.loss_cls": 0.3195, "decode.d2.loss_mask": 2.35263, "decode.d2.loss_dice": 2.79359, "decode.d3.loss_cls": 0.24898, "decode.d3.loss_mask": 2.28763, "decode.d3.loss_dice": 2.83945, "decode.d4.loss_cls": 0.28407, "decode.d4.loss_mask": 2.24618, "decode.d4.loss_dice": 2.79972, "decode.d5.loss_cls": 0.24226, "decode.d5.loss_mask": 2.30028, "decode.d5.loss_dice": 2.80664, "decode.d6.loss_cls": 0.20366, "decode.d6.loss_mask": 2.29276, "decode.d6.loss_dice": 2.82095, "decode.d7.loss_cls": 0.22384, "decode.d7.loss_mask": 2.33838, "decode.d7.loss_dice": 2.78564, "decode.d8.loss_cls": 0.34318, "decode.d8.loss_mask": 2.28018, "decode.d8.loss_dice": 2.80751, "loss": 55.48495, "time": 0.35316}
{"mode": "train", "epoch": 2, "iter": 240, "lr": 0.00073, "memory": 9615, "data_time": 0.00709, "decode.loss_cls": 0.3072, "decode.loss_mask": 2.26498, "decode.loss_dice": 2.79136, "decode.d0.loss_cls": 1.80563, "decode.d0.loss_mask": 2.20305, "decode.d0.loss_dice": 2.78293, "decode.d1.loss_cls": 0.30568, "decode.d1.loss_mask": 2.29706, "decode.d1.loss_dice": 2.78304, "decode.d2.loss_cls": 0.32633, "decode.d2.loss_mask": 2.31313, "decode.d2.loss_dice": 2.79951, "decode.d3.loss_cls": 0.33374, "decode.d3.loss_mask": 2.28051, "decode.d3.loss_dice": 2.79515, "decode.d4.loss_cls": 0.25392, "decode.d4.loss_mask": 2.23434, "decode.d4.loss_dice": 2.74208, "decode.d5.loss_cls": 0.24374, "decode.d5.loss_mask": 2.24207, "decode.d5.loss_dice": 2.76895, "decode.d6.loss_cls": 0.20638, "decode.d6.loss_mask": 2.2616, "decode.d6.loss_dice": 2.79087, "decode.d7.loss_cls": 0.23403, "decode.d7.loss_mask": 2.2475, "decode.d7.loss_dice": 2.76555, "decode.d8.loss_cls": 0.3178, "decode.d8.loss_mask": 2.29218, "decode.d8.loss_dice": 2.77478, "loss": 54.76509, "time": 0.35197}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00076, "memory": 9615, "data_time": 0.00867, "decode.loss_cls": 0.29395, "decode.loss_mask": 2.27755, "decode.loss_dice": 2.77516, "decode.d0.loss_cls": 1.69103, "decode.d0.loss_mask": 2.20356, "decode.d0.loss_dice": 2.76428, "decode.d1.loss_cls": 0.28412, "decode.d1.loss_mask": 2.25437, "decode.d1.loss_dice": 2.7558, "decode.d2.loss_cls": 0.3273, "decode.d2.loss_mask": 2.30119, "decode.d2.loss_dice": 2.73158, "decode.d3.loss_cls": 0.41494, "decode.d3.loss_mask": 2.29668, "decode.d3.loss_dice": 2.73469, "decode.d4.loss_cls": 0.33181, "decode.d4.loss_mask": 2.27127, "decode.d4.loss_dice": 2.73845, "decode.d5.loss_cls": 0.34723, "decode.d5.loss_mask": 2.32415, "decode.d5.loss_dice": 2.76289, "decode.d6.loss_cls": 0.25277, "decode.d6.loss_mask": 2.29437, "decode.d6.loss_dice": 2.79579, "decode.d7.loss_cls": 0.23476, "decode.d7.loss_mask": 2.33414, "decode.d7.loss_dice": 2.78436, "decode.d8.loss_cls": 0.33347, "decode.d8.loss_mask": 2.32634, "decode.d8.loss_dice": 2.78512, "loss": 55.02311, "time": 0.35505}
{"mode": "train", "epoch": 2, "iter": 260, "lr": 0.00079, "memory": 9615, "data_time": 0.00822, "decode.loss_cls": 0.25628, "decode.loss_mask": 2.24522, "decode.loss_dice": 2.97481, "decode.d0.loss_cls": 1.55076, "decode.d0.loss_mask": 2.20788, "decode.d0.loss_dice": 2.93919, "decode.d1.loss_cls": 0.27305, "decode.d1.loss_mask": 2.2395, "decode.d1.loss_dice": 2.91963, "decode.d2.loss_cls": 0.32645, "decode.d2.loss_mask": 2.27437, "decode.d2.loss_dice": 2.91986, "decode.d3.loss_cls": 0.35113, "decode.d3.loss_mask": 2.26767, "decode.d3.loss_dice": 2.97345, "decode.d4.loss_cls": 0.37424, "decode.d4.loss_mask": 2.24967, "decode.d4.loss_dice": 2.96614, "decode.d5.loss_cls": 0.25145, "decode.d5.loss_mask": 2.22233, "decode.d5.loss_dice": 2.94588, "decode.d6.loss_cls": 0.31882, "decode.d6.loss_mask": 2.22421, "decode.d6.loss_dice": 2.97201, "decode.d7.loss_cls": 0.21915, "decode.d7.loss_mask": 2.22728, "decode.d7.loss_dice": 3.00594, "decode.d8.loss_cls": 0.26856, "decode.d8.loss_mask": 2.28626, "decode.d8.loss_dice": 3.00468, "loss": 56.25586, "time": 0.34941}
{"mode": "train", "epoch": 2, "iter": 270, "lr": 0.00082, "memory": 9615, "data_time": 0.00723, "decode.loss_cls": 0.26934, "decode.loss_mask": 2.13926, "decode.loss_dice": 2.89516, "decode.d0.loss_cls": 1.41136, "decode.d0.loss_mask": 2.1276, "decode.d0.loss_dice": 2.84659, "decode.d1.loss_cls": 0.29572, "decode.d1.loss_mask": 2.15107, "decode.d1.loss_dice": 2.86745, "decode.d2.loss_cls": 0.32763, "decode.d2.loss_mask": 2.15975, "decode.d2.loss_dice": 2.81807, "decode.d3.loss_cls": 0.26739, "decode.d3.loss_mask": 2.18006, "decode.d3.loss_dice": 2.83124, "decode.d4.loss_cls": 0.2844, "decode.d4.loss_mask": 2.21803, "decode.d4.loss_dice": 2.89884, "decode.d5.loss_cls": 0.25136, "decode.d5.loss_mask": 2.13958, "decode.d5.loss_dice": 2.85275, "decode.d6.loss_cls": 0.22355, "decode.d6.loss_mask": 2.13729, "decode.d6.loss_dice": 2.87723, "decode.d7.loss_cls": 0.22513, "decode.d7.loss_mask": 2.12527, "decode.d7.loss_dice": 2.83478, "decode.d8.loss_cls": 0.30627, "decode.d8.loss_mask": 2.13918, "decode.d8.loss_dice": 2.85345, "loss": 53.9548, "time": 0.34881}
{"mode": "train", "epoch": 2, "iter": 280, "lr": 0.00085, "memory": 9615, "data_time": 0.00727, "decode.loss_cls": 0.31422, "decode.loss_mask": 2.1566, "decode.loss_dice": 2.68549, "decode.d0.loss_cls": 1.31474, "decode.d0.loss_mask": 2.14495, "decode.d0.loss_dice": 2.65182, "decode.d1.loss_cls": 0.29747, "decode.d1.loss_mask": 2.16321, "decode.d1.loss_dice": 2.66307, "decode.d2.loss_cls": 0.30469, "decode.d2.loss_mask": 2.14936, "decode.d2.loss_dice": 2.64294, "decode.d3.loss_cls": 0.32843, "decode.d3.loss_mask": 2.16649, "decode.d3.loss_dice": 2.63697, "decode.d4.loss_cls": 0.30541, "decode.d4.loss_mask": 2.29864, "decode.d4.loss_dice": 2.71376, "decode.d5.loss_cls": 0.26409, "decode.d5.loss_mask": 2.18668, "decode.d5.loss_dice": 2.66571, "decode.d6.loss_cls": 0.20766, "decode.d6.loss_mask": 2.17996, "decode.d6.loss_dice": 2.65768, "decode.d7.loss_cls": 0.19821, "decode.d7.loss_mask": 2.14935, "decode.d7.loss_dice": 2.64661, "decode.d8.loss_cls": 0.29965, "decode.d8.loss_mask": 2.1608, "decode.d8.loss_dice": 2.65375, "loss": 52.20841, "time": 0.34903}
{"mode": "train", "epoch": 2, "iter": 290, "lr": 0.00088, "memory": 9615, "data_time": 0.00792, "decode.loss_cls": 0.42639, "decode.loss_mask": 1.98799, "decode.loss_dice": 2.55218, "decode.d0.loss_cls": 1.2145, "decode.d0.loss_mask": 1.95883, "decode.d0.loss_dice": 2.59523, "decode.d1.loss_cls": 0.3977, "decode.d1.loss_mask": 1.9535, "decode.d1.loss_dice": 2.55306, "decode.d2.loss_cls": 0.47665, "decode.d2.loss_mask": 1.98101, "decode.d2.loss_dice": 2.55449, "decode.d3.loss_cls": 0.40048, "decode.d3.loss_mask": 2.00428, "decode.d3.loss_dice": 2.56989, "decode.d4.loss_cls": 0.55911, "decode.d4.loss_mask": 1.99111, "decode.d4.loss_dice": 2.5471, "decode.d5.loss_cls": 0.49197, "decode.d5.loss_mask": 1.96418, "decode.d5.loss_dice": 2.57201, "decode.d6.loss_cls": 0.45593, "decode.d6.loss_mask": 1.9661, "decode.d6.loss_dice": 2.56847, "decode.d7.loss_cls": 0.48676, "decode.d7.loss_mask": 1.98418, "decode.d7.loss_dice": 2.56773, "decode.d8.loss_cls": 0.4966, "decode.d8.loss_mask": 2.00873, "decode.d8.loss_dice": 2.57493, "loss": 50.86112, "time": 0.35487}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00091, "memory": 9615, "data_time": 0.00763, "decode.loss_cls": 0.48806, "decode.loss_mask": 2.17348, "decode.loss_dice": 2.8517, "decode.d0.loss_cls": 1.13705, "decode.d0.loss_mask": 2.12591, "decode.d0.loss_dice": 2.77965, "decode.d1.loss_cls": 0.57185, "decode.d1.loss_mask": 2.16816, "decode.d1.loss_dice": 2.83301, "decode.d2.loss_cls": 0.58979, "decode.d2.loss_mask": 2.13966, "decode.d2.loss_dice": 2.83981, "decode.d3.loss_cls": 0.6083, "decode.d3.loss_mask": 2.12531, "decode.d3.loss_dice": 2.86783, "decode.d4.loss_cls": 0.94921, "decode.d4.loss_mask": 2.11628, "decode.d4.loss_dice": 2.86322, "decode.d5.loss_cls": 0.64561, "decode.d5.loss_mask": 2.20342, "decode.d5.loss_dice": 2.92432, "decode.d6.loss_cls": 0.40378, "decode.d6.loss_mask": 2.15813, "decode.d6.loss_dice": 2.81458, "decode.d7.loss_cls": 0.42828, "decode.d7.loss_mask": 2.12796, "decode.d7.loss_dice": 2.82537, "decode.d8.loss_cls": 0.51242, "decode.d8.loss_mask": 2.14559, "decode.d8.loss_dice": 2.90164, "loss": 56.31939, "time": 0.35379}
{"mode": "train", "epoch": 2, "iter": 310, "lr": 0.00094, "memory": 9615, "data_time": 0.00776, "decode.loss_cls": 0.6948, "decode.loss_mask": 2.22663, "decode.loss_dice": 2.77231, "decode.d0.loss_cls": 1.04475, "decode.d0.loss_mask": 2.20175, "decode.d0.loss_dice": 2.65817, "decode.d1.loss_cls": 0.40996, "decode.d1.loss_mask": 2.25909, "decode.d1.loss_dice": 2.7631, "decode.d2.loss_cls": 0.6856, "decode.d2.loss_mask": 2.22246, "decode.d2.loss_dice": 2.81237, "decode.d3.loss_cls": 0.70728, "decode.d3.loss_mask": 2.20128, "decode.d3.loss_dice": 2.79809, "decode.d4.loss_cls": 1.08262, "decode.d4.loss_mask": 2.18148, "decode.d4.loss_dice": 2.76877, "decode.d5.loss_cls": 1.00829, "decode.d5.loss_mask": 2.25166, "decode.d5.loss_dice": 2.88317, "decode.d6.loss_cls": 0.82103, "decode.d6.loss_mask": 2.24469, "decode.d6.loss_dice": 2.74743, "decode.d7.loss_cls": 0.5976, "decode.d7.loss_mask": 2.30613, "decode.d7.loss_dice": 2.78712, "decode.d8.loss_cls": 0.87081, "decode.d8.loss_mask": 2.28099, "decode.d8.loss_dice": 2.80288, "loss": 58.09231, "time": 0.35425}
{"mode": "train", "epoch": 2, "iter": 320, "lr": 0.00097, "memory": 9615, "data_time": 0.00758, "decode.loss_cls": 0.64633, "decode.loss_mask": 2.40646, "decode.loss_dice": 2.89252, "decode.d0.loss_cls": 1.00447, "decode.d0.loss_mask": 2.31379, "decode.d0.loss_dice": 2.83044, "decode.d1.loss_cls": 1.98158, "decode.d1.loss_mask": 2.91256, "decode.d1.loss_dice": 3.31857, "decode.d2.loss_cls": 2.79168, "decode.d2.loss_mask": 4.68686, "decode.d2.loss_dice": 3.26416, "decode.d3.loss_cls": 2.55699, "decode.d3.loss_mask": 2.56405, "decode.d3.loss_dice": 3.19596, "decode.d4.loss_cls": 2.09515, "decode.d4.loss_mask": 2.37057, "decode.d4.loss_dice": 3.07424, "decode.d5.loss_cls": 1.67231, "decode.d5.loss_mask": 2.46784, "decode.d5.loss_dice": 3.03521, "decode.d6.loss_cls": 1.84955, "decode.d6.loss_mask": 2.46165, "decode.d6.loss_dice": 3.0283, "decode.d7.loss_cls": 1.04788, "decode.d7.loss_mask": 2.37992, "decode.d7.loss_dice": 2.91719, "decode.d8.loss_cls": 1.24788, "decode.d8.loss_mask": 2.43275, "decode.d8.loss_dice": 2.99626, "loss": 74.44312, "time": 0.34967}
{"mode": "train", "epoch": 3, "iter": 330, "lr": 0.00101, "memory": 9615, "data_time": 0.21896, "decode.loss_cls": 1.23784, "decode.loss_mask": 2.52437, "decode.loss_dice": 3.2082, "decode.d0.loss_cls": 0.98851, "decode.d0.loss_mask": 2.36795, "decode.d0.loss_dice": 3.10931, "decode.d1.loss_cls": 2.4486, "decode.d1.loss_mask": 2.63915, "decode.d1.loss_dice": 3.52471, "decode.d2.loss_cls": 2.17689, "decode.d2.loss_mask": 2.64998, "decode.d2.loss_dice": 3.46452, "decode.d3.loss_cls": 2.17435, "decode.d3.loss_mask": 2.55536, "decode.d3.loss_dice": 3.48183, "decode.d4.loss_cls": 2.10405, "decode.d4.loss_mask": 2.76676, "decode.d4.loss_dice": 3.57072, "decode.d5.loss_cls": 3.40391, "decode.d5.loss_mask": 3.04586, "decode.d5.loss_dice": 3.62257, "decode.d6.loss_cls": 2.22851, "decode.d6.loss_mask": 2.90639, "decode.d6.loss_dice": 3.33572, "decode.d7.loss_cls": 1.67717, "decode.d7.loss_mask": 2.41365, "decode.d7.loss_dice": 3.22815, "decode.d8.loss_cls": 1.57634, "decode.d8.loss_mask": 2.52641, "decode.d8.loss_dice": 3.23176, "loss": 80.18954, "time": 0.56864}
{"mode": "train", "epoch": 3, "iter": 340, "lr": 0.00104, "memory": 9615, "data_time": 0.00818, "decode.loss_cls": 1.90474, "decode.loss_mask": 2.37021, "decode.loss_dice": 3.50115, "decode.d0.loss_cls": 0.9415, "decode.d0.loss_mask": 2.33026, "decode.d0.loss_dice": 3.41787, "decode.d1.loss_cls": 2.03664, "decode.d1.loss_mask": 2.36141, "decode.d1.loss_dice": 3.54739, "decode.d2.loss_cls": 1.7833, "decode.d2.loss_mask": 2.42874, "decode.d2.loss_dice": 3.50389, "decode.d3.loss_cls": 2.13765, "decode.d3.loss_mask": 2.42328, "decode.d3.loss_dice": 3.55553, "decode.d4.loss_cls": 2.00506, "decode.d4.loss_mask": 2.55631, "decode.d4.loss_dice": 3.63631, "decode.d5.loss_cls": 2.34952, "decode.d5.loss_mask": 2.83578, "decode.d5.loss_dice": 3.70919, "decode.d6.loss_cls": 2.62651, "decode.d6.loss_mask": 3.17503, "decode.d6.loss_dice": 3.66524, "decode.d7.loss_cls": 2.71858, "decode.d7.loss_mask": 2.81022, "decode.d7.loss_dice": 3.58094, "decode.d8.loss_cls": 2.18916, "decode.d8.loss_mask": 2.45633, "decode.d8.loss_dice": 3.52653, "loss": 82.08426, "time": 0.35325}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.00107, "memory": 9615, "data_time": 0.00745, "decode.loss_cls": 1.91934, "decode.loss_mask": 2.42404, "decode.loss_dice": 3.68504, "decode.d0.loss_cls": 0.97806, "decode.d0.loss_mask": 2.13175, "decode.d0.loss_dice": 3.61268, "decode.d1.loss_cls": 2.1069, "decode.d1.loss_mask": 2.0986, "decode.d1.loss_dice": 3.61758, "decode.d2.loss_cls": 2.29205, "decode.d2.loss_mask": 2.38752, "decode.d2.loss_dice": 3.78899, "decode.d3.loss_cls": 2.16197, "decode.d3.loss_mask": 2.86838, "decode.d3.loss_dice": 3.6716, "decode.d4.loss_cls": 2.16569, "decode.d4.loss_mask": 2.98954, "decode.d4.loss_dice": 3.84283, "decode.d5.loss_cls": 2.15696, "decode.d5.loss_mask": 3.01109, "decode.d5.loss_dice": 3.83414, "decode.d6.loss_cls": 2.35719, "decode.d6.loss_mask": 3.15449, "decode.d6.loss_dice": 3.85315, "decode.d7.loss_cls": 2.40659, "decode.d7.loss_mask": 3.23008, "decode.d7.loss_dice": 3.90344, "decode.d8.loss_cls": 2.15003, "decode.d8.loss_mask": 2.29096, "decode.d8.loss_dice": 3.71011, "loss": 84.80078, "time": 0.34889}
{"mode": "train", "epoch": 3, "iter": 360, "lr": 0.0011, "memory": 9615, "data_time": 0.00728, "decode.loss_cls": 2.58224, "decode.loss_mask": 2.96816, "decode.loss_dice": 3.98149, "decode.d0.loss_cls": 0.92045, "decode.d0.loss_mask": 2.09765, "decode.d0.loss_dice": 3.65656, "decode.d1.loss_cls": 2.1379, "decode.d1.loss_mask": 3.00287, "decode.d1.loss_dice": 3.92697, "decode.d2.loss_cls": 2.12647, "decode.d2.loss_mask": 2.94689, "decode.d2.loss_dice": 4.01812, "decode.d3.loss_cls": 2.16193, "decode.d3.loss_mask": 3.00714, "decode.d3.loss_dice": 3.96123, "decode.d4.loss_cls": 2.21394, "decode.d4.loss_mask": 3.00088, "decode.d4.loss_dice": 3.92446, "decode.d5.loss_cls": 2.29615, "decode.d5.loss_mask": 2.97211, "decode.d5.loss_dice": 3.9682, "decode.d6.loss_cls": 2.11312, "decode.d6.loss_mask": 2.99486, "decode.d6.loss_dice": 4.01586, "decode.d7.loss_cls": 2.13846, "decode.d7.loss_mask": 3.01778, "decode.d7.loss_dice": 4.03254, "decode.d8.loss_cls": 2.31216, "decode.d8.loss_mask": 3.20847, "decode.d8.loss_dice": 3.97622, "loss": 89.68127, "time": 0.35012}
{"mode": "train", "epoch": 3, "iter": 370, "lr": 0.00113, "memory": 9615, "data_time": 0.00781, "decode.loss_cls": 2.18667, "decode.loss_mask": 2.75658, "decode.loss_dice": 4.10088, "decode.d0.loss_cls": 0.90267, "decode.d0.loss_mask": 1.87988, "decode.d0.loss_dice": 3.89791, "decode.d1.loss_cls": 2.06034, "decode.d1.loss_mask": 2.55303, "decode.d1.loss_dice": 4.00149, "decode.d2.loss_cls": 2.11929, "decode.d2.loss_mask": 2.79663, "decode.d2.loss_dice": 4.09445, "decode.d3.loss_cls": 2.13399, "decode.d3.loss_mask": 2.77241, "decode.d3.loss_dice": 4.16787, "decode.d4.loss_cls": 2.10867, "decode.d4.loss_mask": 2.75029, "decode.d4.loss_dice": 4.15137, "decode.d5.loss_cls": 2.14754, "decode.d5.loss_mask": 2.74004, "decode.d5.loss_dice": 4.15482, "decode.d6.loss_cls": 2.13929, "decode.d6.loss_mask": 2.76243, "decode.d6.loss_dice": 4.14195, "decode.d7.loss_cls": 2.09695, "decode.d7.loss_mask": 2.76804, "decode.d7.loss_dice": 4.05263, "decode.d8.loss_cls": 2.13048, "decode.d8.loss_mask": 2.78152, "decode.d8.loss_dice": 4.10313, "loss": 87.45328, "time": 0.35252}
{"mode": "train", "epoch": 3, "iter": 380, "lr": 0.00116, "memory": 9615, "data_time": 0.00724, "decode.loss_cls": 2.05527, "decode.loss_mask": 3.00422, "decode.loss_dice": 3.91082, "decode.d0.loss_cls": 0.92646, "decode.d0.loss_mask": 1.82151, "decode.d0.loss_dice": 3.60327, "decode.d1.loss_cls": 2.01544, "decode.d1.loss_mask": 2.66258, "decode.d1.loss_dice": 3.81877, "decode.d2.loss_cls": 2.02914, "decode.d2.loss_mask": 3.02687, "decode.d2.loss_dice": 3.91049, "decode.d3.loss_cls": 2.0314, "decode.d3.loss_mask": 3.04576, "decode.d3.loss_dice": 3.8526, "decode.d4.loss_cls": 2.06252, "decode.d4.loss_mask": 3.02518, "decode.d4.loss_dice": 3.88116, "decode.d5.loss_cls": 2.03782, "decode.d5.loss_mask": 3.03942, "decode.d5.loss_dice": 3.88755, "decode.d6.loss_cls": 2.02501, "decode.d6.loss_mask": 3.00264, "decode.d6.loss_dice": 3.89173, "decode.d7.loss_cls": 2.05148, "decode.d7.loss_mask": 3.05597, "decode.d7.loss_dice": 3.94801, "decode.d8.loss_cls": 2.04117, "decode.d8.loss_mask": 3.01702, "decode.d8.loss_dice": 3.88214, "loss": 86.56341, "time": 0.35366}
{"mode": "train", "epoch": 3, "iter": 390, "lr": 0.00119, "memory": 9615, "data_time": 0.00731, "decode.loss_cls": 2.13584, "decode.loss_mask": 3.03294, "decode.loss_dice": 3.89757, "decode.d0.loss_cls": 0.86754, "decode.d0.loss_mask": 1.74683, "decode.d0.loss_dice": 3.60013, "decode.d1.loss_cls": 1.8804, "decode.d1.loss_mask": 2.30295, "decode.d1.loss_dice": 3.64939, "decode.d2.loss_cls": 2.07213, "decode.d2.loss_mask": 2.88206, "decode.d2.loss_dice": 3.8906, "decode.d3.loss_cls": 2.02245, "decode.d3.loss_mask": 2.98841, "decode.d3.loss_dice": 3.92483, "decode.d4.loss_cls": 2.02102, "decode.d4.loss_mask": 2.94704, "decode.d4.loss_dice": 3.95068, "decode.d5.loss_cls": 2.04043, "decode.d5.loss_mask": 2.96696, "decode.d5.loss_dice": 4.03793, "decode.d6.loss_cls": 2.02428, "decode.d6.loss_mask": 2.98395, "decode.d6.loss_dice": 3.93554, "decode.d7.loss_cls": 2.12261, "decode.d7.loss_mask": 2.64946, "decode.d7.loss_dice": 3.86873, "decode.d8.loss_cls": 2.00633, "decode.d8.loss_mask": 2.93172, "decode.d8.loss_dice": 3.97115, "loss": 85.35189, "time": 0.35251}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00122, "memory": 9615, "data_time": 0.00723, "decode.loss_cls": 2.10759, "decode.loss_mask": 2.5552, "decode.loss_dice": 3.72599, "decode.d0.loss_cls": 0.82006, "decode.d0.loss_mask": 2.00116, "decode.d0.loss_dice": 3.62572, "decode.d1.loss_cls": 1.98422, "decode.d1.loss_mask": 2.13992, "decode.d1.loss_dice": 3.71109, "decode.d2.loss_cls": 2.16707, "decode.d2.loss_mask": 2.71134, "decode.d2.loss_dice": 3.85075, "decode.d3.loss_cls": 2.16667, "decode.d3.loss_mask": 2.92711, "decode.d3.loss_dice": 3.90665, "decode.d4.loss_cls": 1.98595, "decode.d4.loss_mask": 2.53068, "decode.d4.loss_dice": 3.72933, "decode.d5.loss_cls": 2.29969, "decode.d5.loss_mask": 2.7441, "decode.d5.loss_dice": 3.80941, "decode.d6.loss_cls": 2.14676, "decode.d6.loss_mask": 2.91763, "decode.d6.loss_dice": 3.93492, "decode.d7.loss_cls": 2.09358, "decode.d7.loss_mask": 2.70301, "decode.d7.loss_dice": 3.62374, "decode.d8.loss_cls": 2.11623, "decode.d8.loss_mask": 3.54765, "decode.d8.loss_dice": 3.75897, "loss": 84.34219, "time": 0.35071}
{"mode": "val", "epoch": 3, "iter": 20, "lr": 0.00122, "aAcc": 0.0157, "mIoU": 0.007, "mAcc": 0.1602, "IoU.bg": 0.0, "IoU.Anchovy": 0.0112, "IoU.Olives": 0.031, "IoU.Salami": 0.0, "IoU.Red_Pepper": 0.0, "IoU.Yellow_Pepper": 0.0, "Acc.bg": 0.0, "Acc.Anchovy": 0.6142, "Acc.Olives": 0.347, "Acc.Salami": 0.0, "Acc.Red_Pepper": 0.0, "Acc.Yellow_Pepper": 0.0}
{"mode": "train", "epoch": 3, "iter": 410, "lr": 0.00125, "memory": 9615, "data_time": 0.16167, "decode.loss_cls": 1.89739, "decode.loss_mask": 2.16802, "decode.loss_dice": 3.6202, "decode.d0.loss_cls": 0.68424, "decode.d0.loss_mask": 2.05981, "decode.d0.loss_dice": 3.57321, "decode.d1.loss_cls": 2.37143, "decode.d1.loss_mask": 2.85316, "decode.d1.loss_dice": 3.7982, "decode.d2.loss_cls": 1.9652, "decode.d2.loss_mask": 2.39644, "decode.d2.loss_dice": 3.58614, "decode.d3.loss_cls": 2.1031, "decode.d3.loss_mask": 2.88754, "decode.d3.loss_dice": 3.76233, "decode.d4.loss_cls": 1.89179, "decode.d4.loss_mask": 2.31493, "decode.d4.loss_dice": 3.69917, "decode.d5.loss_cls": 2.1878, "decode.d5.loss_mask": 2.46751, "decode.d5.loss_dice": 3.65018, "decode.d6.loss_cls": 2.08123, "decode.d6.loss_mask": 3.09084, "decode.d6.loss_dice": 3.81173, "decode.d7.loss_cls": 2.03339, "decode.d7.loss_mask": 2.59482, "decode.d7.loss_dice": 3.87936, "decode.d8.loss_cls": 1.86619, "decode.d8.loss_mask": 2.39123, "decode.d8.loss_dice": 3.90032, "loss": 81.5869, "time": 0.50786}
{"mode": "train", "epoch": 3, "iter": 420, "lr": 0.00128, "memory": 9615, "data_time": 0.00743, "decode.loss_cls": 2.11786, "decode.loss_mask": 2.90319, "decode.loss_dice": 3.77869, "decode.d0.loss_cls": 0.78668, "decode.d0.loss_mask": 2.13246, "decode.d0.loss_dice": 3.68526, "decode.d1.loss_cls": 2.27645, "decode.d1.loss_mask": 2.17731, "decode.d1.loss_dice": 3.72, "decode.d2.loss_cls": 2.036, "decode.d2.loss_mask": 2.76281, "decode.d2.loss_dice": 3.82612, "decode.d3.loss_cls": 2.24881, "decode.d3.loss_mask": 2.98874, "decode.d3.loss_dice": 3.9836, "decode.d4.loss_cls": 2.29098, "decode.d4.loss_mask": 2.98132, "decode.d4.loss_dice": 3.94354, "decode.d5.loss_cls": 2.15581, "decode.d5.loss_mask": 2.88554, "decode.d5.loss_dice": 3.94265, "decode.d6.loss_cls": 2.13604, "decode.d6.loss_mask": 2.922, "decode.d6.loss_dice": 3.8934, "decode.d7.loss_cls": 2.17156, "decode.d7.loss_mask": 3.35214, "decode.d7.loss_dice": 3.69827, "decode.d8.loss_cls": 1.95807, "decode.d8.loss_mask": 2.62597, "decode.d8.loss_dice": 3.92228, "loss": 86.30354, "time": 0.35084}
